{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"re",
				"response\tparam"
			],
			[
				"ec",
				"encoding=\tparam"
			],
			[
				"ex",
				"example_code\tstatement"
			],
			[
				"P",
				"PythonExample\tmodule"
			],
			[
				"ty",
				"try\tTry/Except"
			],
			[
				"li",
				"li_box\tstatement"
			],
			[
				"e",
				"engine=\tparam"
			],
			[
				"C",
				"CssMisleadSpider\tmodule"
			],
			[
				"da",
				"datetime\tmodule"
			],
			[
				"D",
				"DateEncoder"
			],
			[
				"c",
				"callback=\tparam"
			],
			[
				"di",
				"dict1\tstatement"
			],
			[
				"web_",
				"web_url"
			],
			[
				"md",
				"md_res\tstatement"
			],
			[
				"url",
				"url_hash"
			],
			[
				"an",
				"answer_amount\tstatement"
			],
			[
				"date",
				"datetime_l\tstatement"
			],
			[
				"zhihu",
				"zhihu_hotqus"
			],
			[
				"pi",
				"pipelines"
			],
			[
				"scrapy",
				"scrapy_redis"
			],
			[
				"ke",
				"keyword_rank"
			],
			[
				"in",
				"insert_sql\tstatement"
			],
			[
				"we",
				"web_url"
			],
			[
				"k",
				"keyword_rank"
			],
			[
				"Z",
				"ZhihuHotQusSpider"
			],
			[
				"fo",
				"follow\tstatement"
			],
			[
				"st",
				"start_urls\tstatement"
			],
			[
				"Cookie_",
				"cookie_dict"
			],
			[
				"guss",
				"guess_time"
			],
			[
				"ran",
				"random\tfunction"
			],
			[
				"f",
				"Field\tclass"
			],
			[
				"cla",
				"class_name\tstatement"
			],
			[
				"is",
				"is_left\tstatement"
			],
			[
				"find",
				"find_all\tfunction"
			],
			[
				"se",
				"Selector\tclass"
			],
			[
				"div",
				"div_list\tstatement"
			],
			[
				"i",
				"ifmain\tif __name__ == '__main__'"
			],
			[
				"im",
				"import\tkeyword"
			],
			[
				"pe",
				"prettify\tfunction"
			],
			[
				"cou",
				"comment_nums\tstatement"
			],
			[
				"ne",
				"next_url\tstatement"
			],
			[
				"wr",
				"DictWriter"
			],
			[
				"td",
				"td_string\tstatement"
			],
			[
				"get",
				"get_text"
			],
			[
				"str",
				"string"
			],
			[
				"p",
				"parse_html\tfunction"
			],
			[
				"t",
				"t_list\tstatement"
			],
			[
				"du",
				"dump\tfunction"
			],
			[
				"u",
				"utf-8"
			],
			[
				"w",
				"write\tfunction"
			],
			[
				"my",
				"my_control\tstatement"
			],
			[
				"len",
				"length\tstatement"
			],
			[
				"temp",
				"temp"
			],
			[
				"z",
				"z_c"
			],
			[
				"loo",
				"loop_queue"
			],
			[
				"base",
				"base_string"
			],
			[
				"tem",
				"temp_string"
			],
			[
				"turn",
				"turn_right_string"
			],
			[
				"tm",
				"temp_list"
			],
			[
				"l",
				"lenght"
			],
			[
				"loop",
				"loop_count"
			],
			[
				"r",
				"r_temp"
			],
			[
				"en",
				"encoding"
			],
			[
				"str2",
				"string2"
			],
			[
				"stg1",
				"string1"
			],
			[
				"g",
				"goods"
			],
			[
				"pa",
				"page_text\tstatement"
			],
			[
				"zhi",
				"zhihu_selenium"
			],
			[
				"page",
				"page_num"
			],
			[
				"item",
				"item_list\tstatement"
			],
			[
				"de",
				"DeferredLock\tclass"
			],
			[
				"resp",
				"response"
			],
			[
				"pro",
				"process_request"
			],
			[
				"data",
				"datatime"
			],
			[
				"pr",
				"proxy\tstatement"
			],
			[
				"free",
				"FreeIpItem\tclass"
			],
			[
				"ti",
				"timedelta\tclass"
			],
			[
				"dat",
				"datetime\tclass"
			],
			[
				"it",
				"item_list\tstatement"
			],
			[
				"loa",
				"loads\tfunction"
			],
			[
				"n",
				"news_heat"
			],
			[
				"new",
				"news_title"
			],
			[
				"news",
				"news_heat"
			],
			[
				"index",
				"index-list-tmpl"
			],
			[
				"app",
				"append"
			],
			[
				"index_",
				"index_images_li"
			],
			[
				"image",
				"image_title"
			],
			[
				"all",
				"all_image\tstatement"
			],
			[
				"ds",
				"desc"
			],
			[
				"pag",
				"paginate"
			],
			[
				"o",
				"order_by"
			],
			[
				"ge",
				"get_json"
			],
			[
				"ib",
				"ibox-title"
			],
			[
				"DR",
				"dropzone\tstatement"
			],
			[
				"flas",
				"flask_dropzone\tmodule"
			],
			[
				"cr",
				"current_app\tinstance"
			],
			[
				"nav",
				"navbar-right"
			],
			[
				"Co",
				"Comment"
			],
			[
				"L",
				"label"
			],
			[
				"user",
				"user_id"
			],
			[
				"err",
				"errmsg"
			],
			[
				"op",
				"option\tTag"
			],
			[
				"req",
				"req_json"
			],
			[
				"ava",
				"avatarUrl"
			],
			[
				"fun",
				"function"
			],
			[
				"F",
				"Field\tclass"
			],
			[
				"us",
				"user-agent"
			],
			[
				"fu",
				"function"
			],
			[
				"lo",
				"logger"
			],
			[
				"ima",
				"imageCodeId"
			],
			[
				"sys",
				"system\tfunction"
			],
			[
				"M",
				"MigrateCommand\tinstance"
			],
			[
				"mi",
				"MigrateCommand\tstatement"
			],
			[
				"redis",
				"redis_store\tstatement"
			],
			[
				"b",
				"Blueprint\tclass"
			],
			[
				"d",
				"db\tstatement"
			],
			[
				"flask",
				"flask_wtf\tmodule"
			],
			[
				"s",
				"Session\tclass"
			],
			[
				"R",
				"REDIS_PORT\tstatement"
			],
			[
				"config",
				"config_name\tparam"
			],
			[
				"cre",
				"create_app\tfunction"
			],
			[
				"SSI",
				"session\tinstance"
			],
			[
				"fr",
				"from_object\tfunction"
			],
			[
				"FLAS",
				"flask_sqlalchemy\tmodule"
			],
			[
				"if",
				"ifmain\tif __name__ == '__main__'"
			],
			[
				"up",
				"up_his"
			],
			[
				"db",
				"dbpool"
			],
			[
				"con",
				"content"
			]
		]
	},
	"buffers":
	[
		{
			"file": "start.py",
			"settings":
			{
				"buffer_size": 80,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "2021-01-09 18:15:27 [scrapy.utils.log] INFO: Scrapy 2.0.0 started (bot: PythonExample)\n2021-01-09 18:15:27 [scrapy.utils.log] INFO: Versions: lxml 4.5.0.0, libxml2 2.9.5, cssselect 1.1.0, parsel 1.5.2, w3lib 1.21.0, Twisted 19.10.0, Python 3.8.2 (tags/v3.8.2:7b3ab59, Feb 25 2020, 23:03:10) [MSC v.1916 64 bit (AMD64)], pyOpenSSL 19.1.0 (OpenSSL 1.1.1d  10 Sep 2019), cryptography 2.8, Platform Windows-7-6.1.7601-SP1\n2021-01-09 18:15:27 [scrapy.utils.log] DEBUG: Using reactor: twisted.internet.selectreactor.SelectReactor\n2021-01-09 18:15:27 [scrapy.crawler] INFO: Overridden settings:\n{'BOT_NAME': 'PythonExample',\n 'DOWNLOAD_DELAY': 3,\n 'NEWSPIDER_MODULE': 'PythonExample.spiders',\n 'SPIDER_MODULES': ['PythonExample.spiders']}\n2021-01-09 18:15:27 [scrapy.extensions.telnet] INFO: Telnet Password: 24503ad3f8e45bea\n2021-01-09 18:15:27 [scrapy.middleware] INFO: Enabled extensions:\n['scrapy.extensions.corestats.CoreStats',\n 'scrapy.extensions.telnet.TelnetConsole',\n 'scrapy.extensions.logstats.LogStats']\n2021-01-09 18:15:27 [scrapy.middleware] INFO: Enabled downloader middlewares:\n['scrapy.downloadermiddlewares.httpauth.HttpAuthMiddleware',\n 'scrapy.downloadermiddlewares.downloadtimeout.DownloadTimeoutMiddleware',\n 'scrapy.downloadermiddlewares.defaultheaders.DefaultHeadersMiddleware',\n 'scrapy.downloadermiddlewares.useragent.UserAgentMiddleware',\n 'scrapy.downloadermiddlewares.retry.RetryMiddleware',\n 'scrapy.downloadermiddlewares.redirect.MetaRefreshMiddleware',\n 'scrapy.downloadermiddlewares.httpcompression.HttpCompressionMiddleware',\n 'scrapy.downloadermiddlewares.redirect.RedirectMiddleware',\n 'scrapy.downloadermiddlewares.cookies.CookiesMiddleware',\n 'scrapy.downloadermiddlewares.httpproxy.HttpProxyMiddleware',\n 'scrapy.downloadermiddlewares.stats.DownloaderStats']\n2021-01-09 18:15:27 [scrapy.middleware] INFO: Enabled spider middlewares:\n['scrapy.spidermiddlewares.httperror.HttpErrorMiddleware',\n 'scrapy.spidermiddlewares.offsite.OffsiteMiddleware',\n 'scrapy.spidermiddlewares.referer.RefererMiddleware',\n 'scrapy.spidermiddlewares.urllength.UrlLengthMiddleware',\n 'scrapy.spidermiddlewares.depth.DepthMiddleware']\n2021-01-09 18:15:27 [scrapy.middleware] INFO: Enabled item pipelines:\n['PythonExample.pipelines.PythonexamplePipeline']\n2021-01-09 18:15:27 [scrapy.core.engine] INFO: Spider opened\n2021-01-09 18:15:27 [scrapy.extensions.logstats] INFO: Crawled 0 pages (at 0 pages/min), scraped 0 items (at 0 items/min)\n2021-01-09 18:15:27 [scrapy.extensions.telnet] INFO: Telnet console listening on 127.0.0.1:6023\n2021-01-09 18:15:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-examples.html> (referer: None)\n2021-01-09 18:15:31 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-simplestopwatch.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:15:31 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-simplestopwatch.html>\n{'content': ['实例',\n             ' ',\n             'import',\n             ' ',\n             'time',\n             '\\n  \\n',\n             'print',\n             '(',\n             \"'\",\n             '按下回车开始计时，按下 Ctrl + C 停止计时。',\n             \"'\",\n             ')',\n             '\\n',\n             'while',\n             ' ',\n             'True',\n             ':\\n    \\n    ',\n             'input',\n             '(',\n             '\"',\n             '\"',\n             ')',\n             ' ',\n             '# 如果是 python 2.x 版本请使用 raw_input() ',\n             '\\n    ',\n             'starttime',\n             ' = ',\n             'time',\n             '.',\n             'time',\n             '(',\n             ')',\n             '\\n    ',\n             'print',\n             '(',\n             \"'\",\n             '开始',\n             \"'\",\n             ')',\n             '\\n    ',\n             'try',\n             ':\\n        ',\n             'while',\n             ' ',\n             'True',\n             ':\\n            ',\n             'print',\n             '(',\n             \"'\",\n             '计时: ',\n             \"'\",\n             ', ',\n             'round',\n             '(',\n             'time',\n             '.',\n             'time',\n             '(',\n             ')',\n             ' - ',\n             'starttime',\n             ', ',\n             '0',\n             ')',\n             ', ',\n             \"'\",\n             '秒',\n             \"'\",\n             ', ',\n             'end',\n             '=',\n             '\"',\n             '\\\\r',\n             '\"',\n             ')',\n             '\\n            ',\n             'time',\n             '.',\n             'sleep',\n             '(',\n             '1',\n             ')',\n             '\\n    ',\n             'except',\n             ' ',\n             'KeyboardInterrupt',\n             ':\\n        ',\n             'print',\n             '(',\n             \"'\",\n             '结束',\n             \"'\",\n             ')',\n             '\\n        ',\n             'endtime',\n             ' = ',\n             'time',\n             '.',\n             'time',\n             '(',\n             ')',\n             '\\n        ',\n             'print',\n             '(',\n             \"'\",\n             '总共的时间为:',\n             \"'\",\n             ', ',\n             'round',\n             '(',\n             'endtime',\n             ' - ',\n             'starttime',\n             ', ',\n             '2',\n             ')',\n             ',',\n             \"'\",\n             'secs',\n             \"'\",\n             ')',\n             '\\n        ',\n             'break'],\n 'title': 'Python 实现秒表功能'}\n2021-01-09 18:15:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-five-fish.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:15:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-five-fish.html>\n{'content': ['实例',\n             ' ',\n             '\\n',\n             'def',\n             ' main',\n             '(',\n             ')',\n             ':',\n             '\\n\\xa0 \\xa0 fish ',\n             '=',\n             ' ',\n             '1',\n             '\\n\\xa0 \\xa0 ',\n             'while',\n             ' ',\n             'True',\n             ':',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 total',\n             ',',\n             ' enough ',\n             '=',\n             ' fish',\n             ',',\n             ' ',\n             'True',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 ',\n             'for',\n             ' _ ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             '5',\n             ')',\n             ':',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 \\xa0 \\xa0 ',\n             'if',\n             ' ',\n             '(',\n             'total - ',\n             '1',\n             ')',\n             ' % ',\n             '5',\n             ' ',\n             '==',\n             ' ',\n             '0',\n             ':',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 \\xa0 \\xa0 \\xa0 \\xa0 total ',\n             '=',\n             ' ',\n             '(',\n             'total - ',\n             '1',\n             ')',\n             ' \\xa0// \\xa0',\n             '5',\n             ' * ',\n             '4',\n             ' ',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 \\xa0 \\xa0 ',\n             'else',\n             ':',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 \\xa0 \\xa0 \\xa0 \\xa0 enough ',\n             '=',\n             ' ',\n             'False',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 \\xa0 \\xa0 \\xa0 \\xa0 ',\n             'break',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 ',\n             'if',\n             ' enough:',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 \\xa0 \\xa0 ',\n             'print',\n             '(',\n             'f',\n             \"'总共有{fish}条鱼'\",\n             ')',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 \\xa0 \\xa0 ',\n             'break',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 fish +',\n             '=',\n             ' ',\n             '1',\n             '\\n',\n             '\\n',\n             '\\n',\n             'if',\n             ' __name__ ',\n             '==',\n             ' ',\n             \"'__main__'\",\n             ':',\n             '\\n\\xa0 \\xa0 main',\n             '(',\n             ')',\n             '\\n'],\n 'title': 'Python 五人分鱼'}\n2021-01-09 18:15:38 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-joseph-life-dead-game.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:15:38 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-joseph-life-dead-game.html>\n{'content': ['实例',\n             'people',\n             '=',\n             '{',\n             '}',\n             '\\n',\n             'for',\n             ' ',\n             'x',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             '1',\n             ',',\n             '31',\n             ')',\n             ':\\n    ',\n             'people',\n             '[',\n             'x',\n             ']',\n             '=',\n             '1',\n             '\\n# ',\n             'print',\n             '(',\n             'people',\n             ')',\n             '\\n',\n             'check',\n             '=',\n             '0',\n             '\\n',\n             'i',\n             '=',\n             '1',\n             '\\n',\n             'j',\n             '=',\n             '0',\n             '\\n',\n             'while',\n             ' ',\n             'i',\n             '<=',\n             '31',\n             ':\\n    ',\n             'if',\n             ' ',\n             'i',\n             ' == ',\n             '31',\n             ':\\n        ',\n             'i',\n             '=',\n             '1',\n             '\\n    ',\n             'elif',\n             ' ',\n             'j',\n             ' == ',\n             '15',\n             ':\\n        ',\n             'break',\n             '\\n    ',\n             'else',\n             ':\\n        ',\n             'if',\n             ' ',\n             'people',\n             '[',\n             'i',\n             ']',\n             ' == ',\n             '0',\n             ':\\n            ',\n             'i',\n             '+=',\n             '1',\n             '\\n            ',\n             'continue',\n             '\\n        ',\n             'else',\n             ':\\n            ',\n             'check',\n             '+=',\n             '1',\n             '\\n            ',\n             'if',\n             ' ',\n             'check',\n             ' == ',\n             '9',\n             ':\\n                ',\n             'people',\n             '[',\n             'i',\n             ']',\n             '=',\n             '0',\n             '\\n                ',\n             'check',\n             ' = ',\n             '0',\n             '\\n                ',\n             'print',\n             '(',\n             '\"',\n             '{}号下船了',\n             '\"',\n             '.',\n             'format',\n             '(',\n             'i',\n             ')',\n             ')',\n             '\\n                ',\n             'j',\n             '+=',\n             '1',\n             '\\n            ',\n             'else',\n             ':\\n                ',\n             'i',\n             '+=',\n             '1',\n             '\\n                ',\n             'continue'],\n 'title': 'Python 约瑟夫生者死者小游戏'}\n2021-01-09 18:15:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-list-operator.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:15:41 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-list-operator.html>\n{'content': ['实例',\n             ' ',\n             '\\n',\n             '>>>',\n             ' li ',\n             '=',\n             ' ',\n             '[',\n             '\"a\"',\n             ',',\n             ' ',\n             '\"b\"',\n             ',',\n             ' ',\n             '\"mpilgrim\"',\n             ',',\n             ' ',\n             '\"z\"',\n             ',',\n             ' ',\n             '\"example\"',\n             ']',\n             '\\n',\n             '>>>',\n             ' li',\n             '\\n',\n             '[',\n             \"'a'\",\n             ',',\n             ' ',\n             \"'b'\",\n             ',',\n             ' ',\n             \"'mpilgrim'\",\n             ',',\n             ' ',\n             \"'z'\",\n             ',',\n             ' ',\n             \"'example'\",\n             ']',\n             '\\n',\n             '>>>',\n             ' li',\n             '[',\n             '1',\n             ']',\n             ' \\xa0 \\xa0 \\xa0 \\xa0 ',\n             '\\n',\n             \"'b'\",\n             '\\n',\n             '实例',\n             ' ',\n             '\\n',\n             '>>>',\n             ' li ',\n             '\\n',\n             '[',\n             \"'a'\",\n             ',',\n             ' ',\n             \"'b'\",\n             ',',\n             ' ',\n             \"'mpilgrim'\",\n             ',',\n             ' ',\n             \"'z'\",\n             ',',\n             ' ',\n             \"'example'\",\n             ']',\n             '\\n',\n             '>>>',\n             ' li',\n             '[',\n             '-',\n             '1',\n             ']',\n             ' ',\n             '\\n',\n             \"'example'\",\n             '\\n',\n             '>>>',\n             ' li',\n             '[',\n             '-',\n             '3',\n             ']',\n             ' ',\n             '\\n',\n             \"'mpilgrim'\",\n             '\\n',\n             '>>>',\n             ' li ',\n             '\\n',\n             '[',\n             \"'a'\",\n             ',',\n             ' ',\n             \"'b'\",\n             ',',\n             ' ',\n             \"'mpilgrim'\",\n             ',',\n             ' ',\n             \"'z'\",\n             ',',\n             ' ',\n             \"'example'\",\n             ']',\n             '\\n',\n             '>>>',\n             ' li',\n             '[',\n             '1',\n             ':',\n             '3',\n             ']',\n             ' \\xa0',\n             '\\n',\n             '[',\n             \"'b'\",\n             ',',\n             ' ',\n             \"'mpilgrim'\",\n             ']',\n             ' ',\n             '\\n',\n             '>>>',\n             ' li',\n             '[',\n             '1',\n             ':-',\n             '1',\n             ']',\n             ' ',\n             '\\n',\n             '[',\n             \"'b'\",\n             ',',\n             ' ',\n             \"'mpilgrim'\",\n             ',',\n             ' ',\n             \"'z'\",\n             ']',\n             ' ',\n             '\\n',\n             '>>>',\n             ' li',\n             '[',\n             '0',\n             ':',\n             '3',\n             ']',\n             ' \\xa0',\n             '\\n',\n             '[',\n             \"'a'\",\n             ',',\n             ' ',\n             \"'b'\",\n             ',',\n             ' ',\n             \"'mpilgrim'\",\n             ']',\n             ' ',\n             '\\n',\n             '实例',\n             ' ',\n             '\\n',\n             '>>>',\n             ' li ',\n             '\\n',\n             '[',\n             \"'a'\",\n             ',',\n             ' ',\n             \"'b'\",\n             ',',\n             ' ',\n             \"'mpilgrim'\",\n             ',',\n             ' ',\n             \"'z'\",\n             ',',\n             ' ',\n             \"'example'\",\n             ']',\n             '\\n',\n             '>>>',\n             ' li.',\n             'append',\n             '(',\n             '\"new\"',\n             ')',\n             '\\n',\n             '>>>',\n             ' li ',\n             '\\n',\n             '[',\n             \"'a'\",\n             ',',\n             ' ',\n             \"'b'\",\n             ',',\n             ' ',\n             \"'mpilgrim'\",\n             ',',\n             ' ',\n             \"'z'\",\n             ',',\n             ' ',\n             \"'example'\",\n             ',',\n             ' ',\n             \"'new'\",\n             ']',\n             '\\n',\n             '>>>',\n             ' li.',\n             'insert',\n             '(',\n             '2',\n             ',',\n             ' ',\n             '\"new\"',\n             ')',\n             '\\n',\n             '>>>',\n             ' li ',\n             '\\n',\n             '[',\n             \"'a'\",\n             ',',\n             ' ',\n             \"'b'\",\n             ',',\n             ' ',\n             \"'new'\",\n             ',',\n             ' ',\n             \"'mpilgrim'\",\n             ',',\n             ' ',\n             \"'z'\",\n             ',',\n             ' ',\n             \"'example'\",\n             ',',\n             ' ',\n             \"'new'\",\n             ']',\n             '\\n',\n             '>>>',\n             ' li.',\n             'extend',\n             '(',\n             '[',\n             '\"two\"',\n             ',',\n             ' ',\n             '\"elements\"',\n             ']',\n             ')',\n             ' ',\n             '\\n',\n             '>>>',\n             ' li ',\n             '\\n',\n             '[',\n             \"'a'\",\n             ',',\n             ' ',\n             \"'b'\",\n             ',',\n             ' ',\n             \"'new'\",\n             ',',\n             ' ',\n             \"'mpilgrim'\",\n             ',',\n             ' ',\n             \"'z'\",\n             ',',\n             ' ',\n             \"'example'\",\n             ',',\n             ' ',\n             \"'new'\",\n             ',',\n             ' ',\n             \"'two'\",\n             ',',\n             ' ',\n             \"'elements'\",\n             ']',\n             '\\n',\n             '实例',\n             ' ',\n             '\\n',\n             '>>>',\n             ' li ',\n             '\\n',\n             '[',\n             \"'a'\",\n             ',',\n             ' ',\n             \"'b'\",\n             ',',\n             ' ',\n             \"'new'\",\n             ',',\n             ' ',\n             \"'mpilgrim'\",\n             ',',\n             ' ',\n             \"'z'\",\n             ',',\n             ' ',\n             \"'example'\",\n             ',',\n             ' ',\n             \"'new'\",\n             ',',\n             ' ',\n             \"'two'\",\n             ',',\n             ' ',\n             \"'elements'\",\n             ']',\n             '\\n',\n             '>>>',\n             ' li.',\n             'index',\n             '(',\n             '\"example\"',\n             ')',\n             '\\n',\n             '5',\n             '\\n',\n             '>>>',\n             ' li.',\n             'index',\n             '(',\n             '\"new\"',\n             ')',\n             '\\n',\n             '2',\n             '\\n',\n             '>>>',\n             ' li.',\n             'index',\n             '(',\n             '\"c\"',\n             ')',\n             '\\nTraceback ',\n             '(',\n             'innermost last',\n             ')',\n             ':',\n             '\\n\\xa0File ',\n             '\"<interactive input>\"',\n             ',',\n             ' line ',\n             '1',\n             ',',\n             ' ',\n             'in',\n             ' ?',\n             '\\n',\n             'ValueError',\n             ': ',\n             'list',\n             '.',\n             'index',\n             '(',\n             'x',\n             ')',\n             ': x ',\n             'not',\n             ' ',\n             'in',\n             ' ',\n             'list',\n             '\\n',\n             '>>>',\n             ' ',\n             '\"c\"',\n             ' ',\n             'in',\n             ' li',\n             '\\n',\n             'False',\n             '\\n',\n             '实例',\n             ' ',\n             '\\n',\n             '>>>',\n             ' li ',\n             '\\n',\n             '[',\n             \"'a'\",\n             ',',\n             ' ',\n             \"'b'\",\n             ',',\n             ' ',\n             \"'new'\",\n             ',',\n             ' ',\n             \"'mpilgrim'\",\n             ',',\n             ' ',\n             \"'z'\",\n             ',',\n             ' ',\n             \"'example'\",\n             ',',\n             ' ',\n             \"'new'\",\n             ',',\n             ' ',\n             \"'two'\",\n             ',',\n             ' ',\n             \"'elements'\",\n             ']',\n             '\\n',\n             '>>>',\n             ' li.',\n             'remove',\n             '(',\n             '\"z\"',\n             ')',\n             ' \\xa0',\n             '\\n',\n             '>>>',\n             ' li ',\n             '\\n',\n             '[',\n             \"'a'\",\n             ',',\n             ' ',\n             \"'b'\",\n             ',',\n             ' ',\n             \"'new'\",\n             ',',\n             ' ',\n             \"'mpilgrim'\",\n             ',',\n             ' ',\n             \"'example'\",\n             ',',\n             ' ',\n             \"'new'\",\n             ',',\n             ' ',\n             \"'two'\",\n             ',',\n             ' ',\n             \"'elements'\",\n             ']',\n             '\\n',\n             '>>>',\n             ' li.',\n             'remove',\n             '(',\n             '\"new\"',\n             ')',\n             ' \\xa0 \\xa0',\n             '# 删除首次出现的一个值',\n             '\\n',\n             '>>>',\n             ' li ',\n             '\\n',\n             '[',\n             \"'a'\",\n             ',',\n             ' ',\n             \"'b'\",\n             ',',\n             ' ',\n             \"'mpilgrim'\",\n             ',',\n             ' ',\n             \"'example'\",\n             ',',\n             ' ',\n             \"'new'\",\n             ',',\n             ' ',\n             \"'two'\",\n             ',',\n             ' ',\n             \"'elements'\",\n             ']',\n             ' \\xa0 \\xa0',\n             \"# 第二个 'new' 未删除\",\n             '\\n',\n             '>>>',\n             ' li.',\n             'remove',\n             '(',\n             '\"c\"',\n             ')',\n             ' \\xa0 \\xa0 ',\n             '#list 中没有找到值, Python 会引发一个异常',\n             '\\nTraceback ',\n             '(',\n             'innermost last',\n             ')',\n             ': ',\n             '\\n\\xa0File ',\n             '\"<interactive input>\"',\n             ',',\n             ' line ',\n             '1',\n             ',',\n             ' ',\n             'in',\n             ' ? ',\n             '\\n',\n             'ValueError',\n             ': ',\n             'list',\n             '.',\n             'remove',\n             '(',\n             'x',\n             ')',\n             ': x ',\n             'not',\n             ' ',\n             'in',\n             ' ',\n             'list',\n             '\\n',\n             '>>>',\n             ' li.',\n             'pop',\n             '(',\n             ')',\n             ' \\xa0 \\xa0 \\xa0',\n             '# pop 会做两件事: 删除 list 的最后一个元素, 然后返回删除元素的值。',\n             '\\n',\n             \"'elements'\",\n             '\\n',\n             '>>>',\n             ' li ',\n             '\\n',\n             '[',\n             \"'a'\",\n             ',',\n             ' ',\n             \"'b'\",\n             ',',\n             ' ',\n             \"'mpilgrim'\",\n             ',',\n             ' ',\n             \"'example'\",\n             ',',\n             ' ',\n             \"'new'\",\n             ',',\n             ' ',\n             \"'two'\",\n             ']',\n             '\\n',\n             '实例',\n             ' ',\n             '\\n',\n             '>>>',\n             ' li ',\n             '=',\n             ' ',\n             '[',\n             \"'a'\",\n             ',',\n             ' ',\n             \"'b'\",\n             ',',\n             ' ',\n             \"'mpilgrim'\",\n             ']',\n             '\\n',\n             '>>>',\n             ' li ',\n             '=',\n             ' li + ',\n             '[',\n             \"'example'\",\n             ',',\n             ' ',\n             \"'new'\",\n             ']',\n             '\\n',\n             '>>>',\n             ' li ',\n             '\\n',\n             '[',\n             \"'a'\",\n             ',',\n             ' ',\n             \"'b'\",\n             ',',\n             ' ',\n             \"'mpilgrim'\",\n             ',',\n             ' ',\n             \"'example'\",\n             ',',\n             ' ',\n             \"'new'\",\n             ']',\n             '\\n',\n             '>>>',\n             ' li +',\n             '=',\n             ' ',\n             '[',\n             \"'two'\",\n             ']',\n             '\\xa0\\xa0\\xa0\\xa0\\xa0\\xa0\\xa0\\xa0 ',\n             '\\n',\n             '>>>',\n             ' li ',\n             '\\n',\n             '[',\n             \"'a'\",\n             ',',\n             ' ',\n             \"'b'\",\n             ',',\n             ' ',\n             \"'mpilgrim'\",\n             ',',\n             ' ',\n             \"'example'\",\n             ',',\n             ' ',\n             \"'new'\",\n             ',',\n             ' ',\n             \"'two'\",\n             ']',\n             '\\n',\n             '>>>',\n             ' li ',\n             '=',\n             ' ',\n             '[',\n             '1',\n             ',',\n             ' ',\n             '2',\n             ']',\n             ' * ',\n             '3',\n             '\\n',\n             '>>>',\n             ' li ',\n             '\\n',\n             '[',\n             '1',\n             ',',\n             ' ',\n             '2',\n             ',',\n             ' ',\n             '1',\n             ',',\n             ' ',\n             '2',\n             ',',\n             ' ',\n             '1',\n             ',',\n             ' ',\n             '2',\n             ']',\n             ' ',\n             '\\n',\n             '实例',\n             ' ',\n             '\\n',\n             '>>>',\n             ' params ',\n             '=',\n             ' ',\n             '{',\n             '\"server\"',\n             ':',\n             '\"mpilgrim\"',\n             ',',\n             ' ',\n             '\"database\"',\n             ':',\n             '\"master\"',\n             ',',\n             ' ',\n             '\"uid\"',\n             ':',\n             '\"sa\"',\n             ',',\n             ' ',\n             '\"pwd\"',\n             ':',\n             '\"secret\"',\n             '}',\n             '\\n',\n             '>>>',\n             ' ',\n             '[',\n             '\"%s=%s\"',\n             ' % ',\n             '(',\n             'k',\n             ',',\n             ' v',\n             ')',\n             ' ',\n             'for',\n             ' k',\n             ',',\n             ' v ',\n             'in',\n             ' params.',\n             'items',\n             '(',\n             ')',\n             ']',\n             '\\n',\n             '[',\n             \"'server=mpilgrim'\",\n             ',',\n             ' ',\n             \"'uid=sa'\",\n             ',',\n             ' ',\n             \"'database=master'\",\n             ',',\n             ' ',\n             \"'pwd=secret'\",\n             ']',\n             '\\n',\n             '>>>',\n             ' ',\n             '\";\"',\n             '.',\n             'join',\n             '(',\n             '[',\n             '\"%s=%s\"',\n             ' % ',\n             '(',\n             'k',\n             ',',\n             ' v',\n             ')',\n             ' ',\n             'for',\n             ' k',\n             ',',\n             ' v ',\n             'in',\n             ' params.',\n             'items',\n             '(',\n             ')',\n             ']',\n             ')',\n             '\\n',\n             \"'server=mpilgrim;uid=sa;database=master;pwd=secret'\",\n             '\\n',\n             '实例',\n             ' ',\n             '\\n',\n             '>>>',\n             ' li ',\n             '=',\n             ' ',\n             '[',\n             \"'server=mpilgrim'\",\n             ',',\n             ' ',\n             \"'uid=sa'\",\n             ',',\n             ' ',\n             \"'database=master'\",\n             ',',\n             ' ',\n             \"'pwd=secret'\",\n             ']',\n             '\\n',\n             '>>>',\n             ' s ',\n             '=',\n             ' ',\n             '\";\"',\n             '.',\n             'join',\n             '(',\n             'li',\n             ')',\n             '\\n',\n             '>>>',\n             ' s ',\n             '\\n',\n             \"'server=mpilgrim;uid=sa;database=master;pwd=secret'\",\n             '\\n',\n             '>>>',\n             ' s.',\n             'split',\n             '(',\n             '\";\"',\n             ')',\n             ' \\xa0 ',\n             '\\n',\n             '[',\n             \"'server=mpilgrim'\",\n             ',',\n             ' ',\n             \"'uid=sa'\",\n             ',',\n             ' ',\n             \"'database=master'\",\n             ',',\n             ' ',\n             \"'pwd=secret'\",\n             ']',\n             '\\n',\n             '>>>',\n             ' s.',\n             'split',\n             '(',\n             '\";\"',\n             ',',\n             ' ',\n             '1',\n             ')',\n             ' ',\n             '\\n',\n             '[',\n             \"'server=mpilgrim'\",\n             ',',\n             ' ',\n             \"'uid=sa;database=master;pwd=secret'\",\n             ']',\n             '\\n',\n             '实例',\n             ' ',\n             '\\n',\n             '>>>',\n             ' li ',\n             '=',\n             ' ',\n             '[',\n             '1',\n             ',',\n             ' ',\n             '9',\n             ',',\n             ' ',\n             '8',\n             ',',\n             ' ',\n             '4',\n             ']',\n             ' ',\n             '\\n',\n             '>>>',\n             ' ',\n             '[',\n             'elem*',\n             '2',\n             ' ',\n             'for',\n             ' elem ',\n             'in',\n             ' li',\n             ']',\n             '\\xa0\\xa0\\xa0 ',\n             '\\n',\n             '[',\n             '2',\n             ',',\n             ' ',\n             '18',\n             ',',\n             ' ',\n             '16',\n             ',',\n             ' ',\n             '8',\n             ']',\n             ' ',\n             '\\n',\n             '>>>',\n             ' li',\n             '\\n',\n             '[',\n             '1',\n             ',',\n             ' ',\n             '9',\n             ',',\n             ' ',\n             '8',\n             ',',\n             ' ',\n             '4',\n             ']',\n             ' ',\n             '\\n',\n             '>>>',\n             ' li ',\n             '=',\n             ' ',\n             '[',\n             'elem*',\n             '2',\n             ' ',\n             'for',\n             ' elem ',\n             'in',\n             ' li',\n             ']',\n             ' ',\n             '\\n',\n             '>>>',\n             ' li ',\n             '\\n',\n             '[',\n             '2',\n             ',',\n             ' ',\n             '18',\n             ',',\n             ' ',\n             '16',\n             ',',\n             ' ',\n             '8',\n             ']',\n             ' ',\n             '\\n',\n             '实例',\n             ' ',\n             '\\n',\n             '>>>',\n             ' params ',\n             '=',\n             ' ',\n             '{',\n             '\"server\"',\n             ':',\n             '\"mpilgrim\"',\n             ',',\n             ' ',\n             '\"database\"',\n             ':',\n             '\"master\"',\n             ',',\n             ' ',\n             '\"uid\"',\n             ':',\n             '\"sa\"',\n             ',',\n             ' ',\n             '\"pwd\"',\n             ':',\n             '\"secret\"',\n             '}',\n             '\\n',\n             '>>>',\n             ' params.',\n             'keys',\n             '(',\n             ')',\n             '\\ndict_keys',\n             '(',\n             '[',\n             \"'server'\",\n             ',',\n             ' ',\n             \"'database'\",\n             ',',\n             ' ',\n             \"'uid'\",\n             ',',\n             ' ',\n             \"'pwd'\",\n             ']',\n             ')',\n             '\\n',\n             '>>>',\n             ' params.',\n             'values',\n             '(',\n             ')',\n             '\\ndict_values',\n             '(',\n             '[',\n             \"'mpilgrim'\",\n             ',',\n             ' ',\n             \"'master'\",\n             ',',\n             ' ',\n             \"'sa'\",\n             ',',\n             ' ',\n             \"'secret'\",\n             ']',\n             ')',\n             '\\n',\n             '>>>',\n             ' params.',\n             'items',\n             '(',\n             ')',\n             '\\ndict_items',\n             '(',\n             '[',\n             '(',\n             \"'server'\",\n             ',',\n             ' ',\n             \"'mpilgrim'\",\n             ')',\n             ',',\n             ' ',\n             '(',\n             \"'database'\",\n             ',',\n             ' ',\n             \"'master'\",\n             ')',\n             ',',\n             ' ',\n             '(',\n             \"'uid'\",\n             ',',\n             ' ',\n             \"'sa'\",\n             ')',\n             ',',\n             ' ',\n             '(',\n             \"'pwd'\",\n             ',',\n             ' ',\n             \"'secret'\",\n             ')',\n             ']',\n             ')',\n             '\\n',\n             '>>>',\n             ' ',\n             '[',\n             'k ',\n             'for',\n             ' k',\n             ',',\n             ' v ',\n             'in',\n             ' params.',\n             'items',\n             '(',\n             ')',\n             ']',\n             '\\n',\n             '[',\n             \"'server'\",\n             ',',\n             ' ',\n             \"'database'\",\n             ',',\n             ' ',\n             \"'uid'\",\n             ',',\n             ' ',\n             \"'pwd'\",\n             ']',\n             '\\n',\n             '>>>',\n             ' ',\n             '[',\n             'v ',\n             'for',\n             ' k',\n             ',',\n             ' v ',\n             'in',\n             ' params.',\n             'items',\n             '(',\n             ')',\n             ']',\n             '\\n',\n             '[',\n             \"'mpilgrim'\",\n             ',',\n             ' ',\n             \"'master'\",\n             ',',\n             ' ',\n             \"'sa'\",\n             ',',\n             ' ',\n             \"'secret'\",\n             ']',\n             '\\n',\n             '>>>',\n             ' ',\n             '[',\n             '\"%s=%s\"',\n             ' % ',\n             '(',\n             'k',\n             ',',\n             ' v',\n             ')',\n             ' ',\n             'for',\n             ' k',\n             ',',\n             ' v ',\n             'in',\n             ' params.',\n             'items',\n             '(',\n             ')',\n             ']',\n             '\\n',\n             '[',\n             \"'server=mpilgrim'\",\n             ',',\n             ' ',\n             \"'database=master'\",\n             ',',\n             ' ',\n             \"'uid=sa'\",\n             ',',\n             ' ',\n             \"'pwd=secret'\",\n             ']',\n             '\\n',\n             '实例',\n             ' ',\n             '\\n',\n             '>>>',\n             ' li ',\n             '=',\n             ' ',\n             '[',\n             '\"a\"',\n             ',',\n             ' ',\n             '\"mpilgrim\"',\n             ',',\n             ' ',\n             '\"foo\"',\n             ',',\n             ' ',\n             '\"b\"',\n             ',',\n             ' ',\n             '\"c\"',\n             ',',\n             ' ',\n             '\"b\"',\n             ',',\n             ' ',\n             '\"d\"',\n             ',',\n             ' ',\n             '\"d\"',\n             ']',\n             '\\n',\n             '>>>',\n             ' ',\n             '[',\n             'elem ',\n             'for',\n             ' elem ',\n             'in',\n             ' li ',\n             'if',\n             ' ',\n             'len',\n             '(',\n             'elem',\n             ')',\n             ' ',\n             '>',\n             ' ',\n             '1',\n             ']',\n             '\\n',\n             '[',\n             \"'mpilgrim'\",\n             ',',\n             ' ',\n             \"'foo'\",\n             ']',\n             '\\n',\n             '>>>',\n             ' ',\n             '[',\n             'elem ',\n             'for',\n             ' elem ',\n             'in',\n             ' li ',\n             'if',\n             ' elem ',\n             '!=',\n             ' ',\n             '\"b\"',\n             ']',\n             '\\n',\n             '[',\n             \"'a'\",\n             ',',\n             ' ',\n             \"'mpilgrim'\",\n             ',',\n             ' ',\n             \"'foo'\",\n             ',',\n             ' ',\n             \"'c'\",\n             ',',\n             ' ',\n             \"'d'\",\n             ',',\n             ' ',\n             \"'d'\",\n             ']',\n             '\\n',\n             '>>>',\n             ' ',\n             '[',\n             'elem ',\n             'for',\n             ' elem ',\n             'in',\n             ' li ',\n             'if',\n             ' li.',\n             'count',\n             '(',\n             'elem',\n             ')',\n             ' ',\n             '==',\n             ' ',\n             '1',\n             ']',\n             '\\n',\n             '[',\n             \"'a'\",\n             ',',\n             ' ',\n             \"'mpilgrim'\",\n             ',',\n             ' ',\n             \"'foo'\",\n             ',',\n             ' ',\n             \"'c'\",\n             ']',\n             '\\n'],\n 'title': 'Python list 常用操作'}\n2021-01-09 18:15:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-get-yesterday.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:15:45 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-get-yesterday.html>\n{'content': ['\\r\\n',\n             '\\r\\n',\n             '# Filename : test.py',\n             '\\n',\n             '# author by : www.runoob.com',\n             '\\n \\n',\n             '# 引入 datetime 模块',\n             '\\n',\n             'import',\n             ' ',\n             'datetime',\n             '\\n',\n             'def',\n             ' ',\n             'getYesterday',\n             '(',\n             ')',\n             ': \\n    ',\n             'today',\n             '=',\n             'datetime',\n             '.',\n             'date',\n             '.',\n             'today',\n             '(',\n             ')',\n             ' \\n    ',\n             'oneday',\n             '=',\n             'datetime',\n             '.',\n             'timedelta',\n             '(',\n             'days',\n             '=',\n             '1',\n             ')',\n             ' \\n    ',\n             'yesterday',\n             '=',\n             'today',\n             '-',\n             'oneday',\n             '  \\n    ',\n             'return',\n             ' ',\n             'yesterday',\n             '\\n \\n',\n             '# 输出',\n             '\\n',\n             'print',\n             '(',\n             'getYesterday',\n             '(',\n             ')',\n             ')',\n             '\\r\\n',\n             '\\r\\n'],\n 'title': 'Python 获取昨天日期'}\n2021-01-09 18:15:48 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-month-days.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:15:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-month-days.html>\n{'content': [' \\r\\n',\n             '实例(Python 3.0+)',\n             ' \\r\\n',\n             '\\r\\n',\n             '#!/usr/bin/python3',\n             '\\n',\n             '# author by : www.runoob.com',\n             '\\n \\n',\n             'import',\n             ' ',\n             'calendar',\n             '\\n',\n             'monthRange',\n             ' = ',\n             'calendar',\n             '.',\n             'monthrange',\n             '(',\n             '2016',\n             ',',\n             '9',\n             ')',\n             '\\n',\n             'print',\n             '(',\n             'monthRange',\n             ')',\n             '\\r\\n',\n             '\\r\\n'],\n 'title': 'Python 计算每个月天数'}\n2021-01-09 18:15:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-upper-lower.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:15:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-upper-lower.html>\n{'content': [], 'title': 'Python 字符串大小写转换'}\n2021-01-09 18:15:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-check-string.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:15:57 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-check-string.html>\n{'content': ['实例',\n             ' ',\n             '\\n',\n             '# Filename : test.py',\n             '\\n',\n             '# author by : www.runoob.com',\n             '\\n',\n             '\\n',\n             '# 测试实例一',\n             '\\n',\n             'print',\n             '(',\n             '\"测试实例一\"',\n             ')',\n             '\\n',\n             'str',\n             ' ',\n             '=',\n             ' ',\n             '\"runoob.com\"',\n             '\\n',\n             'print',\n             '(',\n             'str',\n             '.',\n             'isalnum',\n             '(',\n             ')',\n             ')',\n             ' ',\n             '# 判断所有字符都是数字或者字母',\n             '\\n',\n             'print',\n             '(',\n             'str',\n             '.',\n             'isalpha',\n             '(',\n             ')',\n             ')',\n             ' ',\n             '# 判断所有字符都是字母',\n             '\\n',\n             'print',\n             '(',\n             'str',\n             '.',\n             'isdigit',\n             '(',\n             ')',\n             ')',\n             ' ',\n             '# 判断所有字符都是数字',\n             '\\n',\n             'print',\n             '(',\n             'str',\n             '.',\n             'islower',\n             '(',\n             ')',\n             ')',\n             ' ',\n             '# 判断所有字符都是小写',\n             '\\n',\n             'print',\n             '(',\n             'str',\n             '.',\n             'isupper',\n             '(',\n             ')',\n             ')',\n             ' ',\n             '# 判断所有字符都是大写',\n             '\\n',\n             'print',\n             '(',\n             'str',\n             '.',\n             'istitle',\n             '(',\n             ')',\n             ')',\n             ' ',\n             '# 判断所有单词都是首字母大写，像标题',\n             '\\n',\n             'print',\n             '(',\n             'str',\n             '.',\n             'isspace',\n             '(',\n             ')',\n             ')',\n             ' ',\n             '# 判断所有字符都是空白字符、\\\\t、\\\\n、\\\\r',\n             '\\n',\n             '\\n',\n             'print',\n             '(',\n             '\"------------------------\"',\n             ')',\n             '\\n',\n             '\\n',\n             '# 测试实例二',\n             '\\n',\n             'print',\n             '(',\n             '\"测试实例二\"',\n             ')',\n             '\\n',\n             'str',\n             ' ',\n             '=',\n             ' ',\n             '\"runoob\"',\n             '\\n',\n             'print',\n             '(',\n             'str',\n             '.',\n             'isalnum',\n             '(',\n             ')',\n             ')',\n             ' ',\n             '\\n',\n             'print',\n             '(',\n             'str',\n             '.',\n             'isalpha',\n             '(',\n             ')',\n             ')',\n             ' ',\n             '\\n',\n             'print',\n             '(',\n             'str',\n             '.',\n             'isdigit',\n             '(',\n             ')',\n             ')',\n             ' ',\n             '\\n',\n             'print',\n             '(',\n             'str',\n             '.',\n             'islower',\n             '(',\n             ')',\n             ')',\n             ' ',\n             '\\n',\n             'print',\n             '(',\n             'str',\n             '.',\n             'isupper',\n             '(',\n             ')',\n             ')',\n             ' ',\n             '\\n',\n             'print',\n             '(',\n             'str',\n             '.',\n             'istitle',\n             '(',\n             ')',\n             ')',\n             ' ',\n             '\\n',\n             'print',\n             '(',\n             'str',\n             '.',\n             'isspace',\n             '(',\n             ')',\n             ')',\n             ' ',\n             '\\n'],\n 'title': 'Python 字符串判断'}\n2021-01-09 18:16:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-file-io.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:16:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-file-io.html>\n{'content': [' \\r\\n',\n             '实例(Python 3.0+)',\n             ' \\r\\n',\n             '\\r\\n',\n             '# Filename : test.py',\n             '\\n',\n             '# author by : www.runoob.com',\n             '\\n \\n',\n             '# 写文件',\n             '\\n',\n             'with',\n             ' ',\n             'open',\n             '(',\n             '\"',\n             'test.txt',\n             '\"',\n             ', ',\n             '\"',\n             'wt',\n             '\"',\n             ')',\n             ' ',\n             'as',\n             ' ',\n             'out_file',\n             ':\\n    ',\n             'out_file',\n             '.',\n             'write',\n             '(',\n             '\"',\n             '该文本会写入到文件中',\n             '\\\\n',\n             '看到我了吧！',\n             '\"',\n             ')',\n             '\\n \\n',\n             '# Read a file',\n             '\\n',\n             'with',\n             ' ',\n             'open',\n             '(',\n             '\"',\n             'test.txt',\n             '\"',\n             ', ',\n             '\"',\n             'rt',\n             '\"',\n             ')',\n             ' ',\n             'as',\n             ' ',\n             'in_file',\n             ':\\n    ',\n             'text',\n             ' = ',\n             'in_file',\n             '.',\n             'read',\n             '(',\n             ')',\n             '\\n \\n',\n             'print',\n             '(',\n             'text',\n             ')',\n             '\\r\\n',\n             '\\r\\n'],\n 'title': 'Python 文件 IO'}\n2021-01-09 18:16:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-fibonacci-recursion.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:16:04 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-fibonacci-recursion.html>\n{'content': [' \\r\\n',\n             '实例(Python 3.0+)',\n             ' \\r\\n',\n             '\\r\\n',\n             '# Filename : test.py',\n             '\\n',\n             '# author by : www.runoob.com',\n             '\\n \\n',\n             'def',\n             ' ',\n             'recur_fibo',\n             '(',\n             'n',\n             ')',\n             ':\\n   ',\n             '\"\"\"',\n             '递归函数\\n   输出斐波那契数列',\n             '\"\"\"',\n             '\\n   ',\n             'if',\n             ' ',\n             'n',\n             ' <= ',\n             '1',\n             ':\\n       ',\n             'return',\n             ' ',\n             'n',\n             '\\n   ',\n             'else',\n             ':\\n       ',\n             'return',\n             '(',\n             'recur_fibo',\n             '(',\n             'n',\n             '-',\n             '1',\n             ')',\n             ' + ',\n             'recur_fibo',\n             '(',\n             'n',\n             '-',\n             '2',\n             ')',\n             ')',\n             '\\n \\n \\n',\n             '# 获取用户输入',\n             '\\n',\n             'nterms',\n             ' = ',\n             'int',\n             '(',\n             'input',\n             '(',\n             '\"',\n             '您要输出几项? ',\n             '\"',\n             ')',\n             ')',\n             '\\n \\n',\n             '# 检查输入的数字是否正确',\n             '\\n',\n             'if',\n             ' ',\n             'nterms',\n             ' <= ',\n             '0',\n             ':\\n   ',\n             'print',\n             '(',\n             '\"',\n             '输入正数',\n             '\"',\n             ')',\n             '\\n',\n             'else',\n             ':\\n   ',\n             'print',\n             '(',\n             '\"',\n             '斐波那契数列:',\n             '\"',\n             ')',\n             '\\n   ',\n             'for',\n             ' ',\n             'i',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             'nterms',\n             ')',\n             ':\\n       ',\n             'print',\n             '(',\n             'recur_fibo',\n             '(',\n             'i',\n             ')',\n             ')',\n             '\\r\\n'],\n 'title': 'Python 使用递归斐波那契数列'}\n2021-01-09 18:16:08 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-calendar.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:16:08 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-calendar.html>\n{'content': [' \\r\\n',\n             '实例(Python 3.0+)',\n             ' \\r\\n',\n             '\\r\\n',\n             '# Filename : test.py',\n             '\\n',\n             '# author by : www.runoob.com',\n             '\\n \\n',\n             '# 引入日历模块',\n             '\\n',\n             'import',\n             ' ',\n             'calendar',\n             '\\n \\n',\n             '# 输入指定年月',\n             '\\n',\n             'yy',\n             ' = ',\n             'int',\n             '(',\n             'input',\n             '(',\n             '\"',\n             '输入年份: ',\n             '\"',\n             ')',\n             ')',\n             '\\n',\n             'mm',\n             ' = ',\n             'int',\n             '(',\n             'input',\n             '(',\n             '\"',\n             '输入月份: ',\n             '\"',\n             ')',\n             ')',\n             '\\n \\n',\n             '# 显示日历',\n             '\\n',\n             'print',\n             '(',\n             'calendar',\n             '.',\n             'month',\n             '(',\n             'yy',\n             ',',\n             'mm',\n             ')',\n             ')',\n             '\\r\\n',\n             '\\r\\n'],\n 'title': 'Python 生成日历'}\n2021-01-09 18:16:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-calculator.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:16:10 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-calculator.html>\n{'content': [' \\r\\n',\n             '实例(Python 3.0+)',\n             ' \\r\\n',\n             '\\r\\n',\n             '# Filename : test.py',\n             '\\n',\n             '# author by : www.runoob.com',\n             '\\n \\n',\n             '# 定义函数',\n             '\\n',\n             'def',\n             ' ',\n             'add',\n             '(',\n             'x',\n             ', ',\n             'y',\n             ')',\n             ':\\n   ',\n             '\"\"\"',\n             '相加',\n             '\"\"\"',\n             '\\n \\n   ',\n             'return',\n             ' ',\n             'x',\n             ' + ',\n             'y',\n             '\\n \\n',\n             'def',\n             ' ',\n             'subtract',\n             '(',\n             'x',\n             ', ',\n             'y',\n             ')',\n             ':\\n   ',\n             '\"\"\"',\n             '相减',\n             '\"\"\"',\n             '\\n \\n   ',\n             'return',\n             ' ',\n             'x',\n             ' - ',\n             'y',\n             '\\n \\n',\n             'def',\n             ' ',\n             'multiply',\n             '(',\n             'x',\n             ', ',\n             'y',\n             ')',\n             ':\\n   ',\n             '\"\"\"',\n             '相乘',\n             '\"\"\"',\n             '\\n \\n   ',\n             'return',\n             ' ',\n             'x',\n             ' * ',\n             'y',\n             '\\n \\n',\n             'def',\n             ' ',\n             'divide',\n             '(',\n             'x',\n             ', ',\n             'y',\n             ')',\n             ':\\n   ',\n             '\"\"\"',\n             '相除',\n             '\"\"\"',\n             '\\n \\n   ',\n             'return',\n             ' ',\n             'x',\n             ' / ',\n             'y',\n             '\\n \\n',\n             '# 用户输入',\n             '\\n',\n             'print',\n             '(',\n             '\"',\n             '选择运算：',\n             '\"',\n             ')',\n             '\\n',\n             'print',\n             '(',\n             '\"',\n             '1、相加',\n             '\"',\n             ')',\n             '\\n',\n             'print',\n             '(',\n             '\"',\n             '2、相减',\n             '\"',\n             ')',\n             '\\n',\n             'print',\n             '(',\n             '\"',\n             '3、相乘',\n             '\"',\n             ')',\n             '\\n',\n             'print',\n             '(',\n             '\"',\n             '4、相除',\n             '\"',\n             ')',\n             '\\n \\n',\n             'choice',\n             ' = ',\n             'input',\n             '(',\n             '\"',\n             '输入你的选择(1/2/3/4):',\n             '\"',\n             ')',\n             '\\n \\n',\n             'num1',\n             ' = ',\n             'int',\n             '(',\n             'input',\n             '(',\n             '\"',\n             '输入第一个数字: ',\n             '\"',\n             ')',\n             ')',\n             '\\n',\n             'num2',\n             ' = ',\n             'int',\n             '(',\n             'input',\n             '(',\n             '\"',\n             '输入第二个数字: ',\n             '\"',\n             ')',\n             ')',\n             '\\n \\n',\n             'if',\n             ' ',\n             'choice',\n             ' == ',\n             \"'\",\n             '1',\n             \"'\",\n             ':\\n   ',\n             'print',\n             '(',\n             'num1',\n             ',',\n             '\"',\n             '+',\n             '\"',\n             ',',\n             'num2',\n             ',',\n             '\"',\n             '=',\n             '\"',\n             ', ',\n             'add',\n             '(',\n             'num1',\n             ',',\n             'num2',\n             ')',\n             ')',\n             '\\n \\n',\n             'elif',\n             ' ',\n             'choice',\n             ' == ',\n             \"'\",\n             '2',\n             \"'\",\n             ':\\n   ',\n             'print',\n             '(',\n             'num1',\n             ',',\n             '\"',\n             '-',\n             '\"',\n             ',',\n             'num2',\n             ',',\n             '\"',\n             '=',\n             '\"',\n             ', ',\n             'subtract',\n             '(',\n             'num1',\n             ',',\n             'num2',\n             ')',\n             ')',\n             '\\n \\n',\n             'elif',\n             ' ',\n             'choice',\n             ' == ',\n             \"'\",\n             '3',\n             \"'\",\n             ':\\n   ',\n             'print',\n             '(',\n             'num1',\n             ',',\n             '\"',\n             '*',\n             '\"',\n             ',',\n             'num2',\n             ',',\n             '\"',\n             '=',\n             '\"',\n             ', ',\n             'multiply',\n             '(',\n             'num1',\n             ',',\n             'num2',\n             ')',\n             ')',\n             '\\n \\n',\n             'elif',\n             ' ',\n             'choice',\n             ' == ',\n             \"'\",\n             '4',\n             \"'\",\n             ':\\n   ',\n             'print',\n             '(',\n             'num1',\n             ',',\n             '\"',\n             '/',\n             '\"',\n             ',',\n             'num2',\n             ',',\n             '\"',\n             '=',\n             '\"',\n             ', ',\n             'divide',\n             '(',\n             'num1',\n             ',',\n             'num2',\n             ')',\n             ')',\n             '\\n',\n             'else',\n             ':\\n   ',\n             'print',\n             '(',\n             '\"',\n             '非法输入',\n             '\"',\n             ')',\n             '\\r\\n',\n             '\\r\\n'],\n 'title': 'Python 简单计算器实现'}\n2021-01-09 18:16:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-lcm.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:16:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-lcm.html>\n{'content': [' \\r\\n',\n             '实例(Python 3.0+)',\n             ' \\r\\n',\n             '\\r\\n',\n             '# Filename : test.py',\n             '\\n',\n             '# author by : www.runoob.com',\n             '\\n \\n',\n             '# 定义函数',\n             '\\n',\n             'def',\n             ' ',\n             'lcm',\n             '(',\n             'x',\n             ', ',\n             'y',\n             ')',\n             ':\\n \\n   ',\n             '#  获取最大的数',\n             '\\n   ',\n             'if',\n             ' ',\n             'x',\n             ' > ',\n             'y',\n             ':\\n       ',\n             'greater',\n             ' = ',\n             'x',\n             '\\n   ',\n             'else',\n             ':\\n       ',\n             'greater',\n             ' = ',\n             'y',\n             '\\n \\n   ',\n             'while',\n             '(',\n             'True',\n             ')',\n             ':\\n       ',\n             'if',\n             '(',\n             '(',\n             'greater',\n             ' % ',\n             'x',\n             ' == ',\n             '0',\n             ')',\n             ' ',\n             'and',\n             ' ',\n             '(',\n             'greater',\n             ' % ',\n             'y',\n             ' == ',\n             '0',\n             ')',\n             ')',\n             ':\\n           ',\n             'lcm',\n             ' = ',\n             'greater',\n             '\\n           ',\n             'break',\n             '\\n       ',\n             'greater',\n             ' += ',\n             '1',\n             '\\n \\n   ',\n             'return',\n             ' ',\n             'lcm',\n             '\\n \\n \\n',\n             '# 获取用户输入',\n             '\\n',\n             'num1',\n             ' = ',\n             'int',\n             '(',\n             'input',\n             '(',\n             '\"',\n             '输入第一个数字: ',\n             '\"',\n             ')',\n             ')',\n             '\\n',\n             'num2',\n             ' = ',\n             'int',\n             '(',\n             'input',\n             '(',\n             '\"',\n             '输入第二个数字: ',\n             '\"',\n             ')',\n             ')',\n             '\\n \\n',\n             'print',\n             '(',\n             ' ',\n             'num1',\n             ',',\n             '\"',\n             '和',\n             '\"',\n             ', ',\n             'num2',\n             ',',\n             '\"',\n             '的最小公倍数为',\n             '\"',\n             ', ',\n             'lcm',\n             '(',\n             'num1',\n             ', ',\n             'num2',\n             ')',\n             ')',\n             '\\r\\n',\n             '\\r\\n'],\n 'title': 'Python 最小公倍数算法'}\n2021-01-09 18:16:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-hcf.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:16:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-hcf.html>\n{'content': [' \\r\\n',\n             '实例(Python 3.0+)',\n             ' \\r\\n',\n             '\\r\\n',\n             '# Filename : test.py',\n             '\\n',\n             '# author by : www.runoob.com',\n             '\\n \\n',\n             '# 定义一个函数',\n             '\\n',\n             'def',\n             ' ',\n             'hcf',\n             '(',\n             'x',\n             ', ',\n             'y',\n             ')',\n             ':\\n   ',\n             '\"\"\"',\n             '该函数返回两个数的最大公约数',\n             '\"\"\"',\n             '\\n \\n   ',\n             '# 获取最小值',\n             '\\n   ',\n             'if',\n             ' ',\n             'x',\n             ' > ',\n             'y',\n             ':\\n       ',\n             'smaller',\n             ' = ',\n             'y',\n             '\\n   ',\n             'else',\n             ':\\n       ',\n             'smaller',\n             ' = ',\n             'x',\n             '\\n \\n   ',\n             'for',\n             ' ',\n             'i',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             '1',\n             ',',\n             'smaller',\n             ' + ',\n             '1',\n             ')',\n             ':\\n       ',\n             'if',\n             '(',\n             '(',\n             'x',\n             ' % ',\n             'i',\n             ' == ',\n             '0',\n             ')',\n             ' ',\n             'and',\n             ' ',\n             '(',\n             'y',\n             ' % ',\n             'i',\n             ' == ',\n             '0',\n             ')',\n             ')',\n             ':\\n           ',\n             'hcf',\n             ' = ',\n             'i',\n             '\\n \\n   ',\n             'return',\n             ' ',\n             'hcf',\n             '\\n \\n \\n',\n             '# 用户输入两个数字',\n             '\\n',\n             'num1',\n             ' = ',\n             'int',\n             '(',\n             'input',\n             '(',\n             '\"',\n             '输入第一个数字: ',\n             '\"',\n             ')',\n             ')',\n             '\\n',\n             'num2',\n             ' = ',\n             'int',\n             '(',\n             'input',\n             '(',\n             '\"',\n             '输入第二个数字: ',\n             '\"',\n             ')',\n             ')',\n             '\\n \\n',\n             'print',\n             '(',\n             ' ',\n             'num1',\n             ',',\n             '\"',\n             '和',\n             '\"',\n             ', ',\n             'num2',\n             ',',\n             '\"',\n             '的最大公约数为',\n             '\"',\n             ', ',\n             'hcf',\n             '(',\n             'num1',\n             ', ',\n             'num2',\n             ')',\n             ')',\n             '\\r\\n'],\n 'title': 'Python 最大公约数算法'}\n2021-01-09 18:16:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-ascii-character.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:16:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-ascii-character.html>\n{'content': [' \\r\\n',\n             '实例(Python 3.0+)',\n             ' \\r\\n',\n             '\\r\\n',\n             '# Filename : test.py',\n             '\\n',\n             '# author by : www.runoob.com',\n             '\\n \\n',\n             '# 用户输入字符',\n             '\\n',\n             'c',\n             ' = ',\n             'input',\n             '(',\n             '\"',\n             '请输入一个字符: ',\n             '\"',\n             ')',\n             '\\n \\n',\n             '# 用户输入ASCII码，并将输入的数字转为整型',\n             '\\n',\n             'a',\n             ' = ',\n             'int',\n             '(',\n             'input',\n             '(',\n             '\"',\n             '请输入一个ASCII码: ',\n             '\"',\n             ')',\n             ')',\n             '\\n \\n \\n',\n             'print',\n             '(',\n             ' ',\n             'c',\n             ' + ',\n             '\"',\n             ' 的ASCII 码为',\n             '\"',\n             ', ',\n             'ord',\n             '(',\n             'c',\n             ')',\n             ')',\n             '\\n',\n             'print',\n             '(',\n             ' ',\n             'a',\n             ' , ',\n             '\"',\n             ' 对应的字符为',\n             '\"',\n             ', ',\n             'chr',\n             '(',\n             'a',\n             ')',\n             ')',\n             '\\r\\n'],\n 'title': 'Python ASCII码与字符相互转换'}\n2021-01-09 18:16:26 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-conversion-binary-octal-hexadecimal.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:16:26 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-conversion-binary-octal-hexadecimal.html>\n{'content': [' \\r\\n',\n             '实例(Python 3.0+)',\n             ' \\r\\n',\n             '\\r\\n',\n             '# -*- coding: UTF-8 -*-',\n             '\\n \\n',\n             '# Filename : test.py',\n             '\\n',\n             '# author by : www.runoob.com',\n             '\\n \\n',\n             '# 获取用户输入十进制数',\n             '\\n',\n             'dec',\n             ' = ',\n             'int',\n             '(',\n             'input',\n             '(',\n             '\"',\n             '输入数字：',\n             '\"',\n             ')',\n             ')',\n             '\\n \\n',\n             'print',\n             '(',\n             '\"',\n             '十进制数为：',\n             '\"',\n             ', ',\n             'dec',\n             ')',\n             '\\n',\n             'print',\n             '(',\n             '\"',\n             '转换为二进制为：',\n             '\"',\n             ', ',\n             'bin',\n             '(',\n             'dec',\n             ')',\n             ')',\n             '\\n',\n             'print',\n             '(',\n             '\"',\n             '转换为八进制为：',\n             '\"',\n             ', ',\n             'oct',\n             '(',\n             'dec',\n             ')',\n             ')',\n             '\\n',\n             'print',\n             '(',\n             '\"',\n             '转换为十六进制为：',\n             '\"',\n             ', ',\n             'hex',\n             '(',\n             'dec',\n             ')',\n             ')',\n             '\\r\\n'],\n 'title': 'Python 十进制转二进制、八进制、十六进制'}\n2021-01-09 18:16:27 [scrapy.extensions.logstats] INFO: Crawled 17 pages (at 17 pages/min), scraped 16 items (at 16 items/min)\n2021-01-09 18:16:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-topological-sorting.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:16:28 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-topological-sorting.html>\n{'content': [' \\r\\n',\n             '实例 ',\n             ' \\r\\n',\n             '\\r\\n',\n             'from',\n             ' ',\n             'collections',\n             ' ',\n             'import',\n             ' ',\n             'defaultdict',\n             ' \\n \\n',\n             'class',\n             ' ',\n             'Graph',\n             ': \\n    ',\n             'def',\n             ' ',\n             '__init__',\n             '(',\n             'self',\n             ',',\n             'vertices',\n             ')',\n             ': \\n        ',\n             'self',\n             '.',\n             'graph',\n             ' = ',\n             'defaultdict',\n             '(',\n             'list',\n             ')',\n             ' \\n        ',\n             'self',\n             '.',\n             'V',\n             ' = ',\n             'vertices',\n             '\\n  \\n    ',\n             'def',\n             ' ',\n             'addEdge',\n             '(',\n             'self',\n             ',',\n             'u',\n             ',',\n             'v',\n             ')',\n             ': \\n        ',\n             'self',\n             '.',\n             'graph',\n             '[',\n             'u',\n             ']',\n             '.',\n             'append',\n             '(',\n             'v',\n             ')',\n             ' \\n  \\n    ',\n             'def',\n             ' ',\n             'topologicalSortUtil',\n             '(',\n             'self',\n             ',',\n             'v',\n             ',',\n             'visited',\n             ',',\n             'stack',\n             ')',\n             ': \\n  \\n        ',\n             'visited',\n             '[',\n             'v',\n             ']',\n             ' = ',\n             'True',\n             '\\n  \\n        ',\n             'for',\n             ' ',\n             'i',\n             ' ',\n             'in',\n             ' ',\n             'self',\n             '.',\n             'graph',\n             '[',\n             'v',\n             ']',\n             ': \\n            ',\n             'if',\n             ' ',\n             'visited',\n             '[',\n             'i',\n             ']',\n             ' == ',\n             'False',\n             ': \\n                ',\n             'self',\n             '.',\n             'topologicalSortUtil',\n             '(',\n             'i',\n             ',',\n             'visited',\n             ',',\n             'stack',\n             ')',\n             ' \\n  \\n        ',\n             'stack',\n             '.',\n             'insert',\n             '(',\n             '0',\n             ',',\n             'v',\n             ')',\n             ' \\n  \\n    ',\n             'def',\n             ' ',\n             'topologicalSort',\n             '(',\n             'self',\n             ')',\n             ': \\n        ',\n             'visited',\n             ' = ',\n             '[',\n             'False',\n             ']',\n             '*',\n             'self',\n             '.',\n             'V',\n             ' \\n        ',\n             'stack',\n             ' =',\n             '[',\n             ']',\n             ' \\n  \\n        ',\n             'for',\n             ' ',\n             'i',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             'self',\n             '.',\n             'V',\n             ')',\n             ': \\n            ',\n             'if',\n             ' ',\n             'visited',\n             '[',\n             'i',\n             ']',\n             ' == ',\n             'False',\n             ': \\n                ',\n             'self',\n             '.',\n             'topologicalSortUtil',\n             '(',\n             'i',\n             ',',\n             'visited',\n             ',',\n             'stack',\n             ')',\n             ' \\n  \\n        ',\n             'print',\n             ' ',\n             '(',\n             'stack',\n             ')',\n             ' \\n  \\n',\n             'g',\n             '= ',\n             'Graph',\n             '(',\n             '6',\n             ')',\n             ' \\n',\n             'g',\n             '.',\n             'addEdge',\n             '(',\n             '5',\n             ', ',\n             '2',\n             ')',\n             '; \\n',\n             'g',\n             '.',\n             'addEdge',\n             '(',\n             '5',\n             ', ',\n             '0',\n             ')',\n             '; \\n',\n             'g',\n             '.',\n             'addEdge',\n             '(',\n             '4',\n             ', ',\n             '0',\n             ')',\n             '; \\n',\n             'g',\n             '.',\n             'addEdge',\n             '(',\n             '4',\n             ', ',\n             '1',\n             ')',\n             '; \\n',\n             'g',\n             '.',\n             'addEdge',\n             '(',\n             '2',\n             ', ',\n             '3',\n             ')',\n             '; \\n',\n             'g',\n             '.',\n             'addEdge',\n             '(',\n             '3',\n             ', ',\n             '1',\n             ')',\n             '; \\n  \\n',\n             'print',\n             ' ',\n             '(',\n             '\"',\n             '拓扑排序结果：',\n             '\"',\n             ')',\n             '\\n',\n             'g',\n             '.',\n             'topologicalSort',\n             '(',\n             ')',\n             '\\r\\n'],\n 'title': 'Python 拓扑排序'}\n2021-01-09 18:16:33 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-shellsort.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:16:33 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-shellsort.html>\n{'content': [' \\r\\n',\n             '实例 ',\n             ' \\r\\n',\n             '\\r\\n',\n             'def',\n             ' ',\n             'shellSort',\n             '(',\n             'arr',\n             ')',\n             ': \\n  \\n    ',\n             'n',\n             ' = ',\n             'len',\n             '(',\n             'arr',\n             ')',\n             '\\n    ',\n             'gap',\n             ' = ',\n             'int',\n             '(',\n             'n',\n             '/',\n             '2',\n             ')',\n             '\\n  \\n    ',\n             'while',\n             ' ',\n             'gap',\n             ' > ',\n             '0',\n             ': \\n  \\n        ',\n             'for',\n             ' ',\n             'i',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             'gap',\n             ',',\n             'n',\n             ')',\n             ': \\n  \\n            ',\n             'temp',\n             ' = ',\n             'arr',\n             '[',\n             'i',\n             ']',\n             ' \\n            ',\n             'j',\n             ' = ',\n             'i',\n             ' \\n            ',\n             'while',\n             '  ',\n             'j',\n             ' >= ',\n             'gap',\n             ' ',\n             'and',\n             ' ',\n             'arr',\n             '[',\n             'j',\n             '-',\n             'gap',\n             ']',\n             ' >',\n             'temp',\n             ': \\n                ',\n             'arr',\n             '[',\n             'j',\n             ']',\n             ' = ',\n             'arr',\n             '[',\n             'j',\n             '-',\n             'gap',\n             ']',\n             ' \\n                ',\n             'j',\n             ' -= ',\n             'gap',\n             ' \\n            ',\n             'arr',\n             '[',\n             'j',\n             ']',\n             ' = ',\n             'temp',\n             ' \\n        ',\n             'gap',\n             ' = ',\n             'int',\n             '(',\n             'gap',\n             '/',\n             '2',\n             ')',\n             '\\n  \\n',\n             'arr',\n             ' = ',\n             '[',\n             ' ',\n             '12',\n             ', ',\n             '34',\n             ', ',\n             '54',\n             ', ',\n             '2',\n             ', ',\n             '3',\n             ']',\n             ' \\n  \\n',\n             'n',\n             ' = ',\n             'len',\n             '(',\n             'arr',\n             ')',\n             ' \\n',\n             'print',\n             ' ',\n             '(',\n             '\"',\n             '排序前:',\n             '\"',\n             ')',\n             ' \\n',\n             'for',\n             ' ',\n             'i',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             'n',\n             ')',\n             ': \\n    ',\n             'print',\n             '(',\n             'arr',\n             '[',\n             'i',\n             ']',\n             ')',\n             ', \\n  \\n',\n             'shellSort',\n             '(',\n             'arr',\n             ')',\n             ' \\n  \\n',\n             'print',\n             ' ',\n             '(',\n             '\"',\n             '\\\\n',\n             '排序后:',\n             '\"',\n             ')',\n             ' \\n',\n             'for',\n             ' ',\n             'i',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             'n',\n             ')',\n             ': \\n    ',\n             'print',\n             '(',\n             'arr',\n             '[',\n             'i',\n             ']',\n             ')',\n             ',',\n             '\\r\\n'],\n 'title': 'Python 希尔排序'}\n2021-01-09 18:16:36 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-counting-sort.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:16:36 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-counting-sort.html>\n{'content': [' \\r\\n',\n             '实例 ',\n             ' \\r\\n',\n             '\\r\\n',\n             'def',\n             ' ',\n             'countSort',\n             '(',\n             'arr',\n             ')',\n             ': \\n  \\n    ',\n             'output',\n             ' = ',\n             '[',\n             '0',\n             ' ',\n             'for',\n             ' ',\n             'i',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             '256',\n             ')',\n             ']',\n             ' \\n  \\n    ',\n             'count',\n             ' = ',\n             '[',\n             '0',\n             ' ',\n             'for',\n             ' ',\n             'i',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             '256',\n             ')',\n             ']',\n             ' \\n  \\n    ',\n             'ans',\n             ' = ',\n             '[',\n             '\"',\n             '\"',\n             ' ',\n             'for',\n             ' ',\n             '_',\n             ' ',\n             'in',\n             ' ',\n             'arr',\n             ']',\n             ' \\n  \\n    ',\n             'for',\n             ' ',\n             'i',\n             ' ',\n             'in',\n             ' ',\n             'arr',\n             ': \\n        ',\n             'count',\n             '[',\n             'ord',\n             '(',\n             'i',\n             ')',\n             ']',\n             ' += ',\n             '1',\n             '\\n  \\n    ',\n             'for',\n             ' ',\n             'i',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             '256',\n             ')',\n             ': \\n        ',\n             'count',\n             '[',\n             'i',\n             ']',\n             ' += ',\n             'count',\n             '[',\n             'i',\n             '-',\n             '1',\n             ']',\n             ' \\n  \\n    ',\n             'for',\n             ' ',\n             'i',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             'len',\n             '(',\n             'arr',\n             ')',\n             ')',\n             ': \\n        ',\n             'output',\n             '[',\n             'count',\n             '[',\n             'ord',\n             '(',\n             'arr',\n             '[',\n             'i',\n             ']',\n             ')',\n             ']',\n             '-',\n             '1',\n             ']',\n             ' = ',\n             'arr',\n             '[',\n             'i',\n             ']',\n             ' \\n        ',\n             'count',\n             '[',\n             'ord',\n             '(',\n             'arr',\n             '[',\n             'i',\n             ']',\n             ')',\n             ']',\n             ' -= ',\n             '1',\n             '\\n  \\n    ',\n             'for',\n             ' ',\n             'i',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             'len',\n             '(',\n             'arr',\n             ')',\n             ')',\n             ': \\n        ',\n             'ans',\n             '[',\n             'i',\n             ']',\n             ' = ',\n             'output',\n             '[',\n             'i',\n             ']',\n             ' \\n    ',\n             'return',\n             ' ',\n             'ans',\n             '  \\n  \\n',\n             'arr',\n             ' = ',\n             '\"',\n             'wwwrunoobcom',\n             '\"',\n             '\\n',\n             'ans',\n             ' = ',\n             'countSort',\n             '(',\n             'arr',\n             ')',\n             ' \\n',\n             'print',\n             ' ',\n             '(',\n             ' ',\n             '\"',\n             '字符数组排序 %s',\n             '\"',\n             '  %',\n             '(',\n             '\"',\n             '\"',\n             '.',\n             'join',\n             '(',\n             'ans',\n             ')',\n             ')',\n             ' ',\n             ')',\n             '\\r\\n'],\n 'title': 'Python  计数排序'}\n2021-01-09 18:16:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-heap-sort.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:16:41 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-heap-sort.html>\n{'content': [' \\r\\n',\n             '实例 ',\n             ' \\r\\n',\n             '\\r\\n',\n             'def',\n             ' ',\n             'heapify',\n             '(',\n             'arr',\n             ', ',\n             'n',\n             ', ',\n             'i',\n             ')',\n             ': \\n    ',\n             'largest',\n             ' = ',\n             'i',\n             '  \\n    ',\n             'l',\n             ' = ',\n             '2',\n             ' * ',\n             'i',\n             ' + ',\n             '1',\n             '     ',\n             '# left = 2*i + 1 ',\n             '\\n    ',\n             'r',\n             ' = ',\n             '2',\n             ' * ',\n             'i',\n             ' + ',\n             '2',\n             '     ',\n             '# right = 2*i + 2 ',\n             '\\n  \\n    ',\n             'if',\n             ' ',\n             'l',\n             ' < ',\n             'n',\n             ' ',\n             'and',\n             ' ',\n             'arr',\n             '[',\n             'i',\n             ']',\n             ' < ',\n             'arr',\n             '[',\n             'l',\n             ']',\n             ': \\n        ',\n             'largest',\n             ' = ',\n             'l',\n             ' \\n  \\n    ',\n             'if',\n             ' ',\n             'r',\n             ' < ',\n             'n',\n             ' ',\n             'and',\n             ' ',\n             'arr',\n             '[',\n             'largest',\n             ']',\n             ' < ',\n             'arr',\n             '[',\n             'r',\n             ']',\n             ': \\n        ',\n             'largest',\n             ' = ',\n             'r',\n             ' \\n  \\n    ',\n             'if',\n             ' ',\n             'largest',\n             ' != ',\n             'i',\n             ': \\n        ',\n             'arr',\n             '[',\n             'i',\n             ']',\n             ',',\n             'arr',\n             '[',\n             'largest',\n             ']',\n             ' = ',\n             'arr',\n             '[',\n             'largest',\n             ']',\n             ',',\n             'arr',\n             '[',\n             'i',\n             ']',\n             '  ',\n             '# 交换',\n             '\\n  \\n        ',\n             'heapify',\n             '(',\n             'arr',\n             ', ',\n             'n',\n             ', ',\n             'largest',\n             ')',\n             ' \\n  \\n',\n             'def',\n             ' ',\n             'heapSort',\n             '(',\n             'arr',\n             ')',\n             ': \\n    ',\n             'n',\n             ' = ',\n             'len',\n             '(',\n             'arr',\n             ')',\n             ' \\n  \\n    ',\n             '# Build a maxheap. ',\n             '\\n    ',\n             'for',\n             ' ',\n             'i',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             'n',\n             ', -',\n             '1',\n             ', -',\n             '1',\n             ')',\n             ': \\n        ',\n             'heapify',\n             '(',\n             'arr',\n             ', ',\n             'n',\n             ', ',\n             'i',\n             ')',\n             ' \\n  \\n    ',\n             '# 一个个交换元素',\n             '\\n    ',\n             'for',\n             ' ',\n             'i',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             'n',\n             '-',\n             '1',\n             ', ',\n             '0',\n             ', -',\n             '1',\n             ')',\n             ': \\n        ',\n             'arr',\n             '[',\n             'i',\n             ']',\n             ', ',\n             'arr',\n             '[',\n             '0',\n             ']',\n             ' = ',\n             'arr',\n             '[',\n             '0',\n             ']',\n             ', ',\n             'arr',\n             '[',\n             'i',\n             ']',\n             '   ',\n             '# 交换',\n             '\\n        ',\n             'heapify',\n             '(',\n             'arr',\n             ', ',\n             'i',\n             ', ',\n             '0',\n             ')',\n             ' \\n  \\n',\n             'arr',\n             ' = ',\n             '[',\n             ' ',\n             '12',\n             ', ',\n             '11',\n             ', ',\n             '13',\n             ', ',\n             '5',\n             ', ',\n             '6',\n             ', ',\n             '7',\n             ']',\n             ' \\n',\n             'heapSort',\n             '(',\n             'arr',\n             ')',\n             ' \\n',\n             'n',\n             ' = ',\n             'len',\n             '(',\n             'arr',\n             ')',\n             ' \\n',\n             'print',\n             ' ',\n             '(',\n             '\"',\n             '排序后',\n             '\"',\n             ')',\n             ' \\n',\n             'for',\n             ' ',\n             'i',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             'n',\n             ')',\n             ': \\n    ',\n             'print',\n             ' ',\n             '(',\n             '\"',\n             '%d',\n             '\"',\n             ' %',\n             'arr',\n             '[',\n             'i',\n             ']',\n             ')',\n             ',',\n             '\\r\\n'],\n 'title': 'Python 堆排序'}\n2021-01-09 18:16:44 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-merge-sort.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:16:44 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-merge-sort.html>\n{'content': [' \\r\\n',\n             '实例 ',\n             ' \\r\\n',\n             '\\r\\n',\n             'def',\n             ' ',\n             'merge',\n             '(',\n             'arr',\n             ', ',\n             'l',\n             ', ',\n             'm',\n             ', ',\n             'r',\n             ')',\n             ': \\n    ',\n             'n1',\n             ' = ',\n             'm',\n             ' - ',\n             'l',\n             ' + ',\n             '1',\n             '\\n    ',\n             'n2',\n             ' = ',\n             'r',\n             '- ',\n             'm',\n             ' \\n  \\n    ',\n             '# 创建临时数组',\n             '\\n    ',\n             'L',\n             ' = ',\n             '[',\n             '0',\n             ']',\n             ' * ',\n             '(',\n             'n1',\n             ')',\n             '\\n    ',\n             'R',\n             ' = ',\n             '[',\n             '0',\n             ']',\n             ' * ',\n             '(',\n             'n2',\n             ')',\n             '\\n  \\n    ',\n             '# 拷贝数据到临时数组 arrays L[] 和 R[] ',\n             '\\n    ',\n             'for',\n             ' ',\n             'i',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             '0',\n             ' , ',\n             'n1',\n             ')',\n             ': \\n        ',\n             'L',\n             '[',\n             'i',\n             ']',\n             ' = ',\n             'arr',\n             '[',\n             'l',\n             ' + ',\n             'i',\n             ']',\n             ' \\n  \\n    ',\n             'for',\n             ' ',\n             'j',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             '0',\n             ' , ',\n             'n2',\n             ')',\n             ': \\n        ',\n             'R',\n             '[',\n             'j',\n             ']',\n             ' = ',\n             'arr',\n             '[',\n             'm',\n             ' + ',\n             '1',\n             ' + ',\n             'j',\n             ']',\n             ' \\n  \\n    ',\n             '# 归并临时数组到 arr[l..r] ',\n             '\\n    ',\n             'i',\n             ' = ',\n             '0',\n             '     ',\n             '# 初始化第一个子数组的索引',\n             '\\n    ',\n             'j',\n             ' = ',\n             '0',\n             '     ',\n             '# 初始化第二个子数组的索引',\n             '\\n    ',\n             'k',\n             ' = ',\n             'l',\n             '     ',\n             '# 初始归并子数组的索引',\n             '\\n  \\n    ',\n             'while',\n             ' ',\n             'i',\n             ' < ',\n             'n1',\n             ' ',\n             'and',\n             ' ',\n             'j',\n             ' < ',\n             'n2',\n             ' : \\n        ',\n             'if',\n             ' ',\n             'L',\n             '[',\n             'i',\n             ']',\n             ' <= ',\n             'R',\n             '[',\n             'j',\n             ']',\n             ': \\n            ',\n             'arr',\n             '[',\n             'k',\n             ']',\n             ' = ',\n             'L',\n             '[',\n             'i',\n             ']',\n             ' \\n            ',\n             'i',\n             ' += ',\n             '1',\n             '\\n        ',\n             'else',\n             ': \\n            ',\n             'arr',\n             '[',\n             'k',\n             ']',\n             ' = ',\n             'R',\n             '[',\n             'j',\n             ']',\n             ' \\n            ',\n             'j',\n             ' += ',\n             '1',\n             '\\n        ',\n             'k',\n             ' += ',\n             '1',\n             '\\n  \\n    ',\n             '# 拷贝 L[] 的保留元素',\n             '\\n    ',\n             'while',\n             ' ',\n             'i',\n             ' < ',\n             'n1',\n             ': \\n        ',\n             'arr',\n             '[',\n             'k',\n             ']',\n             ' = ',\n             'L',\n             '[',\n             'i',\n             ']',\n             ' \\n        ',\n             'i',\n             ' += ',\n             '1',\n             '\\n        ',\n             'k',\n             ' += ',\n             '1',\n             '\\n  \\n    ',\n             '# 拷贝 R[] 的保留元素',\n             '\\n    ',\n             'while',\n             ' ',\n             'j',\n             ' < ',\n             'n2',\n             ': \\n        ',\n             'arr',\n             '[',\n             'k',\n             ']',\n             ' = ',\n             'R',\n             '[',\n             'j',\n             ']',\n             ' \\n        ',\n             'j',\n             ' += ',\n             '1',\n             '\\n        ',\n             'k',\n             ' += ',\n             '1',\n             '\\n  \\n',\n             'def',\n             ' ',\n             'mergeSort',\n             '(',\n             'arr',\n             ',',\n             'l',\n             ',',\n             'r',\n             ')',\n             ': \\n    ',\n             'if',\n             ' ',\n             'l',\n             ' < ',\n             'r',\n             ': \\n  \\n        \\n        ',\n             'm',\n             ' = ',\n             'int',\n             '(',\n             '(',\n             'l',\n             '+',\n             '(',\n             'r',\n             '-',\n             '1',\n             ')',\n             ')',\n             '/',\n             '2',\n             ')',\n             '\\n  \\n       \\n        ',\n             'mergeSort',\n             '(',\n             'arr',\n             ', ',\n             'l',\n             ', ',\n             'm',\n             ')',\n             ' \\n        ',\n             'mergeSort',\n             '(',\n             'arr',\n             ', ',\n             'm',\n             '+',\n             '1',\n             ', ',\n             'r',\n             ')',\n             ' \\n        ',\n             'merge',\n             '(',\n             'arr',\n             ', ',\n             'l',\n             ', ',\n             'm',\n             ', ',\n             'r',\n             ')',\n             ' \\n  \\n  \\n',\n             'arr',\n             ' = ',\n             '[',\n             '12',\n             ', ',\n             '11',\n             ', ',\n             '13',\n             ', ',\n             '5',\n             ', ',\n             '6',\n             ', ',\n             '7',\n             ']',\n             ' \\n',\n             'n',\n             ' = ',\n             'len',\n             '(',\n             'arr',\n             ')',\n             ' \\n',\n             'print',\n             ' ',\n             '(',\n             '\"',\n             '给定的数组',\n             '\"',\n             ')',\n             ' \\n',\n             'for',\n             ' ',\n             'i',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             'n',\n             ')',\n             ': \\n    ',\n             'print',\n             ' ',\n             '(',\n             '\"',\n             '%d',\n             '\"',\n             ' %',\n             'arr',\n             '[',\n             'i',\n             ']',\n             ')',\n             ', \\n  \\n',\n             'mergeSort',\n             '(',\n             'arr',\n             ',',\n             '0',\n             ',',\n             'n',\n             '-',\n             '1',\n             ')',\n             ' \\n',\n             'print',\n             ' ',\n             '(',\n             '\"',\n             '\\\\n',\n             '\\\\n',\n             '排序后的数组',\n             '\"',\n             ')',\n             ' \\n',\n             'for',\n             ' ',\n             'i',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             'n',\n             ')',\n             ': \\n    ',\n             'print',\n             ' ',\n             '(',\n             '\"',\n             '%d',\n             '\"',\n             ' %',\n             'arr',\n             '[',\n             'i',\n             ']',\n             ')',\n             ',',\n             '\\r\\n'],\n 'title': 'Python 归并排序'}\n2021-01-09 18:16:48 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-bubble-sort.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:16:48 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-bubble-sort.html>\n{'content': [' \\r\\n',\n             '实例 ',\n             ' \\r\\n',\n             '\\r\\n',\n             'def',\n             ' ',\n             'bubbleSort',\n             '(',\n             'arr',\n             ')',\n             ':\\n    ',\n             'n',\n             ' = ',\n             'len',\n             '(',\n             'arr',\n             ')',\n             '\\n \\n    ',\n             '# 遍历所有数组元素',\n             '\\n    ',\n             'for',\n             ' ',\n             'i',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             'n',\n             ')',\n             ':\\n \\n        ',\n             '# Last i elements are already in place',\n             '\\n        ',\n             'for',\n             ' ',\n             'j',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             '0',\n             ', ',\n             'n',\n             '-',\n             'i',\n             '-',\n             '1',\n             ')',\n             ':\\n \\n            ',\n             'if',\n             ' ',\n             'arr',\n             '[',\n             'j',\n             ']',\n             ' > ',\n             'arr',\n             '[',\n             'j',\n             '+',\n             '1',\n             ']',\n             ' :\\n                ',\n             'arr',\n             '[',\n             'j',\n             ']',\n             ', ',\n             'arr',\n             '[',\n             'j',\n             '+',\n             '1',\n             ']',\n             ' = ',\n             'arr',\n             '[',\n             'j',\n             '+',\n             '1',\n             ']',\n             ', ',\n             'arr',\n             '[',\n             'j',\n             ']',\n             '\\n \\n',\n             'arr',\n             ' = ',\n             '[',\n             '64',\n             ', ',\n             '34',\n             ', ',\n             '25',\n             ', ',\n             '12',\n             ', ',\n             '22',\n             ', ',\n             '11',\n             ', ',\n             '90',\n             ']',\n             '\\n \\n',\n             'bubbleSort',\n             '(',\n             'arr',\n             ')',\n             '\\n \\n',\n             'print',\n             ' ',\n             '(',\n             '\"',\n             '排序后的数组:',\n             '\"',\n             ')',\n             '\\n',\n             'for',\n             ' ',\n             'i',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             'len',\n             '(',\n             'arr',\n             ')',\n             ')',\n             ':\\n    ',\n             'print',\n             ' ',\n             '(',\n             '\"',\n             '%d',\n             '\"',\n             ' %',\n             'arr',\n             '[',\n             'i',\n             ']',\n             ')',\n             ',',\n             '\\r\\n'],\n 'title': 'Python 冒泡排序'}\n2021-01-09 18:16:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-selection-sort.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:16:52 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-selection-sort.html>\n{'content': [' \\r\\n',\n             '实例 ',\n             ' \\r\\n',\n             '\\r\\n',\n             'import',\n             ' ',\n             'sys',\n             ' \\n',\n             'A',\n             ' = ',\n             '[',\n             '64',\n             ', ',\n             '25',\n             ', ',\n             '12',\n             ', ',\n             '22',\n             ', ',\n             '11',\n             ']',\n             ' \\n  \\n',\n             'for',\n             ' ',\n             'i',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             'len',\n             '(',\n             'A',\n             ')',\n             ')',\n             ': \\n      \\n   \\n    ',\n             'min_idx',\n             ' = ',\n             'i',\n             ' \\n    ',\n             'for',\n             ' ',\n             'j',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             'i',\n             '+',\n             '1',\n             ', ',\n             'len',\n             '(',\n             'A',\n             ')',\n             ')',\n             ': \\n        ',\n             'if',\n             ' ',\n             'A',\n             '[',\n             'min_idx',\n             ']',\n             ' > ',\n             'A',\n             '[',\n             'j',\n             ']',\n             ': \\n            ',\n             'min_idx',\n             ' = ',\n             'j',\n             ' \\n                \\n    ',\n             'A',\n             '[',\n             'i',\n             ']',\n             ', ',\n             'A',\n             '[',\n             'min_idx',\n             ']',\n             ' = ',\n             'A',\n             '[',\n             'min_idx',\n             ']',\n             ', ',\n             'A',\n             '[',\n             'i',\n             ']',\n             ' \\n  \\n',\n             'print',\n             ' ',\n             '(',\n             '\"',\n             '排序后的数组：',\n             '\"',\n             ')',\n             ' \\n',\n             'for',\n             ' ',\n             'i',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             'len',\n             '(',\n             'A',\n             ')',\n             ')',\n             ': \\n    ',\n             'print',\n             '(',\n             '\"',\n             '%d',\n             '\"',\n             ' %',\n             'A',\n             '[',\n             'i',\n             ']',\n             ')',\n             ',',\n             '\\r\\n'],\n 'title': 'Python 选择排序'}\n2021-01-09 18:16:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-quicksort.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:16:56 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-quicksort.html>\n{'content': [' \\r\\n',\n             '实例 ',\n             ' \\r\\n',\n             '\\r\\n',\n             'def',\n             ' ',\n             'partition',\n             '(',\n             'arr',\n             ',',\n             'low',\n             ',',\n             'high',\n             ')',\n             ': \\n    ',\n             'i',\n             ' = ',\n             '(',\n             ' ',\n             'low',\n             '-',\n             '1',\n             ' ',\n             ')',\n             '         ',\n             '# 最小元素索引',\n             '\\n    ',\n             'pivot',\n             ' = ',\n             'arr',\n             '[',\n             'high',\n             ']',\n             '     \\n  \\n    ',\n             'for',\n             ' ',\n             'j',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             'low',\n             ' , ',\n             'high',\n             ')',\n             ': \\n  \\n        ',\n             '# 当前元素小于或等于 pivot ',\n             '\\n        ',\n             'if',\n             '   ',\n             'arr',\n             '[',\n             'j',\n             ']',\n             ' <= ',\n             'pivot',\n             ': \\n          \\n            ',\n             'i',\n             ' = ',\n             'i',\n             '+',\n             '1',\n             ' \\n            ',\n             'arr',\n             '[',\n             'i',\n             ']',\n             ',',\n             'arr',\n             '[',\n             'j',\n             ']',\n             ' = ',\n             'arr',\n             '[',\n             'j',\n             ']',\n             ',',\n             'arr',\n             '[',\n             'i',\n             ']',\n             ' \\n  \\n    ',\n             'arr',\n             '[',\n             'i',\n             '+',\n             '1',\n             ']',\n             ',',\n             'arr',\n             '[',\n             'high',\n             ']',\n             ' = ',\n             'arr',\n             '[',\n             'high',\n             ']',\n             ',',\n             'arr',\n             '[',\n             'i',\n             '+',\n             '1',\n             ']',\n             ' \\n    ',\n             'return',\n             ' ',\n             '(',\n             ' ',\n             'i',\n             '+',\n             '1',\n             ' ',\n             ')',\n             ' \\n  \\n \\n',\n             '# arr[] --> 排序数组',\n             '\\n',\n             '# low  --> 起始索引',\n             '\\n',\n             '# high  --> 结束索引',\n             '\\n  \\n',\n             '# 快速排序函数',\n             '\\n',\n             'def',\n             ' ',\n             'quickSort',\n             '(',\n             'arr',\n             ',',\n             'low',\n             ',',\n             'high',\n             ')',\n             ': \\n    ',\n             'if',\n             ' ',\n             'low',\n             ' < ',\n             'high',\n             ': \\n  \\n        ',\n             'pi',\n             ' = ',\n             'partition',\n             '(',\n             'arr',\n             ',',\n             'low',\n             ',',\n             'high',\n             ')',\n             ' \\n  \\n        ',\n             'quickSort',\n             '(',\n             'arr',\n             ', ',\n             'low',\n             ', ',\n             'pi',\n             '-',\n             '1',\n             ')',\n             ' \\n        ',\n             'quickSort',\n             '(',\n             'arr',\n             ', ',\n             'pi',\n             '+',\n             '1',\n             ', ',\n             'high',\n             ')',\n             ' \\n  \\n',\n             'arr',\n             ' = ',\n             '[',\n             '10',\n             ', ',\n             '7',\n             ', ',\n             '8',\n             ', ',\n             '9',\n             ', ',\n             '1',\n             ', ',\n             '5',\n             ']',\n             ' \\n',\n             'n',\n             ' = ',\n             'len',\n             '(',\n             'arr',\n             ')',\n             ' \\n',\n             'quickSort',\n             '(',\n             'arr',\n             ',',\n             '0',\n             ',',\n             'n',\n             '-',\n             '1',\n             ')',\n             ' \\n',\n             'print',\n             ' ',\n             '(',\n             '\"',\n             '排序后的数组:',\n             '\"',\n             ')',\n             ' \\n',\n             'for',\n             ' ',\n             'i',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             'n',\n             ')',\n             ': \\n    ',\n             'print',\n             ' ',\n             '(',\n             '\"',\n             '%d',\n             '\"',\n             ' %',\n             'arr',\n             '[',\n             'i',\n             ']',\n             ')',\n             ',',\n             '\\r\\n'],\n 'title': 'Python 快速排序'}\n2021-01-09 18:16:59 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-insertion-sort.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:17:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-insertion-sort.html>\n{'content': [' \\r\\n',\n             '实例',\n             ' \\r\\n',\n             '\\r\\n',\n             'def',\n             ' ',\n             'insertionSort',\n             '(',\n             'arr',\n             ')',\n             ': \\n  \\n    ',\n             'for',\n             ' ',\n             'i',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             '1',\n             ', ',\n             'len',\n             '(',\n             'arr',\n             ')',\n             ')',\n             ': \\n  \\n        ',\n             'key',\n             ' = ',\n             'arr',\n             '[',\n             'i',\n             ']',\n             ' \\n  \\n        ',\n             'j',\n             ' = ',\n             'i',\n             '-',\n             '1',\n             '\\n        ',\n             'while',\n             ' ',\n             'j',\n             ' >=',\n             '0',\n             ' ',\n             'and',\n             ' ',\n             'key',\n             ' < ',\n             'arr',\n             '[',\n             'j',\n             ']',\n             ' : \\n                ',\n             'arr',\n             '[',\n             'j',\n             '+',\n             '1',\n             ']',\n             ' = ',\n             'arr',\n             '[',\n             'j',\n             ']',\n             ' \\n                ',\n             'j',\n             ' -= ',\n             '1',\n             '\\n        ',\n             'arr',\n             '[',\n             'j',\n             '+',\n             '1',\n             ']',\n             ' = ',\n             'key',\n             ' \\n  \\n  \\n',\n             'arr',\n             ' = ',\n             '[',\n             '12',\n             ', ',\n             '11',\n             ', ',\n             '13',\n             ', ',\n             '5',\n             ', ',\n             '6',\n             ']',\n             ' \\n',\n             'insertionSort',\n             '(',\n             'arr',\n             ')',\n             ' \\n',\n             'print',\n             ' ',\n             '(',\n             '\"',\n             '排序后的数组:',\n             '\"',\n             ')',\n             ' \\n',\n             'for',\n             ' ',\n             'i',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             'len',\n             '(',\n             'arr',\n             ')',\n             ')',\n             ': \\n    ',\n             'print',\n             ' ',\n             '(',\n             '\"',\n             '%d',\n             '\"',\n             ' %',\n             'arr',\n             '[',\n             'i',\n             ']',\n             ')',\n             '\\r\\n'],\n 'title': 'Python 插入排序'}\n2021-01-09 18:17:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-linear-search.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:17:03 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-linear-search.html>\n{'content': [' \\r\\n',\n             '实例',\n             ' \\r\\n',\n             '\\r\\n',\n             'def',\n             ' ',\n             'search',\n             '(',\n             'arr',\n             ', ',\n             'n',\n             ', ',\n             'x',\n             ')',\n             ': \\n  \\n    ',\n             'for',\n             ' ',\n             'i',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             ' ',\n             '(',\n             '0',\n             ', ',\n             'n',\n             ')',\n             ': \\n        ',\n             'if',\n             ' ',\n             '(',\n             'arr',\n             '[',\n             'i',\n             ']',\n             ' == ',\n             'x',\n             ')',\n             ': \\n            ',\n             'return',\n             ' ',\n             'i',\n             '; \\n    ',\n             'return',\n             ' -',\n             '1',\n             '; \\n  \\n',\n             '# 在数组 arr 中查找字符 D',\n             '\\n',\n             'arr',\n             ' = ',\n             '[',\n             ' ',\n             \"'\",\n             'A',\n             \"'\",\n             ', ',\n             \"'\",\n             'B',\n             \"'\",\n             ', ',\n             \"'\",\n             'C',\n             \"'\",\n             ', ',\n             \"'\",\n             'D',\n             \"'\",\n             ', ',\n             \"'\",\n             'E',\n             \"'\",\n             ' ',\n             ']',\n             '; \\n',\n             'x',\n             ' = ',\n             \"'\",\n             'D',\n             \"'\",\n             '; \\n',\n             'n',\n             ' = ',\n             'len',\n             '(',\n             'arr',\n             ')',\n             '; \\n',\n             'result',\n             ' = ',\n             'search',\n             '(',\n             'arr',\n             ', ',\n             'n',\n             ', ',\n             'x',\n             ')',\n             ' \\n',\n             'if',\n             '(',\n             'result',\n             ' == -',\n             '1',\n             ')',\n             ': \\n    ',\n             'print',\n             '(',\n             '\"',\n             '元素不在数组中',\n             '\"',\n             ')',\n             ' \\n',\n             'else',\n             ': \\n    ',\n             'print',\n             '(',\n             '\"',\n             '元素在数组中的索引为',\n             '\"',\n             ', ',\n             'result',\n             ')',\n             ';',\n             '\\r\\n'],\n 'title': 'Python 线性查找'}\n2021-01-09 18:17:06 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-binary-search.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:17:06 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-binary-search.html>\n{'content': [' \\r\\n',\n             '实例 : 递归',\n             ' \\r\\n',\n             '\\r\\n',\n             '# 返回 x 在 arr 中的索引，如果不存在返回 -1',\n             '\\n',\n             'def',\n             ' ',\n             'binarySearch',\n             ' ',\n             '(',\n             'arr',\n             ', ',\n             'l',\n             ', ',\n             'r',\n             ', ',\n             'x',\n             ')',\n             ': \\n  \\n    ',\n             '# 基本判断',\n             '\\n    ',\n             'if',\n             ' ',\n             'r',\n             ' >= ',\n             'l',\n             ': \\n  \\n        ',\n             'mid',\n             ' = ',\n             'int',\n             '(',\n             'l',\n             ' + ',\n             '(',\n             'r',\n             ' - ',\n             'l',\n             ')',\n             '/',\n             '2',\n             ')',\n             '\\n  \\n        ',\n             '# 元素整好的中间位置',\n             '\\n        ',\n             'if',\n             ' ',\n             'arr',\n             '[',\n             'mid',\n             ']',\n             ' == ',\n             'x',\n             ': \\n            ',\n             'return',\n             ' ',\n             'mid',\n             ' \\n          \\n        ',\n             '# 元素小于中间位置的元素，只需要再比较左边的元素',\n             '\\n        ',\n             'elif',\n             ' ',\n             'arr',\n             '[',\n             'mid',\n             ']',\n             ' > ',\n             'x',\n             ': \\n            ',\n             'return',\n             ' ',\n             'binarySearch',\n             '(',\n             'arr',\n             ', ',\n             'l',\n             ', ',\n             'mid',\n             '-',\n             '1',\n             ', ',\n             'x',\n             ')',\n             ' \\n  \\n        ',\n             '# 元素大于中间位置的元素，只需要再比较右边的元素',\n             '\\n        ',\n             'else',\n             ': \\n            ',\n             'return',\n             ' ',\n             'binarySearch',\n             '(',\n             'arr',\n             ', ',\n             'mid',\n             '+',\n             '1',\n             ', ',\n             'r',\n             ', ',\n             'x',\n             ')',\n             ' \\n  \\n    ',\n             'else',\n             ': \\n        ',\n             '# 不存在',\n             '\\n        ',\n             'return',\n             ' -',\n             '1',\n             '\\n  \\n',\n             '# 测试数组',\n             '\\n',\n             'arr',\n             ' = ',\n             '[',\n             ' ',\n             '2',\n             ', ',\n             '3',\n             ', ',\n             '4',\n             ', ',\n             '10',\n             ', ',\n             '40',\n             ' ',\n             ']',\n             ' \\n',\n             'x',\n             ' = ',\n             '10',\n             '\\n  \\n',\n             '# 函数调用',\n             '\\n',\n             'result',\n             ' = ',\n             'binarySearch',\n             '(',\n             'arr',\n             ', ',\n             '0',\n             ', ',\n             'len',\n             '(',\n             'arr',\n             ')',\n             '-',\n             '1',\n             ', ',\n             'x',\n             ')',\n             ' \\n  \\n',\n             'if',\n             ' ',\n             'result',\n             ' != -',\n             '1',\n             ': \\n    ',\n             'print',\n             ' ',\n             '(',\n             '\"',\n             '元素在数组中的索引为 %d',\n             '\"',\n             ' % ',\n             'result',\n             ' ',\n             ')',\n             '\\n',\n             'else',\n             ': \\n    ',\n             'print',\n             ' ',\n             '(',\n             '\"',\n             '元素不在数组中',\n             '\"',\n             ')',\n             '\\r\\n'],\n 'title': 'Python 二分查找'}\n2021-01-09 18:17:09 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-your-font.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:17:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-your-font.html>\n{'content': [' \\r\\n',\n             '实例 ',\n             ' \\r\\n',\n             '\\r\\n',\n             'name',\n             ' = ',\n             '\"',\n             'RUNOOB',\n             '\"',\n             '\\n  \\n',\n             '# 接收用户输入',\n             '\\n',\n             '# name = input(\"输入你的名字: \\\\n\\\\n\") ',\n             '\\n  \\n',\n             'lngth',\n             ' = ',\n             'len',\n             '(',\n             'name',\n             ')',\n             ' \\n',\n             'l',\n             ' = ',\n             '\"',\n             '\"',\n             ' \\n  \\n',\n             'for',\n             ' ',\n             'x',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             '0',\n             ', ',\n             'lngth',\n             ')',\n             ': \\n    ',\n             'c',\n             ' = ',\n             'name',\n             '[',\n             'x',\n             ']',\n             ' \\n    ',\n             'c',\n             ' = ',\n             'c',\n             '.',\n             'upper',\n             '(',\n             ')',\n             ' \\n      \\n    ',\n             'if',\n             ' ',\n             '(',\n             'c',\n             ' == ',\n             '\"',\n             'A',\n             '\"',\n             ')',\n             ': \\n        ',\n             'print',\n             '(',\n             '\"',\n             '..######..',\n             '\\\\n',\n             '..#....#..',\n             '\\\\n',\n             '..######..',\n             '\"',\n             ', ',\n             'end',\n             ' = ',\n             '\"',\n             ' ',\n             '\"',\n             ')',\n             ' \\n        ',\n             'print',\n             '(',\n             '\"',\n             '\\\\n',\n             '..#....#..',\n             '\\\\n',\n             '..#....#..',\n             '\\\\n',\n             '\\\\n',\n             '\"',\n             ')',\n             ' \\n          \\n    ',\n             'elif',\n             ' ',\n             '(',\n             'c',\n             ' == ',\n             '\"',\n             'B',\n             '\"',\n             ')',\n             ': \\n        ',\n             'print',\n             '(',\n             '\"',\n             '..######..',\n             '\\\\n',\n             '..#....#..',\n             '\\\\n',\n             '..#####...',\n             '\"',\n             ', ',\n             'end',\n             ' = ',\n             '\"',\n             ' ',\n             '\"',\n             ')',\n             ' \\n        ',\n             'print',\n             '(',\n             '\"',\n             '\\\\n',\n             '..#....#..',\n             '\\\\n',\n             '..######..',\n             '\\\\n',\n             '\\\\n',\n             '\"',\n             ')',\n             ' \\n          \\n    ',\n             'elif',\n             ' ',\n             '(',\n             'c',\n             ' == ',\n             '\"',\n             'C',\n             '\"',\n             ')',\n             ': \\n        ',\n             'print',\n             '(',\n             '\"',\n             '..######..',\n             '\\\\n',\n             '..#.......',\n             '\\\\n',\n             '..#.......',\n             '\"',\n             ', ',\n             'end',\n             ' = ',\n             '\"',\n             ' ',\n             '\"',\n             ')',\n             ' \\n        ',\n             'print',\n             '(',\n             '\"',\n             '\\\\n',\n             '..#.......',\n             '\\\\n',\n             '..######..',\n             '\\\\n',\n             '\\\\n',\n             '\"',\n             ')',\n             ' \\n          \\n    ',\n             'elif',\n             ' ',\n             '(',\n             'c',\n             ' == ',\n             '\"',\n             'D',\n             '\"',\n             ')',\n             ': \\n        ',\n             'print',\n             '(',\n             '\"',\n             '..#####...',\n             '\\\\n',\n             '..#....#..',\n             '\\\\n',\n             '..#....#..',\n             '\"',\n             ', ',\n             'end',\n             ' = ',\n             '\"',\n             ' ',\n             '\"',\n             ')',\n             ' \\n        ',\n             'print',\n             '(',\n             '\"',\n             '\\\\n',\n             '..#....#..',\n             '\\\\n',\n             '..#####...',\n             '\\\\n',\n             '\\\\n',\n             '\"',\n             ')',\n             ' \\n          \\n    ',\n             'elif',\n             ' ',\n             '(',\n             'c',\n             ' == ',\n             '\"',\n             'E',\n             '\"',\n             ')',\n             ': \\n        ',\n             'print',\n             '(',\n             '\"',\n             '..######..',\n             '\\\\n',\n             '..#.......',\n             '\\\\n',\n             '..#####...',\n             '\"',\n             ', ',\n             'end',\n             ' = ',\n             '\"',\n             ' ',\n             '\"',\n             ')',\n             ' \\n        ',\n             'print',\n             '(',\n             '\"',\n             '\\\\n',\n             '..#.......',\n             '\\\\n',\n             '..######..',\n             '\\\\n',\n             '\\\\n',\n             '\"',\n             ')',\n             ' \\n          \\n    ',\n             'elif',\n             ' ',\n             '(',\n             'c',\n             ' == ',\n             '\"',\n             'F',\n             '\"',\n             ')',\n             ': \\n        ',\n             'print',\n             '(',\n             '\"',\n             '..######..',\n             '\\\\n',\n             '..#.......',\n             '\\\\n',\n             '..#####...',\n             '\"',\n             ', ',\n             'end',\n             ' = ',\n             '\"',\n             ' ',\n             '\"',\n             ')',\n             ' \\n        ',\n             'print',\n             '(',\n             '\"',\n             '\\\\n',\n             '..#.......',\n             '\\\\n',\n             '..#.......',\n             '\\\\n',\n             '\\\\n',\n             '\"',\n             ')',\n             ' \\n          \\n    ',\n             'elif',\n             ' ',\n             '(',\n             'c',\n             ' == ',\n             '\"',\n             'G',\n             '\"',\n             ')',\n             ': \\n        ',\n             'print',\n             '(',\n             '\"',\n             '..######..',\n             '\\\\n',\n             '..#.......',\n             '\\\\n',\n             '..#.####..',\n             '\"',\n             ', ',\n             'end',\n             ' = ',\n             '\"',\n             ' ',\n             '\"',\n             ')',\n             ' \\n        ',\n             'print',\n             '(',\n             '\"',\n             '\\\\n',\n             '..#....#..',\n             '\\\\n',\n             '..#####...',\n             '\\\\n',\n             '\\\\n',\n             '\"',\n             ')',\n             ' \\n          \\n    ',\n             'elif',\n             ' ',\n             '(',\n             'c',\n             ' == ',\n             '\"',\n             'H',\n             '\"',\n             ')',\n             ': \\n        ',\n             'print',\n             '(',\n             '\"',\n             '..#....#..',\n             '\\\\n',\n             '..#....#..',\n             '\\\\n',\n             '..######..',\n             '\"',\n             ', ',\n             'end',\n             ' = ',\n             '\"',\n             ' ',\n             '\"',\n             ')',\n             ' \\n        ',\n             'print',\n             '(',\n             '\"',\n             '\\\\n',\n             '..#....#..',\n             '\\\\n',\n             '..#....#..',\n             '\\\\n',\n             '\\\\n',\n             '\"',\n             ')',\n             ' \\n          \\n    ',\n             'elif',\n             ' ',\n             '(',\n             'c',\n             ' == ',\n             '\"',\n             'I',\n             '\"',\n             ')',\n             ': \\n        ',\n             'print',\n             '(',\n             '\"',\n             '..######..',\n             '\\\\n',\n             '....##....',\n             '\\\\n',\n             '....##....',\n             '\"',\n             ', ',\n             'end',\n             ' = ',\n             '\"',\n             ' ',\n             '\"',\n             ')',\n             ' \\n        ',\n             'print',\n             '(',\n             '\"',\n             '\\\\n',\n             '....##....',\n             '\\\\n',\n             '..######..',\n             '\\\\n',\n             '\\\\n',\n             '\"',\n             ')',\n             ' \\n          \\n    ',\n             'elif',\n             ' ',\n             '(',\n             'c',\n             ' == ',\n             '\"',\n             'J',\n             '\"',\n             ')',\n             ': \\n        ',\n             'print',\n             '(',\n             '\"',\n             '..######..',\n             '\\\\n',\n             '....##....',\n             '\\\\n',\n             '....##....',\n             '\"',\n             ', ',\n             'end',\n             ' = ',\n             '\"',\n             ' ',\n             '\"',\n             ')',\n             ' \\n        ',\n             'print',\n             '(',\n             '\"',\n             '\\\\n',\n             '..#.##....',\n             '\\\\n',\n             '..####....',\n             '\\\\n',\n             '\\\\n',\n             '\"',\n             ')',\n             ' \\n          \\n    ',\n             'elif',\n             ' ',\n             '(',\n             'c',\n             ' == ',\n             '\"',\n             'K',\n             '\"',\n             ')',\n             ': \\n        ',\n             'print',\n             '(',\n             '\"',\n             '..#...#...',\n             '\\\\n',\n             '..#..#....',\n             '\\\\n',\n             '..##......',\n             '\"',\n             ', ',\n             'end',\n             ' = ',\n             '\"',\n             ' ',\n             '\"',\n             ')',\n             ' \\n        ',\n             'print',\n             '(',\n             '\"',\n             '\\\\n',\n             '..#..#....',\n             '\\\\n',\n             '..#...#...',\n             '\\\\n',\n             '\\\\n',\n             '\"',\n             ')',\n             ' \\n          \\n    ',\n             'elif',\n             ' ',\n             '(',\n             'c',\n             ' == ',\n             '\"',\n             'L',\n             '\"',\n             ')',\n             ': \\n        ',\n             'print',\n             '(',\n             '\"',\n             '..#.......',\n             '\\\\n',\n             '..#.......',\n             '\\\\n',\n             '..#.......',\n             '\"',\n             ', ',\n             'end',\n             ' = ',\n             '\"',\n             ' ',\n             '\"',\n             ')',\n             ' \\n        ',\n             'print',\n             '(',\n             '\"',\n             '\\\\n',\n             '..#.......',\n             '\\\\n',\n             '..######..',\n             '\\\\n',\n             '\\\\n',\n             '\"',\n             ')',\n             ' \\n          \\n    ',\n             'elif',\n             ' ',\n             '(',\n             'c',\n             ' == ',\n             '\"',\n             'M',\n             '\"',\n             ')',\n             ': \\n        ',\n             'print',\n             '(',\n             '\"',\n             '..#....#..',\n             '\\\\n',\n             '..##..##..',\n             '\\\\n',\n             '..#.##.#..',\n             '\"',\n             ', ',\n             'end',\n             ' = ',\n             '\"',\n             ' ',\n             '\"',\n             ')',\n             ' \\n        ',\n             'print',\n             '(',\n             '\"',\n             '\\\\n',\n             '..#....#..',\n             '\\\\n',\n             '..#....#..',\n             '\\\\n',\n             '\\\\n',\n             '\"',\n             ')',\n             ' \\n          \\n    ',\n             'elif',\n             ' ',\n             '(',\n             'c',\n             ' == ',\n             '\"',\n             'N',\n             '\"',\n             ')',\n             ': \\n        ',\n             'print',\n             '(',\n             '\"',\n             '..#....#..',\n             '\\\\n',\n             '..##...#..',\n             '\\\\n',\n             '..#.#..#..',\n             '\"',\n             ', ',\n             'end',\n             ' = ',\n             '\"',\n             ' ',\n             '\"',\n             ')',\n             ' \\n        ',\n             'print',\n             '(',\n             '\"',\n             '\\\\n',\n             '..#..#.#..',\n             '\\\\n',\n             '..#...##..',\n             '\\\\n',\n             '\\\\n',\n             '\"',\n             ')',\n             ' \\n          \\n    ',\n             'elif',\n             ' ',\n             '(',\n             'c',\n             ' == ',\n             '\"',\n             'O',\n             '\"',\n             ')',\n             ': \\n        ',\n             'print',\n             '(',\n             '\"',\n             '..######..',\n             '\\\\n',\n             '..#....#..',\n             '\\\\n',\n             '..#....#..',\n             '\"',\n             ', ',\n             'end',\n             ' = ',\n             '\"',\n             ' ',\n             '\"',\n             ')',\n             ' \\n        ',\n             'print',\n             '(',\n             '\"',\n             '\\\\n',\n             '..#....#..',\n             '\\\\n',\n             '..######..',\n             '\\\\n',\n             '\\\\n',\n             '\"',\n             ')',\n             ' \\n          \\n    ',\n             'elif',\n             ' ',\n             '(',\n             'c',\n             ' == ',\n             '\"',\n             'P',\n             '\"',\n             ')',\n             ': \\n        ',\n             'print',\n             '(',\n             '\"',\n             '..######..',\n             '\\\\n',\n             '..#....#..',\n             '\\\\n',\n             '..######..',\n             '\"',\n             ', ',\n             'end',\n             ' = ',\n             '\"',\n             ' ',\n             '\"',\n             ')',\n             ' \\n        ',\n             'print',\n             '(',\n             '\"',\n             '\\\\n',\n             '..#.......',\n             '\\\\n',\n             '..#.......',\n             '\\\\n',\n             '\\\\n',\n             '\"',\n             ')',\n             ' \\n          \\n    ',\n             'elif',\n             ' ',\n             '(',\n             'c',\n             ' == ',\n             '\"',\n             'Q',\n             '\"',\n             ')',\n             ': \\n        ',\n             'print',\n             '(',\n             '\"',\n             '..######..',\n             '\\\\n',\n             '..#....#..',\n             '\\\\n',\n             '..#.#..#..',\n             '\"',\n             ', ',\n             'end',\n             ' = ',\n             '\"',\n             ' ',\n             '\"',\n             ')',\n             ' \\n        ',\n             'print',\n             '(',\n             '\"',\n             '\\\\n',\n             '..#..#.#..',\n             '\\\\n',\n             '..######..',\n             '\\\\n',\n             '\\\\n',\n             '\"',\n             ')',\n             ' \\n          \\n    ',\n             'elif',\n             ' ',\n             '(',\n             'c',\n             ' == ',\n             '\"',\n             'R',\n             '\"',\n             ')',\n             ': \\n        ',\n             'print',\n             '(',\n             '\"',\n             '..######..',\n             '\\\\n',\n             '..#....#..',\n             '\\\\n',\n             '..#.##...',\n             '\"',\n             ', ',\n             'end',\n             ' = ',\n             '\"',\n             ' ',\n             '\"',\n             ')',\n             ' \\n        ',\n             'print',\n             '(',\n             '\"',\n             '\\\\n',\n             '..#...#...',\n             '\\\\n',\n             '..#....#..',\n             '\\\\n',\n             '\\\\n',\n             '\"',\n             ')',\n             ' \\n          \\n    ',\n             'elif',\n             ' ',\n             '(',\n             'c',\n             ' == ',\n             '\"',\n             'S',\n             '\"',\n             ')',\n             ': \\n        ',\n             'print',\n             '(',\n             '\"',\n             '..######..',\n             '\\\\n',\n             '..#.......',\n             '\\\\n',\n             '..######..',\n             '\"',\n             ', ',\n             'end',\n             ' = ',\n             '\"',\n             ' ',\n             '\"',\n             ')',\n             ' \\n        ',\n             'print',\n             '(',\n             '\"',\n             '\\\\n',\n             '.......#..',\n             '\\\\n',\n             '..######..',\n             '\\\\n',\n             '\\\\n',\n             '\"',\n             ')',\n             ' \\n          \\n    ',\n             'elif',\n             ' ',\n             '(',\n             'c',\n             ' == ',\n             '\"',\n             'T',\n             '\"',\n             ')',\n             ': \\n        ',\n             'print',\n             '(',\n             '\"',\n             '..######..',\n             '\\\\n',\n             '....##....',\n             '\\\\n',\n             '....##....',\n             '\"',\n             ', ',\n             'end',\n             ' = ',\n             '\"',\n             ' ',\n             '\"',\n             ')',\n             ' \\n        ',\n             'print',\n             '(',\n             '\"',\n             '\\\\n',\n             '....##....',\n             '\\\\n',\n             '....##....',\n             '\\\\n',\n             '\\\\n',\n             '\"',\n             ')',\n             ' \\n          \\n    ',\n             'elif',\n             ' ',\n             '(',\n             'c',\n             ' == ',\n             '\"',\n             'U',\n             '\"',\n             ')',\n             ': \\n        ',\n             'print',\n             '(',\n             '\"',\n             '..#....#..',\n             '\\\\n',\n             '..#....#..',\n             '\\\\n',\n             '..#....#..',\n             '\"',\n             ', ',\n             'end',\n             ' = ',\n             '\"',\n             ' ',\n             '\"',\n             ')',\n             ' \\n        ',\n             'print',\n             '(',\n             '\"',\n             '\\\\n',\n             '..#....#..',\n             '\\\\n',\n             '..######..',\n             '\\\\n',\n             '\\\\n',\n             '\"',\n             ')',\n             ' \\n          \\n    ',\n             'elif',\n             ' ',\n             '(',\n             'c',\n             ' == ',\n             '\"',\n             'V',\n             '\"',\n             ')',\n             ': \\n        ',\n             'print',\n             '(',\n             '\"',\n             '..#....#..',\n             '\\\\n',\n             '..#....#..',\n             '\\\\n',\n             '..#....#..',\n             '\"',\n             ', ',\n             'end',\n             ' = ',\n             '\"',\n             ' ',\n             '\"',\n             ')',\n             ' \\n        ',\n             'print',\n             '(',\n             '\"',\n             '\\\\n',\n             '...#..#...',\n             '\\\\n',\n             '....##....',\n             '\\\\n',\n             '\\\\n',\n             '\"',\n             ')',\n             ' \\n          \\n    ',\n             'elif',\n             ' ',\n             '(',\n             'c',\n             ' == ',\n             '\"',\n             'W',\n             '\"',\n             ')',\n             ': \\n        ',\n             'print',\n             '(',\n             '\"',\n             '..#....#..',\n             '\\\\n',\n             '..#....#..',\n             '\\\\n',\n             '..#.##.#..',\n             '\"',\n             ', ',\n             'end',\n             ' = ',\n             '\"',\n             ' ',\n             '\"',\n             ')',\n             ' \\n        ',\n             'print',\n             '(',\n             '\"',\n             '\\\\n',\n             '..##..##..',\n             '\\\\n',\n             '..#....#..',\n             '\\\\n',\n             '\\\\n',\n             '\"',\n             ')',\n             ' \\n          \\n    ',\n             'elif',\n             ' ',\n             '(',\n             'c',\n             ' == ',\n             '\"',\n             'X',\n             '\"',\n             ')',\n             ': \\n        ',\n             'print',\n             '(',\n             '\"',\n             '..#....#..',\n             '\\\\n',\n             '...#..#...',\n             '\\\\n',\n             '....##....',\n             '\"',\n             ', ',\n             'end',\n             ' = ',\n             '\"',\n             ' ',\n             '\"',\n             ')',\n             ' \\n        ',\n             'print',\n             '(',\n             '\"',\n             '\\\\n',\n             '...#..#...',\n             '\\\\n',\n             '..#....#..',\n             '\\\\n',\n             '\\\\n',\n             '\"',\n             ')',\n             ' \\n          \\n    ',\n             'elif',\n             ' ',\n             '(',\n             'c',\n             ' == ',\n             '\"',\n             'Y',\n             '\"',\n             ')',\n             ': \\n        ',\n             'print',\n             '(',\n             '\"',\n             '..#....#..',\n             '\\\\n',\n             '...#..#...',\n             '\\\\n',\n             '....##....',\n             '\"',\n             ', ',\n             'end',\n             ' = ',\n             '\"',\n             ' ',\n             '\"',\n             ')',\n             ' \\n        ',\n             'print',\n             '(',\n             '\"',\n             '\\\\n',\n             '....##....',\n             '\\\\n',\n             '....##....',\n             '\\\\n',\n             '\\\\n',\n             '\"',\n             ')',\n             ' \\n          \\n    ',\n             'elif',\n             ' ',\n             '(',\n             'c',\n             ' == ',\n             '\"',\n             'Z',\n             '\"',\n             ')',\n             ': \\n        ',\n             'print',\n             '(',\n             '\"',\n             '..######..',\n             '\\\\n',\n             '......#...',\n             '\\\\n',\n             '.....#....',\n             '\"',\n             ', ',\n             'end',\n             ' = ',\n             '\"',\n             ' ',\n             '\"',\n             ')',\n             ' \\n        ',\n             'print',\n             '(',\n             '\"',\n             '\\\\n',\n             '....#.....',\n             '\\\\n',\n             '..######..',\n             '\\\\n',\n             '\\\\n',\n             '\"',\n             ')',\n             ' \\n          \\n    ',\n             'elif',\n             ' ',\n             '(',\n             'c',\n             ' == ',\n             '\"',\n             ' ',\n             '\"',\n             ')',\n             ': \\n        ',\n             'print',\n             '(',\n             '\"',\n             '..........',\n             '\\\\n',\n             '..........',\n             '\\\\n',\n             '..........',\n             '\"',\n             ', ',\n             'end',\n             ' = ',\n             '\"',\n             ' ',\n             '\"',\n             ')',\n             ' \\n        ',\n             'print',\n             '(',\n             '\"',\n             '\\\\n',\n             '..........',\n             '\\\\n',\n             '\\\\n',\n             '\"',\n             ')',\n             ' \\n          \\n    ',\n             'elif',\n             ' ',\n             '(',\n             'c',\n             ' == ',\n             '\"',\n             '.',\n             '\"',\n             ')',\n             ': \\n        ',\n             'print',\n             '(',\n             '\"',\n             '----..----',\n             '\\\\n',\n             '\\\\n',\n             '\"',\n             ')',\n             '\\r\\n'],\n 'title': 'Python 打印自己设计的字体'}\n2021-01-09 18:17:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-timstamp-str.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:17:13 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-timstamp-str.html>\n{'content': [' \\r\\n',\n             '实例 1',\n             ' \\r\\n',\n             '\\r\\n',\n             'import',\n             ' ',\n             'time',\n             '\\n \\n',\n             '# 获得当前时间时间戳',\n             '\\n',\n             'now',\n             ' = ',\n             'int',\n             '(',\n             'time',\n             '.',\n             'time',\n             '(',\n             ')',\n             ')',\n             '\\n',\n             '#转换为其他日期格式,如:\"%Y-%m-%d %H:%M:%S\"',\n             '\\n',\n             'timeArray',\n             ' = ',\n             'time',\n             '.',\n             'localtime',\n             '(',\n             'now',\n             ')',\n             '\\n',\n             'otherStyleTime',\n             ' = ',\n             'time',\n             '.',\n             'strftime',\n             '(',\n             '\"',\n             '%Y-%m-%d %H:%M:%S',\n             '\"',\n             ', ',\n             'timeArray',\n             ')',\n             '\\n',\n             'print',\n             '(',\n             'otherStyleTime',\n             ')',\n             '\\r\\n',\n             ' \\r\\n',\n             '实例 2',\n             ' \\r\\n',\n             '\\r\\n',\n             'import',\n             ' ',\n             'datetime',\n             '\\n \\n',\n             '# 获得当前时间',\n             '\\n',\n             'now',\n             ' = ',\n             'datetime',\n             '.',\n             'datetime',\n             '.',\n             'now',\n             '(',\n             ')',\n             '\\n',\n             '# 转换为指定的格式',\n             '\\n',\n             'otherStyleTime',\n             ' = ',\n             'now',\n             '.',\n             'strftime',\n             '(',\n             '\"',\n             '%Y-%m-%d %H:%M:%S',\n             '\"',\n             ')',\n             '\\n',\n             'print',\n             '(',\n             'otherStyleTime',\n             ')',\n             '\\r\\n',\n             ' \\r\\n',\n             '实例 3',\n             ' \\r\\n',\n             '\\r\\n',\n             'import',\n             ' ',\n             'time',\n             '\\n \\n',\n             'timeStamp',\n             ' = ',\n             '1557502800',\n             '\\n',\n             'timeArray',\n             ' = ',\n             'time',\n             '.',\n             'localtime',\n             '(',\n             'timeStamp',\n             ')',\n             '\\n',\n             'otherStyleTime',\n             ' = ',\n             'time',\n             '.',\n             'strftime',\n             '(',\n             '\"',\n             '%Y-%m-%d %H:%M:%S',\n             '\"',\n             ', ',\n             'timeArray',\n             ')',\n             '\\n',\n             'print',\n             '(',\n             'otherStyleTime',\n             ')',\n             '\\r\\n',\n             ' \\r\\n',\n             '实例 4',\n             ' \\r\\n',\n             '\\r\\n',\n             'import',\n             ' ',\n             'datetime',\n             '\\n \\n',\n             'timeStamp',\n             ' = ',\n             '1557502800',\n             '\\n',\n             'dateArray',\n             ' = ',\n             'datetime',\n             '.',\n             'datetime',\n             '.',\n             'utcfromtimestamp',\n             '(',\n             'timeStamp',\n             ')',\n             '\\n',\n             'otherStyleTime',\n             ' = ',\n             'dateArray',\n             '.',\n             'strftime',\n             '(',\n             '\"',\n             '%Y-%m-%d %H:%M:%S',\n             '\"',\n             ')',\n             '\\n',\n             'print',\n             '(',\n             'otherStyleTime',\n             ')',\n             '\\r\\n'],\n 'title': 'Python 将时间戳转换为指定格式日期'}\n2021-01-09 18:17:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-get-dayago.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:17:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-get-dayago.html>\n{'content': [' \\r\\n',\n             '实例 1',\n             ' \\r\\n',\n             '\\r\\n',\n             'import',\n             ' ',\n             'time',\n             '\\n',\n             'import',\n             ' ',\n             'datetime',\n             '\\n \\n',\n             '# 先获得时间数组格式的日期',\n             '\\n',\n             'threeDayAgo',\n             ' = ',\n             '(',\n             'datetime',\n             '.',\n             'datetime',\n             '.',\n             'now',\n             '(',\n             ')',\n             ' - ',\n             'datetime',\n             '.',\n             'timedelta',\n             '(',\n             'days',\n             ' = ',\n             '3',\n             ')',\n             ')',\n             '\\n',\n             '# 转换为时间戳',\n             '\\n',\n             'timeStamp',\n             ' = ',\n             'int',\n             '(',\n             'time',\n             '.',\n             'mktime',\n             '(',\n             'threeDayAgo',\n             '.',\n             'timetuple',\n             '(',\n             ')',\n             ')',\n             ')',\n             '\\n',\n             '# 转换为其他字符串格式',\n             '\\n',\n             'otherStyleTime',\n             ' = ',\n             'threeDayAgo',\n             '.',\n             'strftime',\n             '(',\n             '\"',\n             '%Y-%m-%d %H:%M:%S',\n             '\"',\n             ')',\n             '\\n',\n             'print',\n             '(',\n             'otherStyleTime',\n             ')',\n             '\\r\\n',\n             ' \\r\\n',\n             '实例 2',\n             ' \\r\\n',\n             '\\r\\n',\n             'import',\n             ' ',\n             'time',\n             '\\n',\n             'import',\n             ' ',\n             'datetime',\n             '\\n \\n',\n             '#给定时间戳',\n             '\\n',\n             'timeStamp',\n             ' = ',\n             '1557502800',\n             '\\n',\n             'dateArray',\n             ' = ',\n             'datetime',\n             '.',\n             'datetime',\n             '.',\n             'utcfromtimestamp',\n             '(',\n             'timeStamp',\n             ')',\n             '\\n',\n             'threeDayAgo',\n             ' = ',\n             'dateArray',\n             ' - ',\n             'datetime',\n             '.',\n             'timedelta',\n             '(',\n             'days',\n             ' = ',\n             '3',\n             ')',\n             '\\n',\n             'print',\n             '(',\n             'threeDayAgo',\n             ')',\n             '\\r\\n'],\n 'title': 'Python 获取几天前的时间'}\n2021-01-09 18:17:20 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-str-timestamp.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:17:20 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-str-timestamp.html>\n{'content': [' \\r\\n',\n             '实例 ',\n             ' \\r\\n',\n             '\\r\\n',\n             'import',\n             ' ',\n             'time',\n             '\\n \\n',\n             'a1',\n             ' = ',\n             '\"',\n             '2019-5-10 23:40:00',\n             '\"',\n             '\\n',\n             '# 先转换为时间数组',\n             '\\n',\n             'timeArray',\n             ' = ',\n             'time',\n             '.',\n             'strptime',\n             '(',\n             'a1',\n             ', ',\n             '\"',\n             '%Y-%m-%d %H:%M:%S',\n             '\"',\n             ')',\n             '\\n \\n',\n             '# 转换为时间戳',\n             '\\n',\n             'timeStamp',\n             ' = ',\n             'int',\n             '(',\n             'time',\n             '.',\n             'mktime',\n             '(',\n             'timeArray',\n             ')',\n             ')',\n             '\\n',\n             'print',\n             '(',\n             'timeStamp',\n             ')',\n             '\\n \\n \\n',\n             '# 格式转换 - 转为 /',\n             '\\n',\n             'a2',\n             ' = ',\n             '\"',\n             '2019/5/10 23:40:00',\n             '\"',\n             '\\n',\n             '# 先转换为时间数组,然后转换为其他格式',\n             '\\n',\n             'timeArray',\n             ' = ',\n             'time',\n             '.',\n             'strptime',\n             '(',\n             'a2',\n             ', ',\n             '\"',\n             '%Y/%m/%d %H:%M:%S',\n             '\"',\n             ')',\n             '\\n',\n             'otherStyleTime',\n             ' = ',\n             'time',\n             '.',\n             'strftime',\n             '(',\n             '\"',\n             '%Y/%m/%d %H:%M:%S',\n             '\"',\n             ', ',\n             'timeArray',\n             ')',\n             '\\n',\n             'print',\n             '(',\n             'otherStyleTime',\n             ')',\n             '\\r\\n'],\n 'title': 'Python 将字符串的时间转换为时间戳'}\n2021-01-09 18:17:23 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-merging-two-dictionaries.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:17:23 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-merging-two-dictionaries.html>\n{'content': [' \\r\\n',\n             '实例 1 : 使用 update() 方法，第二个参数合并第一个参数',\n             ' \\r\\n',\n             '\\r\\n',\n             'def',\n             ' ',\n             'Merge',\n             '(',\n             'dict1',\n             ', ',\n             'dict2',\n             ')',\n             ': \\n    ',\n             'return',\n             '(',\n             'dict2',\n             '.',\n             'update',\n             '(',\n             'dict1',\n             ')',\n             ')',\n             ' \\n      \\n',\n             '# 两个字典',\n             '\\n',\n             'dict1',\n             ' = {',\n             \"'\",\n             'a',\n             \"'\",\n             ': ',\n             '10',\n             ', ',\n             \"'\",\n             'b',\n             \"'\",\n             ': ',\n             '8',\n             '} \\n',\n             'dict2',\n             ' = {',\n             \"'\",\n             'd',\n             \"'\",\n             ': ',\n             '6',\n             ', ',\n             \"'\",\n             'c',\n             \"'\",\n             ': ',\n             '4',\n             '} \\n  \\n',\n             '# 返回  None ',\n             '\\n',\n             'print',\n             '(',\n             'Merge',\n             '(',\n             'dict1',\n             ', ',\n             'dict2',\n             ')',\n             ')',\n             ' \\n  \\n',\n             '# dict2 合并了 dict1',\n             '\\n',\n             'print',\n             '(',\n             'dict2',\n             ')',\n             '\\r\\n',\n             ' \\r\\n',\n             '实例 2 : 使用  **，函数将参数以字典的形式导入',\n             ' \\r\\n',\n             '\\r\\n',\n             'def',\n             ' ',\n             'Merge',\n             '(',\n             'dict1',\n             ', ',\n             'dict2',\n             ')',\n             ': \\n    ',\n             'res',\n             ' = {**',\n             'dict1',\n             ', **',\n             'dict2',\n             '} \\n    ',\n             'return',\n             ' ',\n             'res',\n             ' \\n      \\n',\n             '# 两个字典',\n             '\\n',\n             'dict1',\n             ' = {',\n             \"'\",\n             'a',\n             \"'\",\n             ': ',\n             '10',\n             ', ',\n             \"'\",\n             'b',\n             \"'\",\n             ': ',\n             '8',\n             '} \\n',\n             'dict2',\n             ' = {',\n             \"'\",\n             'd',\n             \"'\",\n             ': ',\n             '6',\n             ', ',\n             \"'\",\n             'c',\n             \"'\",\n             ': ',\n             '4',\n             '} \\n',\n             'dict3',\n             ' = ',\n             'Merge',\n             '(',\n             'dict1',\n             ', ',\n             'dict2',\n             ')',\n             ' \\n',\n             'print',\n             '(',\n             'dict3',\n             ')',\n             '\\r\\n'],\n 'title': 'Python 合并字典'}\n2021-01-09 18:17:26 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-remove-a-key-from-dictionary.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:17:26 [scrapy.core.scraper] ERROR: Error processing {'content': [' \\r\\n',\n             '实例 1 : 使用 del 移除',\n             ' \\r\\n',\n             '\\r\\n',\n             'test_dict',\n             ' = {',\n             '\"',\n             'Runoob',\n             '\"',\n             ' : ',\n             '1',\n             ', ',\n             '\"',\n             'Google',\n             '\"',\n             ' : ',\n             '2',\n             ', ',\n             '\"',\n             'Taobao',\n             '\"',\n             ' : ',\n             '3',\n             ', ',\n             '\"',\n             'Zhihu',\n             '\"',\n             ' : ',\n             '4',\n             '} \\n  \\n',\n             '# 输出原始的字典',\n             '\\n',\n             'print',\n             ' ',\n             '(',\n             '\"',\n             '字典移除前 : ',\n             '\"',\n             ' + ',\n             'str',\n             '(',\n             'test_dict',\n             ')',\n             ')',\n             ' \\n  \\n',\n             '# 使用 del 移除 Zhihu',\n             '\\n',\n             'del',\n             ' ',\n             'test_dict',\n             '[',\n             \"'\",\n             'Zhihu',\n             \"'\",\n             ']',\n             ' \\n  \\n',\n             '# 输出移除后的字典',\n             '\\n',\n             'print',\n             ' ',\n             '(',\n             '\"',\n             '字典移除后 : ',\n             '\"',\n             ' + ',\n             'str',\n             '(',\n             'test_dict',\n             ')',\n             ')',\n             ' \\n  \\n',\n             '# 移除没有的 key 会报错',\n             '\\n',\n             \"#del test_dict['Baidu']\",\n             '\\r\\n',\n             ' \\r\\n',\n             '实例 2 : 使用 pop() 移除',\n             ' \\r\\n',\n             '\\r\\n',\n             'test_dict',\n             ' = {',\n             '\"',\n             'Runoob',\n             '\"',\n             ' : ',\n             '1',\n             ', ',\n             '\"',\n             'Google',\n             '\"',\n             ' : ',\n             '2',\n             ', ',\n             '\"',\n             'Taobao',\n             '\"',\n             ' : ',\n             '3',\n             ', ',\n             '\"',\n             'Zhihu',\n             '\"',\n             ' : ',\n             '4',\n             '} \\n  \\n',\n             '# 输出原始的字典',\n             '\\n',\n             'print',\n             ' ',\n             '(',\n             '\"',\n             '字典移除前 : ',\n             '\"',\n             ' + ',\n             'str',\n             '(',\n             'test_dict',\n             ')',\n             ')',\n             ' \\n  \\n',\n             '# 使用 pop 移除 Zhihu',\n             '\\n',\n             'removed_value',\n             ' = ',\n             'test_dict',\n             '.',\n             'pop',\n             '(',\n             \"'\",\n             'Zhihu',\n             \"'\",\n             ')',\n             ' \\n  \\n',\n             '# 输出移除后的字典',\n             '\\n',\n             'print',\n             ' ',\n             '(',\n             '\"',\n             '字典移除后 : ',\n             '\"',\n             ' + ',\n             'str',\n             '(',\n             'test_dict',\n             ')',\n             ')',\n             ' \\n  \\n',\n             'print',\n             ' ',\n             '(',\n             '\"',\n             '移除的 key 对应的 value 为 : ',\n             '\"',\n             ' + ',\n             'str',\n             '(',\n             'removed_value',\n             ')',\n             ')',\n             ' \\n  \\n',\n             'print',\n             ' ',\n             '(',\n             \"'\",\n             '\\\\r',\n             \"'\",\n             ')',\n             ' \\n  \\n',\n             '# 使用 pop() 移除没有的 key 不会发生异常，我们可以自定义提示信息',\n             '\\n',\n             'removed_value',\n             ' = ',\n             'test_dict',\n             '.',\n             'pop',\n             '(',\n             \"'\",\n             'Baidu',\n             \"'\",\n             ', ',\n             \"'\",\n             '没有该键(key)',\n             \"'\",\n             ')',\n             ' \\n  \\n',\n             '# 输出移除后的字典',\n             '\\n',\n             'print',\n             ' ',\n             '(',\n             '\"',\n             '字典移除后 : ',\n             '\"',\n             ' + ',\n             'str',\n             '(',\n             'test_dict',\n             ')',\n             ')',\n             ' \\n',\n             'print',\n             ' ',\n             '(',\n             '\"',\n             '移除的值为 : ',\n             '\"',\n             ' + ',\n             'str',\n             '(',\n             'removed_value',\n             ')',\n             ')',\n             '\\r\\n',\n             ' \\r\\n',\n             '实例 3 : 使用 items() 移除',\n             ' \\r\\n',\n             '\\r\\n',\n             'test_dict',\n             ' = {',\n             '\"',\n             'Runoob',\n             '\"',\n             ' : ',\n             '1',\n             ', ',\n             '\"',\n             'Google',\n             '\"',\n             ' : ',\n             '2',\n             ', ',\n             '\"',\n             'Taobao',\n             '\"',\n             ' : ',\n             '3',\n             ', ',\n             '\"',\n             'Zhihu',\n             '\"',\n             ' : ',\n             '4',\n             '} \\n  \\n',\n             '# 输出原始的字典',\n             '\\n',\n             'print',\n             ' ',\n             '(',\n             '\"',\n             '字典移除前 : ',\n             '\"',\n             ' + ',\n             'str',\n             '(',\n             'test_dict',\n             ')',\n             ')',\n             ' \\n  \\n',\n             '# 使用 pop 移除 Zhihu',\n             '\\n',\n             'new_dict',\n             ' = {',\n             'key',\n             ':',\n             'val',\n             ' ',\n             'for',\n             ' ',\n             'key',\n             ', ',\n             'val',\n             ' ',\n             'in',\n             ' ',\n             'test_dict',\n             '.',\n             'items',\n             '(',\n             ')',\n             ' ',\n             'if',\n             ' ',\n             'key',\n             ' != ',\n             \"'\",\n             'Zhihu',\n             \"'\",\n             '} \\n  \\n  \\n',\n             '# 输出移除后的字典',\n             '\\n',\n             'print',\n             ' ',\n             '(',\n             '\"',\n             '字典移除后 : ',\n             '\"',\n             ' + ',\n             'str',\n             '(',\n             'new_dict',\n             ')',\n             ')',\n             '\\r\\n'],\n 'title': 'Python 移除字典点键值(key/value)对'}\nTraceback (most recent call last):\n  File \"E:\\python3.8\\lib\\site-packages\\twisted\\internet\\defer.py\", line 654, in _runCallbacks\n    current.result = callback(current.result, *args, **kw)\n  File \"E:\\python3.8\\lib\\site-packages\\scrapy\\utils\\defer.py\", line 154, in f\n    return deferred_from_coro(coro_f(*coro_args, **coro_kwargs))\n  File \"E:\\python日记\\python爬虫\\PythonExample\\PythonExample\\pipelines.py\", line 16, in process_item\n    with open(self.path+'/PythonExample/py/'+item['title']+'.py', 'w', encoding='utf-8') as f:\nFileNotFoundError: [Errno 2] No such file or directory: 'E:\\\\python日记\\\\python爬虫\\\\PythonExample/PythonExample/py/Python 移除字典点键值(key/value)对.py'\n2021-01-09 18:17:27 [scrapy.extensions.logstats] INFO: Crawled 34 pages (at 17 pages/min), scraped 32 items (at 16 items/min)\n2021-01-09 18:17:30 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-sum-dictionary.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:17:30 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-sum-dictionary.html>\n{'content': [' \\r\\n',\n             '实例',\n             ' \\r\\n',\n             '\\r\\n',\n             'def',\n             ' ',\n             'returnSum',\n             '(',\n             'myDict',\n             ')',\n             ': \\n      \\n    ',\n             'sum',\n             ' = ',\n             '0',\n             '\\n    ',\n             'for',\n             ' ',\n             'i',\n             ' ',\n             'in',\n             ' ',\n             'myDict',\n             ': \\n        ',\n             'sum',\n             ' = ',\n             'sum',\n             ' + ',\n             'myDict',\n             '[',\n             'i',\n             ']',\n             ' \\n      \\n    ',\n             'return',\n             ' ',\n             'sum',\n             '\\n  \\n',\n             'dict',\n             ' = {',\n             \"'\",\n             'a',\n             \"'\",\n             ': ',\n             '100',\n             ', ',\n             \"'\",\n             'b',\n             \"'\",\n             ':',\n             '200',\n             ', ',\n             \"'\",\n             'c',\n             \"'\",\n             ':',\n             '300',\n             '} \\n',\n             'print',\n             '(',\n             '\"',\n             'Sum :',\n             '\"',\n             ', ',\n             'returnSum',\n             '(',\n             'dict',\n             ')',\n             ')',\n             '\\r\\n'],\n 'title': 'Python 计算字典值之和'}\n2021-01-09 18:17:33 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-sort-dictionaries-by-key-or-value.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:17:33 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-sort-dictionaries-by-key-or-value.html>\n{'content': [' \\r\\n',\n             '实例1：按键(key)排序',\n             ' \\r\\n',\n             '\\r\\n',\n             'def',\n             ' ',\n             'dictionairy',\n             '(',\n             ')',\n             ':  \\n  \\n    ',\n             '# 声明字典',\n             '\\n    ',\n             'key_value',\n             ' ={}     \\n \\n    ',\n             '# 初始化',\n             '\\n    ',\n             'key_value',\n             '[',\n             '2',\n             ']',\n             ' = ',\n             '56',\n             '       \\n    ',\n             'key_value',\n             '[',\n             '1',\n             ']',\n             ' = ',\n             '2',\n             ' \\n    ',\n             'key_value',\n             '[',\n             '5',\n             ']',\n             ' = ',\n             '12',\n             ' \\n    ',\n             'key_value',\n             '[',\n             '4',\n             ']',\n             ' = ',\n             '24',\n             '\\n    ',\n             'key_value',\n             '[',\n             '6',\n             ']',\n             ' = ',\n             '18',\n             '      \\n    ',\n             'key_value',\n             '[',\n             '3',\n             ']',\n             ' = ',\n             '323',\n             ' \\n \\n    ',\n             'print',\n             ' ',\n             '(',\n             '\"',\n             '按键(key)排序:',\n             '\"',\n             ')',\n             '   \\n \\n    ',\n             '# sorted(key_value) 返回重新排序的列表',\n             '\\n    ',\n             '# 字典按键排序',\n             '\\n    ',\n             'for',\n             ' ',\n             'i',\n             ' ',\n             'in',\n             ' ',\n             'sorted',\n             ' ',\n             '(',\n             'key_value',\n             ')',\n             ' : \\n        ',\n             'print',\n             ' ',\n             '(',\n             '(',\n             'i',\n             ', ',\n             'key_value',\n             '[',\n             'i',\n             ']',\n             ')',\n             ', ',\n             'end',\n             ' =',\n             '\"',\n             ' ',\n             '\"',\n             ')',\n             ' \\n  \\n',\n             'def',\n             ' ',\n             'main',\n             '(',\n             ')',\n             ': \\n    ',\n             '# 调用函数',\n             '\\n    ',\n             'dictionairy',\n             '(',\n             ')',\n             '              \\n      \\n',\n             '# 主函数',\n             '\\n',\n             'if',\n             ' ',\n             '__name__',\n             '==',\n             '\"',\n             '__main__',\n             '\"',\n             ':      \\n    ',\n             'main',\n             '(',\n             ')',\n             '\\r\\n',\n             ' \\r\\n',\n             '实例2：按值(value)排序',\n             ' \\r\\n',\n             '\\r\\n',\n             'def',\n             ' ',\n             'dictionairy',\n             '(',\n             ')',\n             ':  \\n \\n    ',\n             '# 声明字典',\n             '\\n    ',\n             'key_value',\n             ' ={}     \\n \\n    ',\n             '# 初始化',\n             '\\n    ',\n             'key_value',\n             '[',\n             '2',\n             ']',\n             ' = ',\n             '56',\n             '       \\n    ',\n             'key_value',\n             '[',\n             '1',\n             ']',\n             ' = ',\n             '2',\n             ' \\n    ',\n             'key_value',\n             '[',\n             '5',\n             ']',\n             ' = ',\n             '12',\n             ' \\n    ',\n             'key_value',\n             '[',\n             '4',\n             ']',\n             ' = ',\n             '24',\n             '\\n    ',\n             'key_value',\n             '[',\n             '6',\n             ']',\n             ' = ',\n             '18',\n             '      \\n    ',\n             'key_value',\n             '[',\n             '3',\n             ']',\n             ' = ',\n             '323',\n             ' \\n \\n \\n    ',\n             'print',\n             ' ',\n             '(',\n             '\"',\n             '按值(value)排序:',\n             '\"',\n             ')',\n             '   \\n    ',\n             'print',\n             '(',\n             'sorted',\n             '(',\n             'key_value',\n             '.',\n             'items',\n             '(',\n             ')',\n             ', ',\n             'key',\n             ' = ',\n             'lambda',\n             ' ',\n             'kv',\n             ':',\n             '(',\n             'kv',\n             '[',\n             '1',\n             ']',\n             ', ',\n             'kv',\n             '[',\n             '0',\n             ']',\n             ')',\n             ')',\n             ')',\n             '     \\n   \\n',\n             'def',\n             ' ',\n             'main',\n             '(',\n             ')',\n             ': \\n    ',\n             'dictionairy',\n             '(',\n             ')',\n             '             \\n      \\n',\n             'if',\n             ' ',\n             '__name__',\n             '==',\n             '\"',\n             '__main__',\n             '\"',\n             ':       \\n    ',\n             'main',\n             '(',\n             ')',\n             '\\r\\n',\n             ' \\r\\n',\n             '实例 3 : 字典列表排序',\n             ' \\r\\n',\n             '\\r\\n',\n             'lis',\n             ' = ',\n             '[',\n             '{ ',\n             '\"',\n             'name',\n             '\"',\n             ' : ',\n             '\"',\n             'Taobao',\n             '\"',\n             ', ',\n             '\"',\n             'age',\n             '\"',\n             ' : ',\n             '100',\n             '},  \\n{ ',\n             '\"',\n             'name',\n             '\"',\n             ' : ',\n             '\"',\n             'Runoob',\n             '\"',\n             ', ',\n             '\"',\n             'age',\n             '\"',\n             ' : ',\n             '7',\n             ' }, \\n{ ',\n             '\"',\n             'name',\n             '\"',\n             ' : ',\n             '\"',\n             'Google',\n             '\"',\n             ', ',\n             '\"',\n             'age',\n             '\"',\n             ' : ',\n             '100',\n             ' }, \\n{ ',\n             '\"',\n             'name',\n             '\"',\n             ' : ',\n             '\"',\n             'Wiki',\n             '\"',\n             ' , ',\n             '\"',\n             'age',\n             '\"',\n             ' : ',\n             '200',\n             ' }',\n             ']',\n             ' \\n  \\n',\n             '# 通过 age 升序排序',\n             '\\n',\n             'print',\n             ' ',\n             '(',\n             '\"',\n             '列表通过 age 升序排序: ',\n             '\"',\n             ')',\n             '\\n',\n             'print',\n             ' ',\n             '(',\n             'sorted',\n             '(',\n             'lis',\n             ', ',\n             'key',\n             ' = ',\n             'lambda',\n             ' ',\n             'i',\n             ': ',\n             'i',\n             '[',\n             \"'\",\n             'age',\n             \"'\",\n             ']',\n             ')',\n             ' ',\n             ')',\n             '\\n  \\n',\n             'print',\n             ' ',\n             '(',\n             '\"',\n             '\\\\r',\n             '\"',\n             ')',\n             ' \\n  \\n',\n             '# 先按 age 排序，再按 name 排序',\n             '\\n',\n             'print',\n             ' ',\n             '(',\n             '\"',\n             '列表通过 age 和 name 排序: ',\n             '\"',\n             ')',\n             '\\n',\n             'print',\n             ' ',\n             '(',\n             'sorted',\n             '(',\n             'lis',\n             ', ',\n             'key',\n             ' = ',\n             'lambda',\n             ' ',\n             'i',\n             ': ',\n             '(',\n             'i',\n             '[',\n             \"'\",\n             'age',\n             \"'\",\n             ']',\n             ', ',\n             'i',\n             '[',\n             \"'\",\n             'name',\n             \"'\",\n             ']',\n             ')',\n             ')',\n             ' ',\n             ')',\n             '\\n  \\n',\n             'print',\n             ' ',\n             '(',\n             '\"',\n             '\\\\r',\n             '\"',\n             ')',\n             ' \\n  \\n',\n             '# 按 age 降序排序',\n             '\\n',\n             'print',\n             ' ',\n             '(',\n             '\"',\n             '列表通过 age 降序排序: ',\n             '\"',\n             ')',\n             '\\n',\n             'print',\n             ' ',\n             '(',\n             'sorted',\n             '(',\n             'lis',\n             ', ',\n             'key',\n             ' = ',\n             'lambda',\n             ' ',\n             'i',\n             ': ',\n             'i',\n             '[',\n             \"'\",\n             'age',\n             \"'\",\n             ']',\n             ',',\n             'reverse',\n             '=',\n             'True',\n             ')',\n             ' ',\n             ')',\n             '\\r\\n'],\n 'title': 'Python 按键(key)或值(value)对字典进行排序'}\n2021-01-09 18:17:38 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-slicing-rotate-string.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:17:38 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-slicing-rotate-string.html>\n{'content': [' \\r\\n',\n             '实例',\n             ' \\r\\n',\n             '\\r\\n',\n             'def',\n             ' ',\n             'rotate',\n             '(',\n             'input',\n             ',',\n             'd',\n             ')',\n             ': \\n  \\n    ',\n             'Lfirst',\n             ' = ',\n             'input',\n             '[',\n             '0',\n             ' : ',\n             'd',\n             ']',\n             ' \\n    ',\n             'Lsecond',\n             ' = ',\n             'input',\n             '[',\n             'd',\n             ' :',\n             ']',\n             ' \\n    ',\n             'Rfirst',\n             ' = ',\n             'input',\n             '[',\n             '0',\n             ' : ',\n             'len',\n             '(',\n             'input',\n             ')',\n             '-',\n             'd',\n             ']',\n             ' \\n    ',\n             'Rsecond',\n             ' = ',\n             'input',\n             '[',\n             'len',\n             '(',\n             'input',\n             ')',\n             '-',\n             'd',\n             ' : ',\n             ']',\n             ' \\n  \\n    ',\n             'print',\n             '(',\n             ' ',\n             '\"',\n             '头部切片翻转 : ',\n             '\"',\n             ', ',\n             '(',\n             'Lsecond',\n             ' + ',\n             'Lfirst',\n             ')',\n             ' ',\n             ')',\n             '\\n    ',\n             'print',\n             '(',\n             ' ',\n             '\"',\n             '尾部切片翻转 : ',\n             '\"',\n             ', ',\n             '(',\n             'Rsecond',\n             ' + ',\n             'Rfirst',\n             ')',\n             ' ',\n             ')',\n             '\\n \\n',\n             'if',\n             ' ',\n             '__name__',\n             ' == ',\n             '\"',\n             '__main__',\n             '\"',\n             ': \\n    ',\n             'input',\n             ' = ',\n             \"'\",\n             'Runoob',\n             \"'\",\n             '\\n    ',\n             'd',\n             '=',\n             '2',\n             '  ',\n             '# 截取两个字符',\n             '\\n    ',\n             'rotate',\n             '(',\n             'input',\n             ',',\n             'd',\n             ')',\n             '\\r\\n'],\n 'title': 'Python 对字符串切片及翻转'}\n2021-01-09 18:17:42 [scrapy.downloadermiddlewares.redirect] DEBUG: Redirecting (301) to <GET http://www.runoob.com/python3/python-string-reverse.html> from <GET https://www.runoob.com/python3///www.runoob.com/python3/python-string-reverse.html>\n2021-01-09 18:17:46 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-execute-string-code.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:17:46 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-execute-string-code.html>\n{'content': [' \\r\\n',\n             '实例 1：使用内置方法 exec()',\n             ' \\r\\n',\n             '\\r\\n',\n             'def',\n             ' ',\n             'exec_code',\n             '(',\n             ')',\n             ': \\n    ',\n             'LOC',\n             ' = ',\n             '\"\"\"',\n             ' \\n'\n             'def factorial(num): \\n'\n             '    fact=1 \\n'\n             '    for i in range(1,num+1): \\n'\n             '        fact = fact*i \\n'\n             '    return fact \\n'\n             'print(factorial(5)) \\n',\n             '\"\"\"',\n             '\\n    ',\n             'exec',\n             '(',\n             'LOC',\n             ')',\n             ' \\n \\n',\n             'exec_code',\n             '(',\n             ')',\n             '\\r\\n'],\n 'title': 'Python 将字符串作为代码执行'}\n2021-01-09 18:17:50 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-find-url-string.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:17:50 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-find-url-string.html>\n{'content': [' \\r\\n',\n             '实例',\n             ' \\r\\n',\n             '\\r\\n',\n             'import',\n             ' ',\n             're',\n             ' \\n  \\n',\n             'def',\n             ' ',\n             'Find',\n             '(',\n             'string',\n             ')',\n             ': \\n    ',\n             '# findall() 查找匹配正则表达式的字符串',\n             '\\n    ',\n             'url',\n             ' = ',\n             're',\n             '.',\n             'findall',\n             '(',\n             \"'\",\n             'https?://(?:[-',\n             '\\\\w',\n             '.]|(?:%[',\n             '\\\\d',\n             'a-fA-F]{2}))+',\n             \"'\",\n             ', ',\n             'string',\n             ')',\n             '\\n    ',\n             'return',\n             ' ',\n             'url',\n             ' \\n      \\n \\n',\n             'string',\n             ' = ',\n             \"'\",\n             'Runoob 的网页地址为：https://www.runoob.com，Google '\n             '的网页地址为：https://www.google.com',\n             \"'\",\n             '\\n',\n             'print',\n             '(',\n             '\"',\n             'Urls: ',\n             '\"',\n             ', ',\n             'Find',\n             '(',\n             'string',\n             ')',\n             ')',\n             '\\r\\n'],\n 'title': 'Python 使用正则表达式提取字符串中的 URL'}\n2021-01-09 18:17:54 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-string-length.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:17:54 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-string-length.html>\n{'content': [' \\r\\n',\n             '实例 1：使用内置方法 len()',\n             ' \\r\\n',\n             '\\r\\n',\n             'str',\n             ' = ',\n             '\"',\n             'runoob',\n             '\"',\n             '\\n',\n             'print',\n             '(',\n             'len',\n             '(',\n             'str',\n             ')',\n             ')',\n             '\\r\\n',\n             ' \\r\\n',\n             '实例 2：使用循环计算',\n             ' \\r\\n',\n             '\\r\\n',\n             'def',\n             ' ',\n             'findLen',\n             '(',\n             'str',\n             ')',\n             ': \\n    ',\n             'counter',\n             ' = ',\n             '0',\n             '\\n    ',\n             'while',\n             ' ',\n             'str',\n             '[',\n             'counter',\n             ':',\n             ']',\n             ': \\n        ',\n             'counter',\n             ' += ',\n             '1',\n             '\\n    ',\n             'return',\n             ' ',\n             'counter',\n             ' \\n  \\n',\n             'str',\n             ' = ',\n             '\"',\n             'runoob',\n             '\"',\n             '\\n',\n             'print',\n             '(',\n             'findLen',\n             '(',\n             'str',\n             ')',\n             ')',\n             '\\r\\n'],\n 'title': 'Python 判断字符串长度'}\n2021-01-09 18:17:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-check-substring-present-given-string.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:17:57 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-check-substring-present-given-string.html>\n{'content': [' \\r\\n',\n             '实例',\n             ' \\r\\n',\n             '\\r\\n',\n             'def',\n             ' ',\n             'check',\n             '(',\n             'string',\n             ', ',\n             'sub_str',\n             ')',\n             ': \\n    ',\n             'if',\n             ' ',\n             '(',\n             'string',\n             '.',\n             'find',\n             '(',\n             'sub_str',\n             ')',\n             ' == -',\n             '1',\n             ')',\n             ': \\n        ',\n             'print',\n             '(',\n             '\"',\n             '不存在！',\n             '\"',\n             ')',\n             ' \\n    ',\n             'else',\n             ': \\n        ',\n             'print',\n             '(',\n             '\"',\n             '存在！',\n             '\"',\n             ')',\n             ' \\n \\n',\n             'string',\n             ' = ',\n             '\"',\n             'www.runoob.com',\n             '\"',\n             '\\n',\n             'sub_str',\n             ' =',\n             '\"',\n             'runoob',\n             '\"',\n             '\\n',\n             'check',\n             '(',\n             'string',\n             ', ',\n             'sub_str',\n             ')',\n             '\\r\\n'],\n 'title': 'Python 判断字符串是否存在子字符串'}\n2021-01-09 18:18:01 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/pyhton-remove-ith-character-from-string.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:18:01 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/pyhton-remove-ith-character-from-string.html>\n{'content': ['实例',\n             ' ',\n             '\\ntest_str ',\n             '=',\n             ' ',\n             '\"Runoob\"',\n             '\\n\\xa0 ',\n             '\\n',\n             '# 输出原始字符串',\n             '\\n',\n             'print',\n             ' ',\n             '(',\n             '\"原始字符串为 : \"',\n             ' + test_str',\n             ')',\n             ' ',\n             '\\n\\xa0 ',\n             '\\n',\n             '# 移除第三个字符 n',\n             '\\nnew_str ',\n             '=',\n             ' ',\n             '\"\"',\n             ' ',\n             '\\n\\xa0 ',\n             '\\n',\n             'for',\n             ' i ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             '0',\n             ',',\n             ' ',\n             'len',\n             '(',\n             'test_str',\n             ')',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 ',\n             'if',\n             ' i ',\n             '!=',\n             ' ',\n             '2',\n             ': ',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 new_str ',\n             '=',\n             ' new_str + test_str',\n             '[',\n             'i',\n             ']',\n             ' ',\n             '\\n',\n             '\\n',\n             'print',\n             ' ',\n             '(',\n             '\"字符串移除后为 : \"',\n             ' + new_str',\n             ')',\n             ' ',\n             '\\n'],\n 'title': 'Python 移除字符串中的指定位置字符'}\n2021-01-09 18:18:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-max-list-element.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:18:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-max-list-element.html>\n{'content': ['实例 1',\n             ' ',\n             '\\nlist1 ',\n             '=',\n             ' ',\n             '[',\n             '10',\n             ',',\n             ' ',\n             '20',\n             ',',\n             ' ',\n             '4',\n             ',',\n             ' ',\n             '45',\n             ',',\n             ' ',\n             '99',\n             ']',\n             ' ',\n             '\\n\\xa0 ',\n             '\\nlist1.',\n             'sort',\n             '(',\n             ')',\n             ' ',\n             '\\n\\xa0 ',\n             '\\n',\n             'print',\n             '(',\n             '\"最大元素为:\"',\n             ',',\n             ' list1',\n             '[',\n             '-',\n             '1',\n             ']',\n             ')',\n             ' ',\n             '\\n',\n             '实例 2：使用 max() 方法',\n             ' ',\n             '\\nlist1 ',\n             '=',\n             ' ',\n             '[',\n             '10',\n             ',',\n             ' ',\n             '20',\n             ',',\n             ' ',\n             '1',\n             ',',\n             ' ',\n             '45',\n             ',',\n             ' ',\n             '99',\n             ']',\n             ' ',\n             '\\n\\xa0 ',\n             '\\n',\n             'print',\n             '(',\n             '\"最大元素为:\"',\n             ',',\n             ' ',\n             'max',\n             '(',\n             'list1',\n             ')',\n             ')',\n             ' ',\n             '\\n'],\n 'title': 'Python 查找列表中最大元素'}\n2021-01-09 18:18:08 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-min-list-element.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:18:08 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-min-list-element.html>\n{'content': ['实例 1',\n             ' ',\n             '\\nlist1 ',\n             '=',\n             ' ',\n             '[',\n             '10',\n             ',',\n             ' ',\n             '20',\n             ',',\n             ' ',\n             '4',\n             ',',\n             ' ',\n             '45',\n             ',',\n             ' ',\n             '99',\n             ']',\n             ' ',\n             '\\n\\xa0 ',\n             '\\nlist1.',\n             'sort',\n             '(',\n             ')',\n             ' ',\n             '\\n\\xa0 ',\n             '\\n',\n             'print',\n             '(',\n             '\"最小元素为:\"',\n             ',',\n             ' *list1',\n             '[',\n             ':',\n             '1',\n             ']',\n             ')',\n             ' ',\n             '\\n',\n             '实例 2：使用 min() 方法',\n             ' ',\n             '\\nlist1 ',\n             '=',\n             ' ',\n             '[',\n             '10',\n             ',',\n             ' ',\n             '20',\n             ',',\n             ' ',\n             '1',\n             ',',\n             ' ',\n             '45',\n             ',',\n             ' ',\n             '99',\n             ']',\n             ' ',\n             '\\n\\xa0 ',\n             '\\n',\n             'print',\n             '(',\n             '\"最小元素为:\"',\n             ',',\n             ' ',\n             'min',\n             '(',\n             'list1',\n             ')',\n             ')',\n             ' ',\n             '\\n'],\n 'title': 'Python 查找列表中最小元素'}\n2021-01-09 18:18:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-multiply-list.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:18:10 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-multiply-list.html>\n{'content': ['实例 1',\n             ' ',\n             '\\n',\n             'def',\n             ' multiplyList',\n             '(',\n             'myList',\n             ')',\n             ' : ',\n             '\\n\\xa0 \\xa0 \\xa0 ',\n             '\\n\\xa0 \\xa0 result ',\n             '=',\n             ' ',\n             '1',\n             '\\n\\xa0 \\xa0 ',\n             'for',\n             ' x ',\n             'in',\n             ' myList: ',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 \\xa0result ',\n             '=',\n             ' result * x \\xa0',\n             '\\n\\xa0 \\xa0 ',\n             'return',\n             ' result \\xa0',\n             '\\n\\xa0 \\xa0 \\xa0 ',\n             '\\nlist1 ',\n             '=',\n             ' ',\n             '[',\n             '1',\n             ',',\n             ' ',\n             '2',\n             ',',\n             ' ',\n             '3',\n             ']',\n             ' \\xa0',\n             '\\nlist2 ',\n             '=',\n             ' ',\n             '[',\n             '3',\n             ',',\n             ' ',\n             '2',\n             ',',\n             ' ',\n             '4',\n             ']',\n             ' ',\n             '\\n',\n             'print',\n             '(',\n             'multiplyList',\n             '(',\n             'list1',\n             ')',\n             ')',\n             ' ',\n             '\\n',\n             'print',\n             '(',\n             'multiplyList',\n             '(',\n             'list2',\n             ')',\n             ')',\n             ' ',\n             '\\n'],\n 'title': 'Python 计算列表元素之积'}\n2021-01-09 18:18:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-sum-list.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:18:13 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-sum-list.html>\n{'content': ['实例 1',\n             ' ',\n             '\\ntotal ',\n             '=',\n             ' ',\n             '0',\n             '\\n\\xa0 ',\n             '\\nlist1 ',\n             '=',\n             ' ',\n             '[',\n             '11',\n             ',',\n             ' ',\n             '5',\n             ',',\n             ' ',\n             '17',\n             ',',\n             ' ',\n             '18',\n             ',',\n             ' ',\n             '23',\n             ']',\n             ' \\xa0',\n             '\\n\\xa0 ',\n             '\\n',\n             'for',\n             ' ele ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             '0',\n             ',',\n             ' ',\n             'len',\n             '(',\n             'list1',\n             ')',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 total ',\n             '=',\n             ' total + list1',\n             '[',\n             'ele',\n             ']',\n             ' ',\n             '\\n\\xa0 ',\n             '\\n',\n             'print',\n             '(',\n             '\"列表元素之和为: \"',\n             ',',\n             ' total',\n             ')',\n             ' ',\n             '\\n',\n             '实例 2: 使用  while() 循环',\n             ' ',\n             '\\ntotal ',\n             '=',\n             ' ',\n             '0',\n             '\\nele ',\n             '=',\n             ' ',\n             '0',\n             '\\n\\xa0 ',\n             '\\nlist1 ',\n             '=',\n             ' ',\n             '[',\n             '11',\n             ',',\n             ' ',\n             '5',\n             ',',\n             ' ',\n             '17',\n             ',',\n             ' ',\n             '18',\n             ',',\n             ' ',\n             '23',\n             ']',\n             ' \\xa0',\n             '\\n\\xa0 ',\n             '\\n',\n             'while',\n             '(',\n             'ele ',\n             '<',\n             ' ',\n             'len',\n             '(',\n             'list1',\n             ')',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 total ',\n             '=',\n             ' total + list1',\n             '[',\n             'ele',\n             ']',\n             ' ',\n             '\\n\\xa0 \\xa0 ele +',\n             '=',\n             ' ',\n             '1',\n             '\\n\\xa0 \\xa0 \\xa0 ',\n             '\\n',\n             'print',\n             '(',\n             '\"列表元素之和为: \"',\n             ',',\n             ' total',\n             ')',\n             ' ',\n             '\\n',\n             '实例 3: 使用递归',\n             ' ',\n             '\\nlist1 ',\n             '=',\n             ' ',\n             '[',\n             '11',\n             ',',\n             ' ',\n             '5',\n             ',',\n             ' ',\n             '17',\n             ',',\n             ' ',\n             '18',\n             ',',\n             ' ',\n             '23',\n             ']',\n             ' ',\n             '\\n',\n             '\\n',\n             'def',\n             ' sumOfList',\n             '(',\n             'list',\n             ',',\n             ' size',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0',\n             'if',\n             ' ',\n             '(',\n             'size ',\n             '==',\n             ' ',\n             '0',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 \\xa0',\n             'return',\n             ' ',\n             '0',\n             '\\n\\xa0 \\xa0',\n             'else',\n             ': ',\n             '\\n\\xa0 \\xa0 \\xa0',\n             'return',\n             ' ',\n             'list',\n             '[',\n             'size - ',\n             '1',\n             ']',\n             ' + sumOfList',\n             '(',\n             'list',\n             ',',\n             ' size - ',\n             '1',\n             ')',\n             ' ',\n             '\\n\\xa0 \\xa0 \\xa0 ',\n             '\\ntotal ',\n             '=',\n             ' sumOfList',\n             '(',\n             'list1',\n             ',',\n             ' ',\n             'len',\n             '(',\n             'list1',\n             ')',\n             ')',\n             ' ',\n             '\\n',\n             '\\n',\n             'print',\n             '(',\n             '\"列表元素之和为: \"',\n             ',',\n             ' total',\n             ')',\n             ' ',\n             '\\n'],\n 'title': 'Python 计算列表元素之和'}\n2021-01-09 18:18:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-count-occurrences-element-list.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:18:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-count-occurrences-element-list.html>\n{'content': ['实例 1',\n             ' ',\n             '\\n',\n             'def',\n             ' countX',\n             '(',\n             'lst',\n             ',',\n             ' x',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 count ',\n             '=',\n             ' ',\n             '0',\n             '\\n\\xa0 \\xa0 ',\n             'for',\n             ' ele ',\n             'in',\n             ' lst: ',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 ',\n             'if',\n             ' ',\n             '(',\n             'ele ',\n             '==',\n             ' x',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 \\xa0 \\xa0 count ',\n             '=',\n             ' count + ',\n             '1',\n             '\\n\\xa0 \\xa0 ',\n             'return',\n             ' count ',\n             '\\n\\xa0 ',\n             '\\nlst ',\n             '=',\n             ' ',\n             '[',\n             '8',\n             ',',\n             ' ',\n             '6',\n             ',',\n             ' ',\n             '8',\n             ',',\n             ' ',\n             '10',\n             ',',\n             ' ',\n             '8',\n             ',',\n             ' ',\n             '20',\n             ',',\n             ' ',\n             '10',\n             ',',\n             ' ',\n             '8',\n             ',',\n             ' ',\n             '8',\n             ']',\n             ' ',\n             '\\nx ',\n             '=',\n             ' ',\n             '8',\n             '\\n',\n             'print',\n             '(',\n             'countX',\n             '(',\n             'lst',\n             ',',\n             ' x',\n             ')',\n             ')',\n             ' ',\n             '\\n',\n             '实例 2: 使用 count() 方法',\n             ' ',\n             '\\n',\n             'def',\n             ' countX',\n             '(',\n             'lst',\n             ',',\n             ' x',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 ',\n             'return',\n             ' lst.',\n             'count',\n             '(',\n             'x',\n             ')',\n             ' ',\n             '\\n\\xa0 ',\n             '\\nlst ',\n             '=',\n             ' ',\n             '[',\n             '8',\n             ',',\n             ' ',\n             '6',\n             ',',\n             ' ',\n             '8',\n             ',',\n             ' ',\n             '10',\n             ',',\n             ' ',\n             '8',\n             ',',\n             ' ',\n             '20',\n             ',',\n             ' ',\n             '10',\n             ',',\n             ' ',\n             '8',\n             ',',\n             ' ',\n             '8',\n             ']',\n             ' ',\n             '\\nx ',\n             '=',\n             ' ',\n             '8',\n             '\\n',\n             'print',\n             '(',\n             'countX',\n             '(',\n             'lst',\n             ',',\n             ' x',\n             ')',\n             ')',\n             ' ',\n             '\\n'],\n 'title': 'Python 计算元素在列表中出现的次数'}\n2021-01-09 18:18:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-copy-list.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:18:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-copy-list.html>\n{'content': ['实例 1',\n             ' ',\n             '\\n',\n             'def',\n             ' clone_runoob',\n             '(',\n             'li1',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 li_copy ',\n             '=',\n             ' li1',\n             '[',\n             ':',\n             ']',\n             ' ',\n             '\\n\\xa0 \\xa0 ',\n             'return',\n             ' li_copy ',\n             '\\n\\xa0 ',\n             '\\nli1 ',\n             '=',\n             ' ',\n             '[',\n             '4',\n             ',',\n             ' ',\n             '8',\n             ',',\n             ' ',\n             '2',\n             ',',\n             ' ',\n             '10',\n             ',',\n             ' ',\n             '15',\n             ',',\n             ' ',\n             '18',\n             ']',\n             ' ',\n             '\\nli2 ',\n             '=',\n             ' clone_runoob',\n             '(',\n             'li1',\n             ')',\n             ' ',\n             '\\n',\n             'print',\n             '(',\n             '\"原始列表:\"',\n             ',',\n             ' li1',\n             ')',\n             ' ',\n             '\\n',\n             'print',\n             '(',\n             '\"复制后列表:\"',\n             ',',\n             ' li2',\n             ')',\n             ' ',\n             '\\n',\n             '实例 2: 使用 extend() 方法',\n             ' ',\n             '\\n',\n             'def',\n             ' clone_runoob',\n             '(',\n             'li1',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 li_copy ',\n             '=',\n             ' ',\n             '[',\n             ']',\n             ' ',\n             '\\n\\xa0 \\xa0 li_copy.',\n             'extend',\n             '(',\n             'li1',\n             ')',\n             ' ',\n             '\\n\\xa0 \\xa0 ',\n             'return',\n             ' li_copy ',\n             '\\n\\xa0 ',\n             '\\nli1 ',\n             '=',\n             ' ',\n             '[',\n             '4',\n             ',',\n             ' ',\n             '8',\n             ',',\n             ' ',\n             '2',\n             ',',\n             ' ',\n             '10',\n             ',',\n             ' ',\n             '15',\n             ',',\n             ' ',\n             '18',\n             ']',\n             ' ',\n             '\\nli2 ',\n             '=',\n             ' clone_runoob',\n             '(',\n             'li1',\n             ')',\n             ' ',\n             '\\n',\n             'print',\n             '(',\n             '\"原始列表:\"',\n             ',',\n             ' li1',\n             ')',\n             ' ',\n             '\\n',\n             'print',\n             '(',\n             '\"复制后列表:\"',\n             ',',\n             ' li2',\n             ')',\n             ' ',\n             '\\n',\n             '实例 3: 使用 list() 方法',\n             ' ',\n             '\\n',\n             'def',\n             ' clone_runoob',\n             '(',\n             'li1',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 li_copy ',\n             '=',\n             ' ',\n             'list',\n             '(',\n             'li1',\n             ')',\n             ' ',\n             '\\n\\xa0 \\xa0 ',\n             'return',\n             ' li_copy ',\n             '\\n\\xa0 ',\n             '\\nli1 ',\n             '=',\n             ' ',\n             '[',\n             '4',\n             ',',\n             ' ',\n             '8',\n             ',',\n             ' ',\n             '2',\n             ',',\n             ' ',\n             '10',\n             ',',\n             ' ',\n             '15',\n             ',',\n             ' ',\n             '18',\n             ']',\n             ' ',\n             '\\nli2 ',\n             '=',\n             ' clone_runoob',\n             '(',\n             'li1',\n             ')',\n             ' ',\n             '\\n',\n             'print',\n             '(',\n             '\"原始列表:\"',\n             ',',\n             ' li1',\n             ')',\n             ' ',\n             '\\n',\n             'print',\n             '(',\n             '\"复制后列表:\"',\n             ',',\n             ' li2',\n             ')',\n             ' ',\n             '\\n'],\n 'title': 'Python 复制列表'}\n2021-01-09 18:18:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-clear-list.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:18:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-clear-list.html>\n{'content': ['实例 1',\n             ' ',\n             '\\nRUNOOB ',\n             '=',\n             ' ',\n             '[',\n             '6',\n             ',',\n             ' ',\n             '0',\n             ',',\n             ' ',\n             '4',\n             ',',\n             ' ',\n             '1',\n             ']',\n             ' ',\n             '\\n',\n             'print',\n             '(',\n             \"'清空前:'\",\n             ',',\n             ' RUNOOB',\n             ')',\n             ' \\xa0',\n             '\\n\\xa0 ',\n             '\\nRUNOOB.',\n             'clear',\n             '(',\n             ')',\n             '\\n',\n             'print',\n             '(',\n             \"'清空后:'\",\n             ',',\n             ' RUNOOB',\n             ')',\n             ' \\xa0',\n             '\\n'],\n 'title': 'Python 清空列表'}\n2021-01-09 18:18:27 [scrapy.extensions.logstats] INFO: Crawled 49 pages (at 15 pages/min), scraped 47 items (at 15 items/min)\n2021-01-09 18:18:30 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-check-element-exists-in-list.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:18:30 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-check-element-exists-in-list.html>\n{'content': ['实例 1',\n             ' ',\n             '\\ntest_list ',\n             '=',\n             ' ',\n             '[',\n             ' ',\n             '1',\n             ',',\n             ' ',\n             '6',\n             ',',\n             ' ',\n             '3',\n             ',',\n             ' ',\n             '5',\n             ',',\n             ' ',\n             '3',\n             ',',\n             ' ',\n             '4',\n             ' ',\n             ']',\n             ' ',\n             '\\n\\xa0 ',\n             '\\n',\n             'print',\n             '(',\n             '\"查看 4 是否在列表中 ( 使用循环 ) : \"',\n             ')',\n             ' ',\n             '\\n\\xa0 ',\n             '\\n',\n             'for',\n             ' i ',\n             'in',\n             ' test_list: ',\n             '\\n\\xa0 \\xa0 ',\n             'if',\n             '(',\n             'i ',\n             '==',\n             ' ',\n             '4',\n             ')',\n             ' : ',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 ',\n             'print',\n             ' ',\n             '(',\n             '\"存在\"',\n             ')',\n             ' ',\n             '\\n\\xa0 ',\n             '\\n',\n             'print',\n             '(',\n             '\"查看 4 是否在列表中 ( 使用 in 关键字 ) : \"',\n             ')',\n             ' ',\n             '\\n',\n             '\\n',\n             'if',\n             ' ',\n             '(',\n             '4',\n             ' ',\n             'in',\n             ' test_list',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 ',\n             'print',\n             ' ',\n             '(',\n             '\"存在\"',\n             ')',\n             ' ',\n             '\\n',\n             '实例 2',\n             ' ',\n             '\\n',\n             '# 初始化列表',\n             '\\ntest_list_set ',\n             '=',\n             ' ',\n             '[',\n             ' ',\n             '1',\n             ',',\n             ' ',\n             '6',\n             ',',\n             ' ',\n             '3',\n             ',',\n             ' ',\n             '5',\n             ',',\n             ' ',\n             '3',\n             ',',\n             ' ',\n             '4',\n             ' ',\n             ']',\n             ' ',\n             '\\ntest_list_bisect ',\n             '=',\n             ' ',\n             '[',\n             ' ',\n             '1',\n             ',',\n             ' ',\n             '6',\n             ',',\n             ' ',\n             '3',\n             ',',\n             ' ',\n             '5',\n             ',',\n             ' ',\n             '3',\n             ',',\n             ' ',\n             '4',\n             ' ',\n             ']',\n             ' ',\n             '\\n\\xa0 ',\n             '\\n',\n             'print',\n             '(',\n             '\"查看 4 是否在列表中 ( 使用 set() + in) : \"',\n             ')',\n             ' ',\n             '\\n\\xa0 ',\n             '\\ntest_list_set ',\n             '=',\n             ' ',\n             'set',\n             '(',\n             'test_list_set',\n             ')',\n             ' ',\n             '\\n',\n             'if',\n             ' ',\n             '4',\n             ' ',\n             'in',\n             ' test_list_set : ',\n             '\\n\\xa0 \\xa0 ',\n             'print',\n             ' ',\n             '(',\n             '\"存在\"',\n             ')',\n             ' ',\n             '\\n\\xa0 ',\n             '\\n',\n             'print',\n             '(',\n             '\"查看 4 是否在列表中 ( 使用 count()) : \"',\n             ')',\n             ' ',\n             '\\n\\xa0 ',\n             '\\n',\n             'if',\n             ' test_list_bisect.',\n             'count',\n             '(',\n             '4',\n             ')',\n             ' ',\n             '>',\n             ' ',\n             '0',\n             ' :',\n             '\\n\\xa0 \\xa0 ',\n             'print',\n             ' ',\n             '(',\n             '\"存在\"',\n             ')',\n             ' ',\n             '\\n'],\n 'title': 'Python 判断元素是否在列表中存在'}\n2021-01-09 18:18:33 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-reversing-list.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:18:33 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-reversing-list.html>\n{'content': ['实例 1',\n             ' ',\n             '\\n',\n             'def',\n             ' Reverse',\n             '(',\n             'lst',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 ',\n             'return',\n             ' ',\n             '[',\n             'ele ',\n             'for',\n             ' ele ',\n             'in',\n             ' ',\n             'reversed',\n             '(',\n             'lst',\n             ')',\n             ']',\n             ' ',\n             '\\n\\xa0 \\xa0 \\xa0 ',\n             '\\nlst ',\n             '=',\n             ' ',\n             '[',\n             '10',\n             ',',\n             ' ',\n             '11',\n             ',',\n             ' ',\n             '12',\n             ',',\n             ' ',\n             '13',\n             ',',\n             ' ',\n             '14',\n             ',',\n             ' ',\n             '15',\n             ']',\n             ' ',\n             '\\n',\n             'print',\n             '(',\n             'Reverse',\n             '(',\n             'lst',\n             ')',\n             ')',\n             ' ',\n             '\\n',\n             '实例 2',\n             ' ',\n             '\\n',\n             'def',\n             ' Reverse',\n             '(',\n             'lst',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 lst.',\n             'reverse',\n             '(',\n             ')',\n             ' ',\n             '\\n\\xa0 \\xa0 ',\n             'return',\n             ' lst ',\n             '\\n\\xa0 \\xa0 \\xa0 ',\n             '\\nlst ',\n             '=',\n             ' ',\n             '[',\n             '10',\n             ',',\n             ' ',\n             '11',\n             ',',\n             ' ',\n             '12',\n             ',',\n             ' ',\n             '13',\n             ',',\n             ' ',\n             '14',\n             ',',\n             ' ',\n             '15',\n             ']',\n             ' ',\n             '\\n',\n             'print',\n             '(',\n             'Reverse',\n             '(',\n             'lst',\n             ')',\n             ')',\n             ' ',\n             '\\n',\n             '实例 3',\n             ' ',\n             '\\n',\n             'def',\n             ' Reverse',\n             '(',\n             'lst',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 new_lst ',\n             '=',\n             ' lst',\n             '[',\n             '::-',\n             '1',\n             ']',\n             ' ',\n             '\\n\\xa0 \\xa0 ',\n             'return',\n             ' new_lst ',\n             '\\n\\xa0 \\xa0 \\xa0 ',\n             '\\nlst ',\n             '=',\n             ' ',\n             '[',\n             '10',\n             ',',\n             ' ',\n             '11',\n             ',',\n             ' ',\n             '12',\n             ',',\n             ' ',\n             '13',\n             ',',\n             ' ',\n             '14',\n             ',',\n             ' ',\n             '15',\n             ']',\n             ' ',\n             '\\n',\n             'print',\n             '(',\n             'Reverse',\n             '(',\n             'lst',\n             ')',\n             ')',\n             ' ',\n             '\\n'],\n 'title': 'Python 翻转列表'}\n2021-01-09 18:18:38 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-list-swap-two-elements.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:18:38 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-list-swap-two-elements.html>\n{'content': ['实例 1',\n             ' ',\n             '\\n',\n             'def',\n             ' swapPositions',\n             '(',\n             'list',\n             ',',\n             ' pos1',\n             ',',\n             ' pos2',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 \\xa0 ',\n             '\\n\\xa0 \\xa0 ',\n             'list',\n             '[',\n             'pos1',\n             ']',\n             ',',\n             ' ',\n             'list',\n             '[',\n             'pos2',\n             ']',\n             ' ',\n             '=',\n             ' ',\n             'list',\n             '[',\n             'pos2',\n             ']',\n             ',',\n             ' ',\n             'list',\n             '[',\n             'pos1',\n             ']',\n             ' ',\n             '\\n\\xa0 \\xa0 ',\n             'return',\n             ' ',\n             'list',\n             '\\n\\xa0 ',\n             '\\nList ',\n             '=',\n             ' ',\n             '[',\n             '23',\n             ',',\n             ' ',\n             '65',\n             ',',\n             ' ',\n             '19',\n             ',',\n             ' ',\n             '90',\n             ']',\n             ' ',\n             '\\npos1',\n             ',',\n             ' pos2 \\xa0',\n             '=',\n             ' ',\n             '1',\n             ',',\n             ' ',\n             '3',\n             '\\n\\xa0 ',\n             '\\n',\n             'print',\n             '(',\n             'swapPositions',\n             '(',\n             'List',\n             ',',\n             ' pos1-',\n             '1',\n             ',',\n             ' pos2-',\n             '1',\n             ')',\n             ')',\n             ' ',\n             '\\n',\n             '实例 2',\n             ' ',\n             '\\n',\n             'def',\n             ' swapPositions',\n             '(',\n             'list',\n             ',',\n             ' pos1',\n             ',',\n             ' pos2',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 \\xa0 ',\n             '\\n\\xa0 \\xa0 first_ele ',\n             '=',\n             ' ',\n             'list',\n             '.',\n             'pop',\n             '(',\n             'pos1',\n             ')',\n             ' \\xa0 \\xa0',\n             '\\n\\xa0 \\xa0 second_ele ',\n             '=',\n             ' ',\n             'list',\n             '.',\n             'pop',\n             '(',\n             'pos2-',\n             '1',\n             ')',\n             ' ',\n             '\\n\\xa0 \\xa0 \\xa0',\n             '\\n\\xa0 \\xa0 ',\n             'list',\n             '.',\n             'insert',\n             '(',\n             'pos1',\n             ',',\n             ' second_ele',\n             ')',\n             ' \\xa0 ',\n             '\\n\\xa0 \\xa0 ',\n             'list',\n             '.',\n             'insert',\n             '(',\n             'pos2',\n             ',',\n             ' first_ele',\n             ')',\n             ' \\xa0 ',\n             '\\n\\xa0 \\xa0 \\xa0 ',\n             '\\n\\xa0 \\xa0 ',\n             'return',\n             ' ',\n             'list',\n             '\\n\\xa0 ',\n             '\\nList ',\n             '=',\n             ' ',\n             '[',\n             '23',\n             ',',\n             ' ',\n             '65',\n             ',',\n             ' ',\n             '19',\n             ',',\n             ' ',\n             '90',\n             ']',\n             ' ',\n             '\\npos1',\n             ',',\n             ' pos2 \\xa0',\n             '=',\n             ' ',\n             '1',\n             ',',\n             ' ',\n             '3',\n             '\\n\\xa0 ',\n             '\\n',\n             'print',\n             '(',\n             'swapPositions',\n             '(',\n             'List',\n             ',',\n             ' pos1-',\n             '1',\n             ',',\n             ' pos2-',\n             '1',\n             ')',\n             ')',\n             ' ',\n             '\\n',\n             '实例 3',\n             ' ',\n             '\\n',\n             'def',\n             ' swapPositions',\n             '(',\n             'list',\n             ',',\n             ' pos1',\n             ',',\n             ' pos2',\n             ')',\n             ': ',\n             '\\n\\xa0 ',\n             '\\n\\xa0 \\xa0 get ',\n             '=',\n             ' ',\n             'list',\n             '[',\n             'pos1',\n             ']',\n             ',',\n             ' ',\n             'list',\n             '[',\n             'pos2',\n             ']',\n             ' ',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0',\n             '\\n\\xa0 \\xa0 ',\n             'list',\n             '[',\n             'pos2',\n             ']',\n             ',',\n             ' ',\n             'list',\n             '[',\n             'pos1',\n             ']',\n             ' ',\n             '=',\n             ' get ',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0',\n             '\\n\\xa0 \\xa0 ',\n             'return',\n             ' ',\n             'list',\n             '\\n\\xa0 ',\n             '\\nList ',\n             '=',\n             ' ',\n             '[',\n             '23',\n             ',',\n             ' ',\n             '65',\n             ',',\n             ' ',\n             '19',\n             ',',\n             ' ',\n             '90',\n             ']',\n             ' ',\n             '\\n\\xa0 ',\n             '\\npos1',\n             ',',\n             ' pos2 \\xa0',\n             '=',\n             ' ',\n             '1',\n             ',',\n             ' ',\n             '3',\n             '\\n',\n             'print',\n             '(',\n             'swapPositions',\n             '(',\n             'List',\n             ',',\n             ' pos1-',\n             '1',\n             ',',\n             ' pos2-',\n             '1',\n             ')',\n             ')',\n             ' ',\n             '\\n'],\n 'title': 'Python 将列表中的指定位置的两个元素对调'}\n2021-01-09 18:18:42 [scrapy.downloadermiddlewares.redirect] DEBUG: Redirecting (301) to <GET https://www.runoob.com/python3/python-string-reverse.html> from <GET http://www.runoob.com/python3/python-string-reverse.html>\n2021-01-09 18:18:46 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-list-interchange.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:18:46 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-list-interchange.html>\n{'content': ['实例 1',\n             ' ',\n             '\\n',\n             'def',\n             ' swapList',\n             '(',\n             'newList',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 size ',\n             '=',\n             ' ',\n             'len',\n             '(',\n             'newList',\n             ')',\n             ' ',\n             '\\n\\xa0 \\xa0 \\xa0 ',\n             '\\n\\xa0 \\xa0 temp ',\n             '=',\n             ' newList',\n             '[',\n             '0',\n             ']',\n             ' ',\n             '\\n\\xa0 \\xa0 newList',\n             '[',\n             '0',\n             ']',\n             ' ',\n             '=',\n             ' newList',\n             '[',\n             'size - ',\n             '1',\n             ']',\n             ' ',\n             '\\n\\xa0 \\xa0 newList',\n             '[',\n             'size - ',\n             '1',\n             ']',\n             ' ',\n             '=',\n             ' temp ',\n             '\\n\\xa0 \\xa0 \\xa0 ',\n             '\\n\\xa0 \\xa0 ',\n             'return',\n             ' newList ',\n             '\\n',\n             '\\nnewList ',\n             '=',\n             ' ',\n             '[',\n             '1',\n             ',',\n             ' ',\n             '2',\n             ',',\n             ' ',\n             '3',\n             ']',\n             ' ',\n             '\\n\\xa0 ',\n             '\\n',\n             'print',\n             '(',\n             'swapList',\n             '(',\n             'newList',\n             ')',\n             ')',\n             ' ',\n             '\\n',\n             '实例 2',\n             ' ',\n             '\\n',\n             'def',\n             ' swapList',\n             '(',\n             'newList',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 \\xa0 ',\n             '\\n\\xa0 \\xa0 newList',\n             '[',\n             '0',\n             ']',\n             ',',\n             ' newList',\n             '[',\n             '-',\n             '1',\n             ']',\n             ' ',\n             '=',\n             ' newList',\n             '[',\n             '-',\n             '1',\n             ']',\n             ',',\n             ' newList',\n             '[',\n             '0',\n             ']',\n             ' ',\n             '\\n\\xa0 ',\n             '\\n\\xa0 \\xa0 ',\n             'return',\n             ' newList ',\n             '\\n\\xa0 \\xa0 \\xa0 ',\n             '\\nnewList ',\n             '=',\n             ' ',\n             '[',\n             '1',\n             ',',\n             ' ',\n             '2',\n             ',',\n             ' ',\n             '3',\n             ']',\n             ' ',\n             '\\n',\n             'print',\n             '(',\n             'swapList',\n             '(',\n             'newList',\n             ')',\n             ')',\n             ' ',\n             '\\n',\n             '实例 3',\n             ' ',\n             '\\n',\n             'def',\n             ' swapList',\n             '(',\n             'list',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 \\xa0 ',\n             '\\n\\xa0 \\xa0 get ',\n             '=',\n             ' ',\n             'list',\n             '[',\n             '-',\n             '1',\n             ']',\n             ',',\n             ' ',\n             'list',\n             '[',\n             '0',\n             ']',\n             ' ',\n             '\\n\\xa0 \\xa0 \\xa0 ',\n             '\\n\\xa0 \\xa0 ',\n             'list',\n             '[',\n             '0',\n             ']',\n             ',',\n             ' ',\n             'list',\n             '[',\n             '-',\n             '1',\n             ']',\n             ' ',\n             '=',\n             ' get ',\n             '\\n\\xa0 \\xa0 \\xa0 ',\n             '\\n\\xa0 \\xa0 ',\n             'return',\n             ' ',\n             'list',\n             '\\n\\xa0 \\xa0 \\xa0 ',\n             '\\nnewList ',\n             '=',\n             ' ',\n             '[',\n             '1',\n             ',',\n             ' ',\n             '2',\n             ',',\n             ' ',\n             '3',\n             ']',\n             ' ',\n             '\\n',\n             'print',\n             '(',\n             'swapList',\n             '(',\n             'newList',\n             ')',\n             ')',\n             ' ',\n             '\\n'],\n 'title': 'Python 将列表中的头尾两个元素对调'}\n2021-01-09 18:18:51 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-array-rotation.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:18:51 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-array-rotation.html>\n{'content': ['实例 1',\n             ' ',\n             '\\n',\n             'def',\n             ' leftRotate',\n             '(',\n             'arr',\n             ',',\n             ' d',\n             ',',\n             ' n',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 ',\n             'for',\n             ' i ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             'd',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 leftRotatebyOne',\n             '(',\n             'arr',\n             ',',\n             ' n',\n             ')',\n             ' ',\n             '\\n',\n             'def',\n             ' leftRotatebyOne',\n             '(',\n             'arr',\n             ',',\n             ' n',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 temp ',\n             '=',\n             ' arr',\n             '[',\n             '0',\n             ']',\n             ' ',\n             '\\n\\xa0 \\xa0 ',\n             'for',\n             ' i ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             'n-',\n             '1',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 arr',\n             '[',\n             'i',\n             ']',\n             ' ',\n             '=',\n             ' arr',\n             '[',\n             'i+',\n             '1',\n             ']',\n             ' ',\n             '\\n\\xa0 \\xa0 arr',\n             '[',\n             'n-',\n             '1',\n             ']',\n             ' ',\n             '=',\n             ' temp ',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 \\xa0 ',\n             '\\n\\xa0 ',\n             '\\n',\n             'def',\n             ' printArray',\n             '(',\n             'arr',\n             ',',\n             'size',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 ',\n             'for',\n             ' i ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             'size',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 ',\n             'print',\n             ' ',\n             '(',\n             '\"%d\"',\n             '% arr',\n             '[',\n             'i',\n             ']',\n             ',',\n             'end',\n             '=',\n             '\" \"',\n             ')',\n             ' ',\n             '\\n\\xa0 ',\n             '\\n',\n             '\\narr ',\n             '=',\n             ' ',\n             '[',\n             '1',\n             ',',\n             ' ',\n             '2',\n             ',',\n             ' ',\n             '3',\n             ',',\n             ' ',\n             '4',\n             ',',\n             ' ',\n             '5',\n             ',',\n             ' ',\n             '6',\n             ',',\n             ' ',\n             '7',\n             ']',\n             ' ',\n             '\\nleftRotate',\n             '(',\n             'arr',\n             ',',\n             ' ',\n             '2',\n             ',',\n             ' ',\n             '7',\n             ')',\n             ' ',\n             '\\nprintArray',\n             '(',\n             'arr',\n             ',',\n             ' ',\n             '7',\n             ')',\n             ' ',\n             '\\n',\n             '实例 2',\n             ' ',\n             '\\n',\n             'def',\n             ' leftRotate',\n             '(',\n             'arr',\n             ',',\n             ' d',\n             ',',\n             ' n',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 ',\n             'for',\n             ' i ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             'gcd',\n             '(',\n             'd',\n             ',',\n             'n',\n             ')',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 \\xa0 ',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 temp ',\n             '=',\n             ' arr',\n             '[',\n             'i',\n             ']',\n             ' ',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 j ',\n             '=',\n             ' i ',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 ',\n             'while',\n             ' ',\n             '1',\n             ': ',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 \\xa0 \\xa0 k ',\n             '=',\n             ' j + d ',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 \\xa0 \\xa0 ',\n             'if',\n             ' k ',\n             '>=',\n             ' n: ',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 \\xa0 \\xa0 \\xa0 \\xa0 k ',\n             '=',\n             ' k - n ',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 \\xa0 \\xa0 ',\n             'if',\n             ' k ',\n             '==',\n             ' i: ',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 \\xa0 \\xa0 \\xa0 \\xa0 ',\n             'break',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 \\xa0 \\xa0 arr',\n             '[',\n             'j',\n             ']',\n             ' ',\n             '=',\n             ' arr',\n             '[',\n             'k',\n             ']',\n             ' ',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 \\xa0 \\xa0 j ',\n             '=',\n             ' k ',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 arr',\n             '[',\n             'j',\n             ']',\n             ' ',\n             '=',\n             ' temp ',\n             '\\n',\n             '\\n',\n             'def',\n             ' printArray',\n             '(',\n             'arr',\n             ',',\n             ' size',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 ',\n             'for',\n             ' i ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             'size',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 ',\n             'print',\n             ' ',\n             '(',\n             '\"%d\"',\n             ' % arr',\n             '[',\n             'i',\n             ']',\n             ',',\n             ' end',\n             '=',\n             '\" \"',\n             ')',\n             ' ',\n             '\\n',\n             '\\n',\n             'def',\n             ' gcd',\n             '(',\n             'a',\n             ',',\n             ' b',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 ',\n             'if',\n             ' b ',\n             '==',\n             ' ',\n             '0',\n             ': ',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 ',\n             'return',\n             ' a',\n             ';',\n             ' ',\n             '\\n\\xa0 \\xa0 ',\n             'else',\n             ': ',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 ',\n             'return',\n             ' gcd',\n             '(',\n             'b',\n             ',',\n             ' a%b',\n             ')',\n             ' ',\n             '\\n',\n             '\\narr ',\n             '=',\n             ' ',\n             '[',\n             '1',\n             ',',\n             ' ',\n             '2',\n             ',',\n             ' ',\n             '3',\n             ',',\n             ' ',\n             '4',\n             ',',\n             ' ',\n             '5',\n             ',',\n             ' ',\n             '6',\n             ',',\n             ' ',\n             '7',\n             ']',\n             ' ',\n             '\\nleftRotate',\n             '(',\n             'arr',\n             ',',\n             ' ',\n             '2',\n             ',',\n             ' ',\n             '7',\n             ')',\n             ' ',\n             '\\nprintArray',\n             '(',\n             'arr',\n             ',',\n             ' ',\n             '7',\n             ')',\n             ' ',\n             '\\n',\n             '实例 3',\n             ' ',\n             '\\n',\n             'def',\n             ' rverseArray',\n             '(',\n             'arr',\n             ',',\n             ' start',\n             ',',\n             ' end',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 ',\n             'while',\n             ' ',\n             '(',\n             'start ',\n             '<',\n             ' end',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 temp ',\n             '=',\n             ' arr',\n             '[',\n             'start',\n             ']',\n             ' ',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 arr',\n             '[',\n             'start',\n             ']',\n             ' ',\n             '=',\n             ' arr',\n             '[',\n             'end',\n             ']',\n             ' ',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 arr',\n             '[',\n             'end',\n             ']',\n             ' ',\n             '=',\n             ' temp ',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 start +',\n             '=',\n             ' ',\n             '1',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 end ',\n             '=',\n             ' end-',\n             '1',\n             '\\n\\xa0 ',\n             '\\n',\n             'def',\n             ' leftRotate',\n             '(',\n             'arr',\n             ',',\n             ' d',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 n ',\n             '=',\n             ' ',\n             'len',\n             '(',\n             'arr',\n             ')',\n             ' ',\n             '\\n\\xa0 \\xa0 rverseArray',\n             '(',\n             'arr',\n             ',',\n             ' ',\n             '0',\n             ',',\n             ' d-',\n             '1',\n             ')',\n             ' ',\n             '\\n\\xa0 \\xa0 rverseArray',\n             '(',\n             'arr',\n             ',',\n             ' d',\n             ',',\n             ' n-',\n             '1',\n             ')',\n             ' ',\n             '\\n\\xa0 \\xa0 rverseArray',\n             '(',\n             'arr',\n             ',',\n             ' ',\n             '0',\n             ',',\n             ' n-',\n             '1',\n             ')',\n             ' ',\n             '\\n\\xa0 ',\n             '\\n',\n             'def',\n             ' printArray',\n             '(',\n             'arr',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 ',\n             'for',\n             ' i ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             '0',\n             ',',\n             ' ',\n             'len',\n             '(',\n             'arr',\n             ')',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 ',\n             'print',\n             ' ',\n             '(',\n             'arr',\n             '[',\n             'i',\n             ']',\n             ',',\n             ' end',\n             '=',\n             \"' '\",\n             ')',\n             ' ',\n             '\\n\\xa0 ',\n             '\\narr ',\n             '=',\n             ' ',\n             '[',\n             '1',\n             ',',\n             ' ',\n             '2',\n             ',',\n             ' ',\n             '3',\n             ',',\n             ' ',\n             '4',\n             ',',\n             ' ',\n             '5',\n             ',',\n             ' ',\n             '6',\n             ',',\n             ' ',\n             '7',\n             ']',\n             ' ',\n             '\\nleftRotate',\n             '(',\n             'arr',\n             ',',\n             ' ',\n             '2',\n             ')',\n             ' ',\n             '\\nprintArray',\n             '(',\n             'arr',\n             ')',\n             ' ',\n             '\\n'],\n 'title': 'Python 数组翻转指定个数的元素'}\n2021-01-09 18:18:54 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-sum-array.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:18:54 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-sum-array.html>\n{'content': ['实例',\n             ' ',\n             '\\n',\n             '# 定义函数，arr 为数组，n 为数组长度，可作为备用参数，这里没有用到',\n             '\\n',\n             'def',\n             ' _sum',\n             '(',\n             'arr',\n             ',',\n             'n',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 \\xa0 ',\n             '\\n\\xa0 \\xa0 ',\n             '# 使用内置的 sum 函数计算',\n             '\\n\\xa0 \\xa0 ',\n             'return',\n             '(',\n             'sum',\n             '(',\n             'arr',\n             ')',\n             ')',\n             ' ',\n             '\\n\\xa0 ',\n             '\\n',\n             '# 调用函数',\n             '\\narr',\n             '=',\n             '[',\n             ']',\n             ' ',\n             '\\n',\n             '# 数组元素',\n             '\\narr ',\n             '=',\n             ' ',\n             '[',\n             '12',\n             ',',\n             ' ',\n             '3',\n             ',',\n             ' ',\n             '4',\n             ',',\n             ' ',\n             '15',\n             ']',\n             ' ',\n             '\\n\\xa0 ',\n             '\\n',\n             '# 计算数组元素的长度',\n             '\\nn ',\n             '=',\n             ' ',\n             'len',\n             '(',\n             'arr',\n             ')',\n             ' ',\n             '\\n\\xa0 ',\n             '\\nans ',\n             '=',\n             ' _sum',\n             '(',\n             'arr',\n             ',',\n             'n',\n             ')',\n             ' ',\n             '\\n\\xa0 ',\n             '\\n',\n             '# 输出结果',\n             '\\n',\n             'print',\n             ' ',\n             '(',\n             \"'数组元素之和为'\",\n             ',',\n             'ans',\n             ')',\n             ' ',\n             '\\n'],\n 'title': 'Python 计算数组元素之和'}\n2021-01-09 18:18:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-cube-sum.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:18:57 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-cube-sum.html>\n{'content': ['实例',\n             ' ',\n             '\\n',\n             '# 定义立方和的函数',\n             '\\n',\n             'def',\n             ' sumOfSeries',\n             '(',\n             'n',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 ',\n             'sum',\n             ' ',\n             '=',\n             ' ',\n             '0',\n             '\\n\\xa0 \\xa0 ',\n             'for',\n             ' i ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             '1',\n             ',',\n             ' n+',\n             '1',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 ',\n             'sum',\n             ' +',\n             '=',\n             'i*i*i ',\n             '\\n\\xa0 \\xa0 \\xa0 \\xa0 \\xa0 ',\n             '\\n\\xa0 \\xa0 ',\n             'return',\n             ' ',\n             'sum',\n             '\\n\\xa0 ',\n             '\\n\\xa0 \\xa0',\n             '\\n',\n             '# 调用函数',\n             '\\nn ',\n             '=',\n             ' ',\n             '5',\n             '\\n',\n             'print',\n             '(',\n             'sumOfSeries',\n             '(',\n             'n',\n             ')',\n             ')',\n             ' ',\n             '\\n'],\n 'title': 'Python 计算 n 个自然数的立方和'}\n2021-01-09 18:19:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-armstrong-number.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:19:01 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-armstrong-number.html>\n{'content': [' \\r\\n',\n             '实例(Python 3.0+)',\n             ' \\r\\n',\n             '\\r\\n',\n             '# Filename : test.py',\n             '\\n',\n             '# author by : www.runoob.com',\n             '\\n \\n',\n             '# Python 检测用户输入的数字是否为阿姆斯特朗数',\n             '\\n \\n',\n             '# 获取用户输入的数字',\n             '\\n',\n             'num',\n             ' = ',\n             'int',\n             '(',\n             'input',\n             '(',\n             '\"',\n             '请输入一个数字: ',\n             '\"',\n             ')',\n             ')',\n             '\\n \\n',\n             '# 初始化变量 sum',\n             '\\n',\n             'sum',\n             ' = ',\n             '0',\n             '\\n',\n             '# 指数',\n             '\\n',\n             'n',\n             ' = ',\n             'len',\n             '(',\n             'str',\n             '(',\n             'num',\n             ')',\n             ')',\n             '\\n \\n',\n             '# 检测',\n             '\\n',\n             'temp',\n             ' = ',\n             'num',\n             '\\n',\n             'while',\n             ' ',\n             'temp',\n             ' > ',\n             '0',\n             ':\\n   ',\n             'digit',\n             ' = ',\n             'temp',\n             ' % ',\n             '10',\n             '\\n   ',\n             'sum',\n             ' += ',\n             'digit',\n             ' ** ',\n             'n',\n             '\\n   ',\n             'temp',\n             ' //= ',\n             '10',\n             '\\n \\n',\n             '# 输出结果',\n             '\\n',\n             'if',\n             ' ',\n             'num',\n             ' == ',\n             'sum',\n             ':\\n   ',\n             'print',\n             '(',\n             'num',\n             ',',\n             '\"',\n             '是阿姆斯特朗数',\n             '\"',\n             ')',\n             '\\n',\n             'else',\n             ':\\n   ',\n             'print',\n             '(',\n             'num',\n             ',',\n             '\"',\n             '不是阿姆斯特朗数',\n             '\"',\n             ')',\n             '\\r\\n',\n             '\\r\\n',\n             ' \\r\\n',\n             '实例(Python 3.0+)',\n             ' \\r\\n',\n             '\\r\\n',\n             '# Filename ：test.py',\n             '\\n',\n             '# author by : www.runoob.com',\n             '\\n \\n',\n             '# 获取用户输入数字',\n             '\\n',\n             'lower',\n             ' = ',\n             'int',\n             '(',\n             'input',\n             '(',\n             '\"',\n             '最小值: ',\n             '\"',\n             ')',\n             ')',\n             '\\n',\n             'upper',\n             ' = ',\n             'int',\n             '(',\n             'input',\n             '(',\n             '\"',\n             '最大值: ',\n             '\"',\n             ')',\n             ')',\n             '\\n \\n',\n             'for',\n             ' ',\n             'num',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             'lower',\n             ',',\n             'upper',\n             ' + ',\n             '1',\n             ')',\n             ':\\n   ',\n             '# 初始化 sum',\n             '\\n   ',\n             'sum',\n             ' = ',\n             '0',\n             '\\n   ',\n             '# 指数',\n             '\\n   ',\n             'n',\n             ' = ',\n             'len',\n             '(',\n             'str',\n             '(',\n             'num',\n             ')',\n             ')',\n             '\\n \\n   ',\n             '# 检测',\n             '\\n   ',\n             'temp',\n             ' = ',\n             'num',\n             '\\n   ',\n             'while',\n             ' ',\n             'temp',\n             ' > ',\n             '0',\n             ':\\n       ',\n             'digit',\n             ' = ',\n             'temp',\n             ' % ',\n             '10',\n             '\\n       ',\n             'sum',\n             ' += ',\n             'digit',\n             ' ** ',\n             'n',\n             '\\n       ',\n             'temp',\n             ' //= ',\n             '10',\n             '\\n \\n   ',\n             'if',\n             ' ',\n             'num',\n             ' == ',\n             'sum',\n             ':\\n       ',\n             'print',\n             '(',\n             'num',\n             ')',\n             '\\r\\n',\n             '\\r\\n'],\n 'title': 'Python 阿姆斯特朗数'}\n2021-01-09 18:19:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-fibonacci-sequence.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:19:04 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-fibonacci-sequence.html>\n{'content': [' \\r\\n',\n             '实例(Python 3.0+)',\n             ' \\r\\n',\n             '\\r\\n',\n             '# -*- coding: UTF-8 -*-',\n             '\\n \\n',\n             '# Filename : test.py',\n             '\\n',\n             '# author by : www.runoob.com',\n             '\\n \\n',\n             '# Python 斐波那契数列实现',\n             '\\n \\n',\n             '# 获取用户输入数据',\n             '\\n',\n             'nterms',\n             ' = ',\n             'int',\n             '(',\n             'input',\n             '(',\n             '\"',\n             '你需要几项？',\n             '\"',\n             ')',\n             ')',\n             '\\n \\n',\n             '# 第一和第二项',\n             '\\n',\n             'n1',\n             ' = ',\n             '0',\n             '\\n',\n             'n2',\n             ' = ',\n             '1',\n             '\\n',\n             'count',\n             ' = ',\n             '2',\n             '\\n \\n',\n             '# 判断输入的值是否合法',\n             '\\n',\n             'if',\n             ' ',\n             'nterms',\n             ' <= ',\n             '0',\n             ':\\n   ',\n             'print',\n             '(',\n             '\"',\n             '请输入一个正整数。',\n             '\"',\n             ')',\n             '\\n',\n             'elif',\n             ' ',\n             'nterms',\n             ' == ',\n             '1',\n             ':\\n   ',\n             'print',\n             '(',\n             '\"',\n             '斐波那契数列：',\n             '\"',\n             ')',\n             '\\n   ',\n             'print',\n             '(',\n             'n1',\n             ')',\n             '\\n',\n             'else',\n             ':\\n   ',\n             'print',\n             '(',\n             '\"',\n             '斐波那契数列：',\n             '\"',\n             ')',\n             '\\n   ',\n             'print',\n             '(',\n             'n1',\n             ',',\n             '\"',\n             ',',\n             '\"',\n             ',',\n             'n2',\n             ',',\n             'end',\n             '=',\n             '\"',\n             ' , ',\n             '\"',\n             ')',\n             '\\n   ',\n             'while',\n             ' ',\n             'count',\n             ' < ',\n             'nterms',\n             ':\\n       ',\n             'nth',\n             ' = ',\n             'n1',\n             ' + ',\n             'n2',\n             '\\n       ',\n             'print',\n             '(',\n             'nth',\n             ',',\n             'end',\n             '=',\n             '\"',\n             ' , ',\n             '\"',\n             ')',\n             '\\n       ',\n             '# 更新值',\n             '\\n       ',\n             'n1',\n             ' = ',\n             'n2',\n             '\\n       ',\n             'n2',\n             ' = ',\n             'nth',\n             '\\n       ',\n             'count',\n             ' += ',\n             '1',\n             '\\r\\n'],\n 'title': 'Python 斐波那契数列'}\n2021-01-09 18:19:08 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-99-table.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:19:08 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-99-table.html>\n{'content': [' \\r\\n',\n             '实例',\n             ' \\r\\n',\n             '\\r\\n',\n             '# -*- coding: UTF-8 -*-',\n             '\\n \\n',\n             '# Filename : test.py',\n             '\\n',\n             '# author by : www.runoob.com',\n             '\\n \\n',\n             '# 九九乘法表',\n             '\\n',\n             'for',\n             ' ',\n             'i',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             '1',\n             ', ',\n             '10',\n             ')',\n             ':\\n    ',\n             'for',\n             ' ',\n             'j',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             '1',\n             ', ',\n             'i',\n             '+',\n             '1',\n             ')',\n             ':\\n        ',\n             'print',\n             '(',\n             \"'\",\n             '{}x{}={}',\n             '\\\\t',\n             \"'\",\n             '.',\n             'format',\n             '(',\n             'j',\n             ', ',\n             'i',\n             ', ',\n             'i',\n             '*',\n             'j',\n             ')',\n             ', ',\n             'end',\n             '=',\n             \"'\",\n             \"'\",\n             ')',\n             '\\n    ',\n             'print',\n             '(',\n             ')',\n             '\\r\\n',\n             '\\r\\n'],\n 'title': 'Python 九九乘法表'}\n2021-01-09 18:19:12 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-factorial.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:19:12 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-factorial.html>\n{'content': [' \\r\\n',\n             '实例',\n             ' \\r\\n',\n             '\\r\\n',\n             '#!/usr/bin/python3',\n             '\\n \\n',\n             '# Filename : test.py',\n             '\\n',\n             '# author by : www.runoob.com',\n             '\\n \\n',\n             '# 通过用户输入数字计算阶乘',\n             '\\n \\n',\n             '# 获取用户输入的数字',\n             '\\n',\n             'num',\n             ' = ',\n             'int',\n             '(',\n             'input',\n             '(',\n             '\"',\n             '请输入一个数字: ',\n             '\"',\n             ')',\n             ')',\n             '\\n',\n             'factorial',\n             ' = ',\n             '1',\n             '\\n \\n',\n             '# 查看数字是负数，0 或 正数',\n             '\\n',\n             'if',\n             ' ',\n             'num',\n             ' < ',\n             '0',\n             ':\\n   ',\n             'print',\n             '(',\n             '\"',\n             '抱歉，负数没有阶乘',\n             '\"',\n             ')',\n             '\\n',\n             'elif',\n             ' ',\n             'num',\n             ' == ',\n             '0',\n             ':\\n   ',\n             'print',\n             '(',\n             '\"',\n             '0 的阶乘为 1',\n             '\"',\n             ')',\n             '\\n',\n             'else',\n             ':\\n   ',\n             'for',\n             ' ',\n             'i',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             '1',\n             ',',\n             'num',\n             ' + ',\n             '1',\n             ')',\n             ':\\n       ',\n             'factorial',\n             ' = ',\n             'factorial',\n             '*',\n             'i',\n             '\\n   ',\n             'print',\n             '(',\n             '\"',\n             '%d 的阶乘为 %d',\n             '\"',\n             ' %',\n             '(',\n             'num',\n             ',',\n             'factorial',\n             ')',\n             ')',\n             '\\r\\n'],\n 'title': 'Python 阶乘实例'}\n2021-01-09 18:19:16 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-prime-number-intervals.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:19:16 [scrapy.core.scraper] ERROR: Error processing {'content': [' \\r\\n',\n             '实例(Python 3.0+)',\n             ' \\r\\n',\n             '\\r\\n',\n             '#!/usr/bin/python3',\n             '\\n \\n',\n             '# 输出指定范围内的素数',\n             '\\n \\n',\n             '# take input from the user',\n             '\\n',\n             'lower',\n             ' = ',\n             'int',\n             '(',\n             'input',\n             '(',\n             '\"',\n             '输入区间最小值: ',\n             '\"',\n             ')',\n             ')',\n             '\\n',\n             'upper',\n             ' = ',\n             'int',\n             '(',\n             'input',\n             '(',\n             '\"',\n             '输入区间最大值: ',\n             '\"',\n             ')',\n             ')',\n             '\\n \\n',\n             'for',\n             ' ',\n             'num',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             'lower',\n             ',',\n             'upper',\n             ' + ',\n             '1',\n             ')',\n             ':\\n    ',\n             '# 素数大于 1',\n             '\\n    ',\n             'if',\n             ' ',\n             'num',\n             ' > ',\n             '1',\n             ':\\n        ',\n             'for',\n             ' ',\n             'i',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             '2',\n             ',',\n             'num',\n             ')',\n             ':\\n            ',\n             'if',\n             ' ',\n             '(',\n             'num',\n             ' % ',\n             'i',\n             ')',\n             ' == ',\n             '0',\n             ':\\n                ',\n             'break',\n             '\\n        ',\n             'else',\n             ':\\n            ',\n             'print',\n             '(',\n             'num',\n             ')',\n             '\\r\\n'],\n 'title': 'Python 输出指定范围内的素数\\r\\n'}\nTraceback (most recent call last):\n  File \"E:\\python3.8\\lib\\site-packages\\twisted\\internet\\defer.py\", line 654, in _runCallbacks\n    current.result = callback(current.result, *args, **kw)\n  File \"E:\\python3.8\\lib\\site-packages\\scrapy\\utils\\defer.py\", line 154, in f\n    return deferred_from_coro(coro_f(*coro_args, **coro_kwargs))\n  File \"E:\\python日记\\python爬虫\\PythonExample\\PythonExample\\pipelines.py\", line 16, in process_item\n    with open(self.path+'/PythonExample/py/'+item['title']+'.py', 'w', encoding='utf-8') as f:\nOSError: [Errno 22] Invalid argument: 'E:\\\\python日记\\\\python爬虫\\\\PythonExample/PythonExample/py/Python 输出指定范围内的素数\\r\\n.py'\n2021-01-09 18:19:20 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-prime-number.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:19:20 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-prime-number.html>\n{'content': ['\\r\\n',\n             'test.py 文件：',\n             '\\r\\n',\n             '\\r\\n',\n             '# -*- coding: UTF-8 -*-',\n             '\\n \\n',\n             '# Filename : test.py',\n             '\\n',\n             '# author by : www.runoob.com',\n             '\\n \\n',\n             '# Python 程序用于检测用户输入的数字是否为质数',\n             '\\n \\n',\n             '# 用户输入数字',\n             '\\n',\n             'num',\n             ' = ',\n             'int',\n             '(',\n             'input',\n             '(',\n             '\"',\n             '请输入一个数字: ',\n             '\"',\n             ')',\n             ')',\n             '\\n \\n',\n             '# 质数大于 1',\n             '\\n',\n             'if',\n             ' ',\n             'num',\n             ' > ',\n             '1',\n             ':\\n   ',\n             '# 查看因子',\n             '\\n   ',\n             'for',\n             ' ',\n             'i',\n             ' ',\n             'in',\n             ' ',\n             'range',\n             '(',\n             '2',\n             ',',\n             'num',\n             ')',\n             ':\\n       ',\n             'if',\n             ' ',\n             '(',\n             'num',\n             ' % ',\n             'i',\n             ')',\n             ' == ',\n             '0',\n             ':\\n           ',\n             'print',\n             '(',\n             'num',\n             ',',\n             '\"',\n             '不是质数',\n             '\"',\n             ')',\n             '\\n           ',\n             'print',\n             '(',\n             'i',\n             ',',\n             '\"',\n             '乘于',\n             '\"',\n             ',',\n             'num',\n             '//',\n             'i',\n             ',',\n             '\"',\n             '是',\n             '\"',\n             ',',\n             'num',\n             ')',\n             '\\n           ',\n             'break',\n             '\\n   ',\n             'else',\n             ':\\n       ',\n             'print',\n             '(',\n             'num',\n             ',',\n             '\"',\n             '是质数',\n             '\"',\n             ')',\n             '\\n       \\n',\n             '# 如果输入的数字小于或等于 1，不是质数',\n             '\\n',\n             'else',\n             ':\\n   ',\n             'print',\n             '(',\n             'num',\n             ',',\n             '\"',\n             '不是质数',\n             '\"',\n             ')',\n             '\\r\\n',\n             '\\r\\n'],\n 'title': 'Python 质数判断'}\n2021-01-09 18:19:24 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-largest-number.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:19:24 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-largest-number.html>\n{'content': [' \\r\\n',\n             '实例(Python 3.0+)',\n             ' \\r\\n',\n             '\\r\\n',\n             '# -*- coding: UTF-8 -*-',\n             '\\n \\n',\n             '# Filename : test.py',\n             '\\n',\n             '# author by : www.runoob.com',\n             '\\n \\n',\n             '# 最简单的',\n             '\\n',\n             'print',\n             '(',\n             'max',\n             '(',\n             '1',\n             ', ',\n             '2',\n             ')',\n             ')',\n             '\\n',\n             'print',\n             '(',\n             'max',\n             '(',\n             \"'\",\n             'a',\n             \"'\",\n             ', ',\n             \"'\",\n             'b',\n             \"'\",\n             ')',\n             ')',\n             '\\n \\n',\n             '# 也可以对列表和元组使用',\n             '\\n',\n             'print',\n             '(',\n             'max',\n             '(',\n             '[',\n             '1',\n             ',',\n             '2',\n             ']',\n             ')',\n             ')',\n             '\\n',\n             'print',\n             '(',\n             'max',\n             '(',\n             '(',\n             '1',\n             ',',\n             '2',\n             ')',\n             ')',\n             ')',\n             '\\n \\n',\n             '# 更多实例',\n             '\\n',\n             'print',\n             '(',\n             '\"',\n             '80, 100, 1000 最大值为: ',\n             '\"',\n             ', ',\n             'max',\n             '(',\n             '80',\n             ', ',\n             '100',\n             ', ',\n             '1000',\n             ')',\n             ')',\n             '\\n',\n             'print',\n             '(',\n             '\"',\n             '-20, 100, 400最大值为: ',\n             '\"',\n             ', ',\n             'max',\n             '(',\n             '-',\n             '20',\n             ', ',\n             '100',\n             ', ',\n             '400',\n             ')',\n             ')',\n             '\\n',\n             'print',\n             '(',\n             '\"',\n             '-80, -20, -10最大值为: ',\n             '\"',\n             ', ',\n             'max',\n             '(',\n             '-',\n             '80',\n             ', -',\n             '20',\n             ', -',\n             '10',\n             ')',\n             ')',\n             '\\n',\n             'print',\n             '(',\n             '\"',\n             '0, 100, -400最大值为:',\n             '\"',\n             ', ',\n             'max',\n             '(',\n             '0',\n             ', ',\n             '100',\n             ', -',\n             '400',\n             ')',\n             ')',\n             '\\r\\n'],\n 'title': 'Python 获取最大值函数'}\n2021-01-09 18:19:27 [scrapy.extensions.logstats] INFO: Crawled 63 pages (at 14 pages/min), scraped 60 items (at 13 items/min)\n2021-01-09 18:19:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-leap-year.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:19:28 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-leap-year.html>\n{'content': [' \\r\\n',\n             '实例(Python 3.0+)',\n             ' \\r\\n',\n             '\\r\\n',\n             '# -*- coding: UTF-8 -*-',\n             '\\n \\n',\n             '# Filename : test.py',\n             '\\n',\n             '# author by : www.runoob.com',\n             '\\n \\n',\n             'year',\n             ' = ',\n             'int',\n             '(',\n             'input',\n             '(',\n             '\"',\n             '输入一个年份: ',\n             '\"',\n             ')',\n             ')',\n             '\\n',\n             'if',\n             ' ',\n             '(',\n             'year',\n             ' % ',\n             '4',\n             ')',\n             ' == ',\n             '0',\n             ':\\n   ',\n             'if',\n             ' ',\n             '(',\n             'year',\n             ' % ',\n             '100',\n             ')',\n             ' == ',\n             '0',\n             ':\\n       ',\n             'if',\n             ' ',\n             '(',\n             'year',\n             ' % ',\n             '400',\n             ')',\n             ' == ',\n             '0',\n             ':\\n           ',\n             'print',\n             '(',\n             '\"',\n             '{0} 是闰年',\n             '\"',\n             '.',\n             'format',\n             '(',\n             'year',\n             ')',\n             ')',\n             '   ',\n             '# 整百年能被400整除的是闰年',\n             '\\n       ',\n             'else',\n             ':\\n           ',\n             'print',\n             '(',\n             '\"',\n             '{0} 不是闰年',\n             '\"',\n             '.',\n             'format',\n             '(',\n             'year',\n             ')',\n             ')',\n             '\\n   ',\n             'else',\n             ':\\n       ',\n             'print',\n             '(',\n             '\"',\n             '{0} 是闰年',\n             '\"',\n             '.',\n             'format',\n             '(',\n             'year',\n             ')',\n             ')',\n             '       ',\n             '# 非整百年能被4整除的为闰年',\n             '\\n',\n             'else',\n             ':\\n   ',\n             'print',\n             '(',\n             '\"',\n             '{0} 不是闰年',\n             '\"',\n             '.',\n             'format',\n             '(',\n             'year',\n             ')',\n             ')',\n             '\\r\\n'],\n 'title': 'Python 判断闰年'}\n2021-01-09 18:19:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-odd-even.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:19:32 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-odd-even.html>\n{'content': [' \\r\\n',\n             '实例(Python 3.0+)',\n             ' \\r\\n',\n             '\\r\\n',\n             '# Filename : test.py',\n             '\\n',\n             '# author by : www.runoob.com',\n             '\\n \\n',\n             '# Python 判断奇数偶数',\n             '\\n',\n             '# 如果是偶数除于 2 余数为 0',\n             '\\n',\n             '# 如果余数为 1 则为奇数',\n             '\\n \\n',\n             'num',\n             ' = ',\n             'int',\n             '(',\n             'input',\n             '(',\n             '\"',\n             '输入一个数字: ',\n             '\"',\n             ')',\n             ')',\n             '\\n',\n             'if',\n             ' ',\n             '(',\n             'num',\n             ' % ',\n             '2',\n             ')',\n             ' == ',\n             '0',\n             ':\\n   ',\n             'print',\n             '(',\n             '\"',\n             '{0} 是偶数',\n             '\"',\n             '.',\n             'format',\n             '(',\n             'num',\n             ')',\n             ')',\n             '\\n',\n             'else',\n             ':\\n   ',\n             'print',\n             '(',\n             '\"',\n             '{0} 是奇数',\n             '\"',\n             '.',\n             'format',\n             '(',\n             'num',\n             ')',\n             ')',\n             '\\r\\n',\n             '\\r\\n'],\n 'title': 'Python 判断奇数偶数'}\n2021-01-09 18:19:36 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-check-is-number.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:19:36 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-check-is-number.html>\n{'content': [' \\r\\n',\n             '实例(Python 3.0+)',\n             ' \\r\\n',\n             '\\r\\n',\n             '# -*- coding: UTF-8 -*-',\n             '\\n \\n',\n             '# Filename : test.py',\n             '\\n',\n             '# author by : www.runoob.com',\n             '\\n \\n',\n             'def',\n             ' ',\n             'is_number',\n             '(',\n             's',\n             ')',\n             ':\\n    ',\n             'try',\n             ':\\n        ',\n             'float',\n             '(',\n             's',\n             ')',\n             '\\n        ',\n             'return',\n             ' ',\n             'True',\n             '\\n    ',\n             'except',\n             ' ',\n             'ValueError',\n             ':\\n        ',\n             'pass',\n             '\\n \\n    ',\n             'try',\n             ':\\n        ',\n             'import',\n             ' ',\n             'unicodedata',\n             '\\n        ',\n             'unicodedata',\n             '.',\n             'numeric',\n             '(',\n             's',\n             ')',\n             '\\n        ',\n             'return',\n             ' ',\n             'True',\n             '\\n    ',\n             'except',\n             ' ',\n             '(',\n             'TypeError',\n             ', ',\n             'ValueError',\n             ')',\n             ':\\n        ',\n             'pass',\n             '\\n \\n    ',\n             'return',\n             ' ',\n             'False',\n             '\\n \\n',\n             '# 测试字符串和数字',\n             '\\n',\n             'print',\n             '(',\n             'is_number',\n             '(',\n             \"'\",\n             'foo',\n             \"'\",\n             ')',\n             ')',\n             '   ',\n             '# False',\n             '\\n',\n             'print',\n             '(',\n             'is_number',\n             '(',\n             \"'\",\n             '1',\n             \"'\",\n             ')',\n             ')',\n             '     ',\n             '# True',\n             '\\n',\n             'print',\n             '(',\n             'is_number',\n             '(',\n             \"'\",\n             '1.3',\n             \"'\",\n             ')',\n             ')',\n             '   ',\n             '# True',\n             '\\n',\n             'print',\n             '(',\n             'is_number',\n             '(',\n             \"'\",\n             '-1.37',\n             \"'\",\n             ')',\n             ')',\n             ' ',\n             '# True',\n             '\\n',\n             'print',\n             '(',\n             'is_number',\n             '(',\n             \"'\",\n             '1e3',\n             \"'\",\n             ')',\n             ')',\n             '   ',\n             '# True',\n             '\\n \\n',\n             '# 测试 Unicode',\n             '\\n',\n             '# 阿拉伯语 5',\n             '\\n',\n             'print',\n             '(',\n             'is_number',\n             '(',\n             \"'\",\n             '٥',\n             \"'\",\n             ')',\n             ')',\n             '  ',\n             '# True',\n             '\\n',\n             '# 泰语 2',\n             '\\n',\n             'print',\n             '(',\n             'is_number',\n             '(',\n             \"'\",\n             '๒',\n             \"'\",\n             ')',\n             ')',\n             '  ',\n             '# True',\n             '\\n',\n             '# 中文数字',\n             '\\n',\n             'print',\n             '(',\n             'is_number',\n             '(',\n             \"'\",\n             '四',\n             \"'\",\n             ')',\n             ')',\n             ' ',\n             '# True',\n             '\\n',\n             '# 版权号',\n             '\\n',\n             'print',\n             '(',\n             'is_number',\n             '(',\n             \"'\",\n             '©',\n             \"'\",\n             ')',\n             ')',\n             '  ',\n             '# False',\n             '\\r\\n'],\n 'title': 'Python 判断字符串是否为数字'}\n2021-01-09 18:19:39 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-if-example.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:19:39 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-if-example.html>\n{'content': [' \\r\\n',\n             '实例(Python 3.0+)',\n             ' \\r\\n',\n             '\\r\\n',\n             '# Filename : test.py',\n             '\\n',\n             '# author by : www.runoob.com',\n             '\\n \\n',\n             '# 用户输入数字',\n             '\\n \\n',\n             'num',\n             ' = ',\n             'float',\n             '(',\n             'input',\n             '(',\n             '\"',\n             '输入一个数字: ',\n             '\"',\n             ')',\n             ')',\n             '\\n',\n             'if',\n             ' ',\n             'num',\n             ' > ',\n             '0',\n             ':\\n   ',\n             'print',\n             '(',\n             '\"',\n             '正数',\n             '\"',\n             ')',\n             '\\n',\n             'elif',\n             ' ',\n             'num',\n             ' == ',\n             '0',\n             ':\\n   ',\n             'print',\n             '(',\n             '\"',\n             '零',\n             '\"',\n             ')',\n             '\\n',\n             'else',\n             ':\\n   ',\n             'print',\n             '(',\n             '\"',\n             '负数',\n             '\"',\n             ')',\n             '\\r\\n',\n             '\\r\\n',\n             ' \\r\\n',\n             '实例(Python 3.0+)',\n             ' \\r\\n',\n             '\\r\\n',\n             '# Filename ：test.py',\n             '\\n',\n             '# author by : www.runoob.com',\n             '\\n \\n',\n             '# 内嵌 if 语句',\n             '\\n \\n',\n             'num',\n             ' = ',\n             'float',\n             '(',\n             'input',\n             '(',\n             '\"',\n             '输入一个数字: ',\n             '\"',\n             ')',\n             ')',\n             '\\n',\n             'if',\n             ' ',\n             'num',\n             ' >= ',\n             '0',\n             ':\\n   ',\n             'if',\n             ' ',\n             'num',\n             ' == ',\n             '0',\n             ':\\n       ',\n             'print',\n             '(',\n             '\"',\n             '零',\n             '\"',\n             ')',\n             '\\n   ',\n             'else',\n             ':\\n       ',\n             'print',\n             '(',\n             '\"',\n             '正数',\n             '\"',\n             ')',\n             '\\n',\n             'else',\n             ':\\n   ',\n             'print',\n             '(',\n             '\"',\n             '负数',\n             '\"',\n             ')',\n             '\\r\\n',\n             '\\r\\n'],\n 'title': 'Python if 语句'}\n2021-01-09 18:19:43 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python-string-reverse.html> (referer: None)\n2021-01-09 18:19:43 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python-string-reverse.html>\n{'content': [' \\r\\n',\n             '实例 1：使用字符串切片',\n             ' \\r\\n',\n             '\\r\\n',\n             'str',\n             '=',\n             \"'\",\n             'Runoob',\n             \"'\",\n             '\\n',\n             'print',\n             '(',\n             'str',\n             '[',\n             '::-',\n             '1',\n             ']',\n             ')',\n             '\\r\\n',\n             ' \\r\\n',\n             '实例 2：使用 reversed() ',\n             ' \\r\\n',\n             '\\r\\n',\n             'str',\n             '=',\n             \"'\",\n             'Runoob',\n             \"'\",\n             '\\n',\n             'print',\n             '(',\n             \"'\",\n             \"'\",\n             '.',\n             'join',\n             '(',\n             'reversed',\n             '(',\n             'str',\n             ')',\n             ')',\n             ')',\n             '\\r\\n'],\n 'title': 'Python 字符串翻转'}\n2021-01-09 18:19:46 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-swap-variables.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:19:46 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-swap-variables.html>\n{'content': [' \\r\\n',\n             '实例',\n             ' \\r\\n',\n             '\\r\\n',\n             '# -*- coding: UTF-8 -*-',\n             '\\n \\n',\n             '# Filename : test.py',\n             '\\n',\n             '# author by : www.runoob.com',\n             '\\n \\n',\n             '# 用户输入',\n             '\\n \\n',\n             'x',\n             ' = ',\n             'input',\n             '(',\n             \"'\",\n             '输入 x 值: ',\n             \"'\",\n             ')',\n             '\\n',\n             'y',\n             ' = ',\n             'input',\n             '(',\n             \"'\",\n             '输入 y 值: ',\n             \"'\",\n             ')',\n             '\\n \\n',\n             '# 创建临时变量，并交换',\n             '\\n',\n             'temp',\n             ' = ',\n             'x',\n             '\\n',\n             'x',\n             ' = ',\n             'y',\n             '\\n',\n             'y',\n             ' = ',\n             'temp',\n             '\\n \\n',\n             'print',\n             '(',\n             \"'\",\n             '交换后 x 的值为: {}',\n             \"'\",\n             '.',\n             'format',\n             '(',\n             'x',\n             ')',\n             ')',\n             '\\n',\n             'print',\n             '(',\n             \"'\",\n             '交换后 y 的值为: {}',\n             \"'\",\n             '.',\n             'format',\n             '(',\n             'y',\n             ')',\n             ')',\n             '\\r\\n',\n             '\\r\\n',\n             ' \\r\\n',\n             '实例',\n             ' \\r\\n',\n             '\\r\\n',\n             '# -*- coding: UTF-8 -*-',\n             '\\n \\n',\n             '# Filename : test.py',\n             '\\n',\n             '# author by : www.runoob.com',\n             '\\n \\n',\n             '# 用户输入',\n             '\\n \\n',\n             'x',\n             ' = ',\n             'input',\n             '(',\n             \"'\",\n             '输入 x 值: ',\n             \"'\",\n             ')',\n             '\\n',\n             'y',\n             ' = ',\n             'input',\n             '(',\n             \"'\",\n             '输入 y 值: ',\n             \"'\",\n             ')',\n             '\\n \\n',\n             '# 不使用临时变量',\n             '\\n',\n             'x',\n             ',',\n             'y',\n             ' = ',\n             'y',\n             ',',\n             'x',\n             '\\n \\n',\n             'print',\n             '(',\n             \"'\",\n             '交换后 x 的值为: {}',\n             \"'\",\n             '.',\n             'format',\n             '(',\n             'x',\n             ')',\n             ')',\n             '\\n',\n             'print',\n             '(',\n             \"'\",\n             '交换后 y 的值为: {}',\n             \"'\",\n             '.',\n             'format',\n             '(',\n             'y',\n             ')',\n             ')',\n             '\\r\\n',\n             '\\r\\n'],\n 'title': 'Python 交换变量'}\n2021-01-09 18:19:50 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-celsius-fahrenheit.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:19:50 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-celsius-fahrenheit.html>\n{'content': [' \\r\\n',\n             '实例',\n             ' \\r\\n',\n             '\\r\\n',\n             '# -*- coding: UTF-8 -*-',\n             '\\n \\n',\n             '# Filename : test.py',\n             '\\n',\n             '# author by : www.runoob.com',\n             '\\n \\n',\n             '# 用户输入摄氏温度',\n             '\\n \\n',\n             '# 接收用户输入',\n             '\\n',\n             'celsius',\n             ' = ',\n             'float',\n             '(',\n             'input',\n             '(',\n             \"'\",\n             '输入摄氏温度: ',\n             \"'\",\n             ')',\n             ')',\n             '\\n \\n',\n             '# 计算华氏温度',\n             '\\n',\n             'fahrenheit',\n             ' = ',\n             '(',\n             'celsius',\n             ' * ',\n             '1.8',\n             ')',\n             ' + ',\n             '32',\n             '\\n',\n             'print',\n             '(',\n             \"'\",\n             '%0.1f 摄氏温度转为华氏温度为 %0.1f ',\n             \"'\",\n             ' %',\n             '(',\n             'celsius',\n             ',',\n             'fahrenheit',\n             ')',\n             ')',\n             '\\r\\n'],\n 'title': 'Python 摄氏温度转华氏温度'}\n2021-01-09 18:19:54 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-random-number.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:19:54 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-random-number.html>\n{'content': [' \\r\\n',\n             '实例',\n             ' \\r\\n',\n             '\\r\\n',\n             '# -*- coding: UTF-8 -*-',\n             '\\n \\n',\n             '# Filename : test.py',\n             '\\n',\n             '# author by : www.runoob.com',\n             '\\n \\n',\n             '# 生成 0 ~ 9 之间的随机数',\n             '\\n \\n',\n             '# 导入 random(随机数) 模块',\n             '\\n',\n             'import',\n             ' ',\n             'random',\n             '\\n \\n',\n             'print',\n             '(',\n             'random',\n             '.',\n             'randint',\n             '(',\n             '0',\n             ',',\n             '9',\n             ')',\n             ')',\n             '\\r\\n'],\n 'title': 'Python 随机数生成'}\n2021-01-09 18:19:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-area-of-a-circle.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:19:57 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-area-of-a-circle.html>\n{'content': ['实例',\n             ' ',\n             '\\n',\n             '# 定义一个方法来计算圆的面积',\n             '\\n',\n             'def',\n             ' findArea',\n             '(',\n             'r',\n             ')',\n             ': ',\n             '\\n\\xa0 \\xa0 PI ',\n             '=',\n             ' ',\n             '3.142',\n             '\\n\\xa0 \\xa0 ',\n             'return',\n             ' PI * ',\n             '(',\n             'r*r',\n             ')',\n             '\\n\\xa0 ',\n             '\\n',\n             '# 调用方法',\n             '\\n',\n             'print',\n             '(',\n             '\"圆的面积为 %.6f\"',\n             ' % findArea',\n             '(',\n             '5',\n             ')',\n             ')',\n             ' ',\n             '\\n'],\n 'title': 'Python 计算圆的面积'}\n2021-01-09 18:20:01 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-area-triangle.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:20:01 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-area-triangle.html>\n{'content': [' \\r\\n',\n             '实例(Python 3.0+)',\n             ' \\r\\n',\n             '\\r\\n',\n             '# -*- coding: UTF-8 -*-',\n             '\\n \\n',\n             '# Filename : test.py',\n             '\\n',\n             '# author by : www.runoob.com',\n             '\\n \\n \\n',\n             'a',\n             ' = ',\n             'float',\n             '(',\n             'input',\n             '(',\n             \"'\",\n             '输入三角形第一边长: ',\n             \"'\",\n             ')',\n             ')',\n             '\\n',\n             'b',\n             ' = ',\n             'float',\n             '(',\n             'input',\n             '(',\n             \"'\",\n             '输入三角形第二边长: ',\n             \"'\",\n             ')',\n             ')',\n             '\\n',\n             'c',\n             ' = ',\n             'float',\n             '(',\n             'input',\n             '(',\n             \"'\",\n             '输入三角形第三边长: ',\n             \"'\",\n             ')',\n             ')',\n             '\\n \\n',\n             '# 计算半周长',\n             '\\n',\n             's',\n             ' = ',\n             '(',\n             'a',\n             ' + ',\n             'b',\n             ' + ',\n             'c',\n             ')',\n             ' / ',\n             '2',\n             '\\n \\n',\n             '# 计算面积',\n             '\\n',\n             'area',\n             ' = ',\n             '(',\n             's',\n             '*',\n             '(',\n             's',\n             '-',\n             'a',\n             ')',\n             '*',\n             '(',\n             's',\n             '-',\n             'b',\n             ')',\n             '*',\n             '(',\n             's',\n             '-',\n             'c',\n             ')',\n             ')',\n             ' ** ',\n             '0.5',\n             '\\n',\n             'print',\n             '(',\n             \"'\",\n             '三角形面积为 %0.2f',\n             \"'\",\n             ' %',\n             'area',\n             ')',\n             '\\r\\n'],\n 'title': 'Python 计算三角形的面积'}\n2021-01-09 18:20:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-quadratic-roots.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:20:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-quadratic-roots.html>\n{'content': [' \\r\\n',\n             '实例(Python 3.0+)',\n             ' \\r\\n',\n             '\\r\\n',\n             '# Filename : test.py',\n             '\\n',\n             '# author by : www.runoob.com',\n             '\\n \\n',\n             '# 二次方程式 ax**2 + bx + c = 0',\n             '\\n',\n             '# a、b、c 用户提供，为实数，a ≠ 0',\n             '\\n \\n',\n             '# 导入 cmath(复杂数学运算) 模块',\n             '\\n',\n             'import',\n             ' ',\n             'cmath',\n             '\\n \\n',\n             'a',\n             ' = ',\n             'float',\n             '(',\n             'input',\n             '(',\n             \"'\",\n             '输入 a: ',\n             \"'\",\n             ')',\n             ')',\n             '\\n',\n             'b',\n             ' = ',\n             'float',\n             '(',\n             'input',\n             '(',\n             \"'\",\n             '输入 b: ',\n             \"'\",\n             ')',\n             ')',\n             '\\n',\n             'c',\n             ' = ',\n             'float',\n             '(',\n             'input',\n             '(',\n             \"'\",\n             '输入 c: ',\n             \"'\",\n             ')',\n             ')',\n             '\\n \\n',\n             '# 计算',\n             '\\n',\n             'd',\n             ' = ',\n             '(',\n             'b',\n             '**',\n             '2',\n             ')',\n             ' - ',\n             '(',\n             '4',\n             '*',\n             'a',\n             '*',\n             'c',\n             ')',\n             '\\n \\n',\n             '# 两种求解方式',\n             '\\n',\n             'sol1',\n             ' = ',\n             '(',\n             '-',\n             'b',\n             '-',\n             'cmath',\n             '.',\n             'sqrt',\n             '(',\n             'd',\n             ')',\n             ')',\n             '/',\n             '(',\n             '2',\n             '*',\n             'a',\n             ')',\n             '\\n',\n             'sol2',\n             ' = ',\n             '(',\n             '-',\n             'b',\n             '+',\n             'cmath',\n             '.',\n             'sqrt',\n             '(',\n             'd',\n             ')',\n             ')',\n             '/',\n             '(',\n             '2',\n             '*',\n             'a',\n             ')',\n             '\\n \\n',\n             'print',\n             '(',\n             \"'\",\n             '结果为 {0} 和 {1}',\n             \"'\",\n             '.',\n             'format',\n             '(',\n             'sol1',\n             ',',\n             'sol2',\n             ')',\n             ')',\n             '\\r\\n'],\n 'title': 'Python 二次方程'}\n2021-01-09 18:20:09 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-square-root.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:20:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-square-root.html>\n{'content': [' \\r\\n',\n             '实例(Python 3.0+)',\n             ' \\r\\n',\n             '\\r\\n',\n             '# -*- coding: UTF-8 -*-',\n             '\\n \\n',\n             '# Filename : test.py',\n             '\\n',\n             '# author by : www.runoob.com',\n             '\\n \\n',\n             'num',\n             ' = ',\n             'float',\n             '(',\n             'input',\n             '(',\n             \"'\",\n             '请输入一个数字： ',\n             \"'\",\n             ')',\n             ')',\n             '\\n',\n             'num_sqrt',\n             ' = ',\n             'num',\n             ' ** ',\n             '0.5',\n             '\\n',\n             'print',\n             '(',\n             \"'\",\n             ' %0.3f 的平方根为 %0.3f',\n             \"'\",\n             '%',\n             '(',\n             'num',\n             ' ,',\n             'num_sqrt',\n             ')',\n             ')',\n             '\\r\\n',\n             ' \\r\\n',\n             '实例(Python 3.0+)',\n             ' \\r\\n',\n             '\\r\\n',\n             '# -*- coding: UTF-8 -*-',\n             '\\n \\n',\n             '# Filename : test.py',\n             '\\n',\n             '# author by : www.runoob.com',\n             '\\n \\n',\n             '# 计算实数和复数平方根',\n             '\\n',\n             '# 导入复数数学模块',\n             '\\n \\n',\n             'import',\n             ' ',\n             'cmath',\n             '\\n \\n',\n             'num',\n             ' = ',\n             'int',\n             '(',\n             'input',\n             '(',\n             '\"',\n             '请输入一个数字: ',\n             '\"',\n             ')',\n             ')',\n             '\\n',\n             'num_sqrt',\n             ' = ',\n             'cmath',\n             '.',\n             'sqrt',\n             '(',\n             'num',\n             ')',\n             '\\n',\n             'print',\n             '(',\n             \"'\",\n             '{0} 的平方根为 {1:0.3f}+{2:0.3f}j',\n             \"'\",\n             '.',\n             'format',\n             '(',\n             'num',\n             ' ,',\n             'num_sqrt',\n             '.',\n             'real',\n             ',',\n             'num_sqrt',\n             '.',\n             'imag',\n             ')',\n             ')',\n             '\\r\\n'],\n 'title': 'Python 平方根'}\n2021-01-09 18:20:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-add-number.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:20:13 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-add-number.html>\n{'content': [' \\r\\n',\n             '实例(Python 3.0+)',\n             ' \\r\\n',\n             '\\r\\n',\n             '# -*- coding: UTF-8 -*-',\n             '\\n \\n',\n             '# Filename : test.py',\n             '\\n',\n             '# author by : www.runoob.com',\n             '\\n \\n',\n             '# 用户输入数字',\n             '\\n',\n             'num1',\n             ' = ',\n             'input',\n             '(',\n             \"'\",\n             '输入第一个数字：',\n             \"'\",\n             ')',\n             '\\n',\n             'num2',\n             ' = ',\n             'input',\n             '(',\n             \"'\",\n             '输入第二个数字：',\n             \"'\",\n             ')',\n             '\\n \\n',\n             '# 求和',\n             '\\n',\n             'sum',\n             ' = ',\n             'float',\n             '(',\n             'num1',\n             ')',\n             ' + ',\n             'float',\n             '(',\n             'num2',\n             ')',\n             '\\n \\n',\n             '# 显示计算结果',\n             '\\n',\n             'print',\n             '(',\n             \"'\",\n             '数字 {0} 和 {1} 相加结果为： {2}',\n             \"'\",\n             '.',\n             'format',\n             '(',\n             'num1',\n             ', ',\n             'num2',\n             ', ',\n             'sum',\n             ')',\n             ')',\n             '\\r\\n',\n             ' \\r\\n',\n             '实例(Python 3.0+)',\n             ' \\r\\n',\n             '\\r\\n',\n             '# -*- coding: UTF-8 -*-',\n             '\\n \\n',\n             '# Filename : test.py',\n             '\\n',\n             '# author by : www.runoob.com',\n             '\\n \\n',\n             'print',\n             '(',\n             \"'\",\n             '两数之和为 %.1f',\n             \"'\",\n             ' %',\n             '(',\n             'float',\n             '(',\n             'input',\n             '(',\n             \"'\",\n             '输入第一个数字：',\n             \"'\",\n             ')',\n             ')',\n             '+',\n             'float',\n             '(',\n             'input',\n             '(',\n             \"'\",\n             '输入第二个数字：',\n             \"'\",\n             ')',\n             ')',\n             ')',\n             ')',\n             '\\r\\n'],\n 'title': 'Python 数字求和'}\n2021-01-09 18:20:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.runoob.com/python3/python3-helloworld.html> (referer: https://www.runoob.com/python3/python3-examples.html)\n2021-01-09 18:20:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.runoob.com/python3/python3-helloworld.html>\n{'content': ['实例',\n             ' ',\n             '\\n',\n             '# -*- coding: UTF-8 -*-',\n             '\\n',\n             '\\n',\n             '# Filename : helloworld.py',\n             '\\n',\n             '# author by : www.runoob.com',\n             '\\n',\n             '\\n',\n             '# 该实例输出 Hello World!',\n             '\\n',\n             'print',\n             '(',\n             \"'Hello World!'\",\n             ')',\n             '\\n'],\n 'title': 'Python Hello World 实例'}\n2021-01-09 18:20:17 [scrapy.core.engine] INFO: Closing spider (finished)\n2021-01-09 18:20:17 [scrapy.statscollectors] INFO: Dumping Scrapy stats:\n{'downloader/request_bytes': 38604,\n 'downloader/request_count': 79,\n 'downloader/request_method_count/GET': 79,\n 'downloader/response_bytes': 1298772,\n 'downloader/response_count': 79,\n 'downloader/response_status_count/200': 77,\n 'downloader/response_status_count/301': 2,\n 'elapsed_time_seconds': 289.19254,\n 'finish_reason': 'finished',\n 'finish_time': datetime.datetime(2021, 1, 9, 10, 20, 17, 180355),\n 'item_scraped_count': 74,\n 'log_count/DEBUG': 153,\n 'log_count/ERROR': 2,\n 'log_count/INFO': 14,\n 'request_depth_max': 1,\n 'response_received_count': 77,\n 'scheduler/dequeued': 79,\n 'scheduler/dequeued/memory': 79,\n 'scheduler/enqueued': 79,\n 'scheduler/enqueued/memory': 79,\n 'start_time': datetime.datetime(2021, 1, 9, 10, 15, 27, 987815)}\n2021-01-09 18:20:17 [scrapy.core.engine] INFO: Spider closed (finished)\n\n***Repl Closed***\n",
			"settings":
			{
				"buffer_size": 286133,
				"line_ending": "Windows",
				"name": "*REPL* [python]",
				"read_only": true,
				"scratch": true
			}
		},
		{
			"file": "PythonExample/settings.py",
			"settings":
			{
				"buffer_size": 3353,
				"line_ending": "Unix"
			}
		},
		{
			"file": "PythonExample/items.py",
			"settings":
			{
				"buffer_size": 322,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "PythonExample/pipelines.py",
			"settings":
			{
				"buffer_size": 588,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "PythonExample/spiders/python3exam.py",
			"settings":
			{
				"buffer_size": 1304,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "read_html.py",
			"settings":
			{
				"buffer_size": 874,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				],
				[
					"Packages/User/python3.8.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C Single File.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C Single File.sublime-build",
					"Run"
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/C++/C Single File.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				],
				[
					"Packages/User/javascript.sublime-build",
					""
				]
			],
			[
				"Packages/User/javascript.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 157.0,
		"history":
		[
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())",
			"    import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/E/python日记/python爬虫/PythonExample",
		"/E/python日记/python爬虫/PythonExample/PythonExample"
	],
	"file_history":
	[
		"/E/python日记/python爬虫/PythonExample/ex.py",
		"/E/python日记/python爬虫/PythonExample/exam.html",
		"/E/python日记/python爬虫/PythonExample/PythonExample/settings.py",
		"/E/python日记/python爬虫/PythonExample/read_html.py",
		"/E/python日记/脚本/move_file.py",
		"/E/python日记/python爬虫/PythonExample/以下实例为通过用户输入两个数字，并计算两个数字之和：.py",
		"/E/python日记/python爬虫/PythonExample/python3-random-number.py",
		"/E/python日记/python爬虫/爬虫过关练习/CssMisleadSpider/CssMisleadSpider/items.py",
		"/E/python日记/python爬虫/爬虫过关练习/CssMisleadSpider/CssMisleadSpider/settings.py",
		"/E/python日记/脚本/read_html.py",
		"/E/jupyter-notebook/pandas_excel.ipynb",
		"/C/Users/ADMINI~1/AppData/Local/Temp/360zip$Temp/360$0/01_request.py",
		"/E/jupyter-notebook/Untitled1.ipynb",
		"/E/python日记/python爬虫/抢购/jd_seckill-master/jd_spider_requests.py",
		"/E/python日记/python爬虫/抢购/jd_seckill-master/timer.py",
		"/E/python日记/小项目/myspider/timer.py",
		"/E/python日记/python爬虫/爬虫过关练习/CssMisleadSpider/CssMisleadSpider/exten_email.py",
		"/E/python3.8/Lib/site-packages/scrapy/extension.py",
		"/E/python日记/python爬虫/爬虫过关练习/CssMisleadSpider/start.py",
		"/E/python日记/python爬虫/爬虫过关练习/CssMisleadSpider/CssMisleadSpider/spiders/glidedsky.py",
		"/E/python日记/python爬虫/爬虫过关练习/CssMisleadSpider/CssMisleadSpider/utils.py",
		"/E/python3.8/Lib/site-packages/scrapy/contracts/__init__.py",
		"/E/python3.8/Lib/site-packages/scrapy/statscollectors.py",
		"/E/python日记/python爬虫/ZhihuSpider/ZhihuHotQusSpider_redis/ZhihuHotQusSpider/settings.py",
		"/E/python日记/脚本/转数据库导入/ctrl_redis.py",
		"/E/python日记/脚本/转数据库导入/mysql_connector.py",
		"/C/Users/Administrator/Desktop/question_copy.sql",
		"/E/python日记/脚本/offset_str.py",
		"/E/python日记/脚本/转数据库导入/adbapi_mysql.py",
		"/E/python日记/脚本/转数据库导入/xls_to_mysql.py",
		"/E/python日记/python爬虫/ZhihuSpider/ZhihuHotQusSpider_redis/ZhihuHotQusSpider/middlewares.py",
		"/E/python日记/python爬虫/ZhihuSpider/ZhihuHotQusSpider_redis/ZhihuHotQusSpider/pipelines.py",
		"/E/python日记/python爬虫/ZhihuSpider/ZhihuHotQusSpider_redis/ZhihuHotQusSpider/spiders/ctrl_redis.py",
		"/E/python3.8/Lib/site-packages/scrapy_redis/spiders.py",
		"/E/python日记/python爬虫/ZhihuSpider/ZhihuHotQusSpider_redis/read_html.py",
		"/E/python日记/python爬虫/ZhihuSpider/ZhihuHotQusSpider_redis/test.html",
		"/E/python日记/python爬虫/ZhihuSpider/ZhihuHotQusSpider_redis/ZhihuHotQusSpider/items.py",
		"/C/Users/Administrator/Desktop/redis_init_script",
		"/E/python日记/python爬虫/ZhihuHotQusSpider/ZhihuHotQusSpider/pipelines.py",
		"/E/python日记/python爬虫/ZhihuHotQusSpider/start.py",
		"/E/python日记/python爬虫/ZhihuHotQusSpider/ZhihuHotQusSpider/settings.py",
		"/E/python日记/python爬虫/ZhihuHotQusSpider/read_html.py",
		"/E/python日记/python爬虫/ZhihuHotQusSpider/ZhihuHotQusSpider/spiders/zhihu.py",
		"/E/python日记/脚本/read_xls.py",
		"/E/python日记/python爬虫/ZhihuHotQusSpider/ZhihuHotQusSpider/items.py",
		"/E/python日记/python爬虫/ZhihuHotQusSpider/test.html",
		"/E/python日记/python爬虫/ZhihuHotQusSpider/answer.json",
		"/E/python日记/python爬虫/爬虫过关练习/CssMisleadSpider/CssMisleadSpider/pipelines.py",
		"/E/python日记/脚本/test.js",
		"/E/python日记/python爬虫/test.js",
		"/C/Users/Administrator/AppData/Roaming/Sublime Text 3/Packages/User/python3.8.sublime-build",
		"/C/Users/Administrator/AppData/Roaming/Sublime Text 3/Packages/User/javascript.sublime-build",
		"/E/python日记/python爬虫/爬虫过关练习/SliderCaptchaSpider/start.py",
		"/E/python日记/python爬虫/爬虫过关练习/SliderCaptchaSpider/SliderCaptchaSpider/middlewares.py",
		"/E/python日记/python爬虫/爬虫过关练习/SliderCaptchaSpider/SliderCaptchaSpider/settings.py",
		"/E/python日记/python爬虫/爬虫过关练习/SliderCaptchaSpider/SliderCaptchaSpider/spiders/glidedsky.py",
		"/E/python日记/python爬虫/爬虫过关练习/SliderCaptchaSpider/cookies.txt",
		"/E/python日记/python爬虫/guess.py",
		"/E/python日记/python爬虫/爬虫过关练习/FontMisleadSpider/FontMisleadSpider/spiders/glidedsky.py",
		"/E/python日记/python爬虫/爬虫过关练习/CssMisleadSpider/CssMisleadSpider/parse_css.py",
		"/E/python日记/python爬虫/爬虫过关练习/CssMisleadSpider/test.py",
		"/E/python日记/python爬虫/爬虫过关练习/CssMisleadSpider/test.html",
		"/E/python日记/python爬虫/爬虫过关练习/FontMisleadSpider/FontMisleadSpider/pipelines.py",
		"/E/python日记/python爬虫/爬虫过关练习/FontMisleadSpider/start.py",
		"/E/python日记/python爬虫/爬虫过关练习/FontMisleadSpider/hello.py",
		"/E/python日记/python爬虫/爬虫过关练习/FontMisleadSpider/FontMisleadSpider/settings.py",
		"/E/python日记/python爬虫/dou_ban_top250.py",
		"/E/python日记/python爬虫/world_country.py",
		"/E/python日记/python爬虫/爬虫练习项目.sublime-project",
		"/C/Users/Administrator/Desktop/book.py",
		"/E/python日记/脚本/hello.py",
		"/C/Users/Administrator/AppData/Roaming/Sublime Text 3/Packages/User/SublimeTmpl/templates/python.tmpl",
		"/C/Users/Administrator/AppData/Roaming/Sublime Text 3/Packages/User/SublimeTmpl.sublime-settings",
		"/C/Users/Administrator/AppData/Roaming/Sublime Text 3/Packages/SublimeTmpl/SublimeTmpl.sublime-settings",
		"/C/Users/Administrator/AppData/Roaming/Sublime Text 3/Packages/User/SublimeTmpl/Default.sublime-commands",
		"/G/python/Scrapy_project/京东卷筒纸爬虫/zhi_jin/zhi_jin/spiders/zhijin.py",
		"/G/python/Scrapy_project/京东卷筒纸爬虫/zhi_jin/start.py",
		"/G/python/Scrapy_project/京东卷筒纸爬虫/zhi_jin/result.json",
		"/G/python/Scrapy_project/京东卷筒纸爬虫/zhi_jin/result.txt",
		"/E/python日记/脚本/mao_yan.py",
		"/G/python/Scrapy_project/京东卷筒纸爬虫/zhi_jin/zhi_jin/items.py",
		"/E/python日记/脚本/mysql_connector.py",
		"/G/python/Scrapy_project/京东卷筒纸爬虫/zhi_jin/zhi_jin/pipelines.py",
		"/G/代码注释/DecryptLogin-master/examples/jdgoods/jdgoods.py",
		"/G/python/Scrapy_project/京东卷筒纸爬虫/zhi_jin/zhi_jin/settings.py",
		"/G/python/Scrapy_project/宅福利/zfl/zfl/spiders/jvid_spider.py",
		"/E/python3.8/Lib/site-packages/requests/cookies.py",
		"/E/python3.8/Lib/site-packages/requests/sessions.py",
		"/G/代码注释/DecryptLogin-master/examples/weiboSender/weiboSender.py",
		"/G/代码注释/DecryptLogin-master/examples/jdgoods/README.md",
		"/G/代码注释/DecryptLogin-master/README.md",
		"/G/代码注释/DecryptLogin-master/DecryptLogin/core/baidupan.py",
		"/G/代码注释/DecryptLogin-master/DecryptLogin/core/__init__.py",
		"/G/代码注释/DecryptLogin-master/DecryptLogin/__init__.py",
		"/E/python日记/脚本/read_file.py",
		"/F/PYTHON_CODE/python/数据分析/头条作者文章/toutiao_user.py",
		"/F/PYTHON_CODE/python/python/pandas/series.py",
		"/E/python日记/脚本/test.c",
		"/E/python日记/脚本/test.txt",
		"/E/python日记/脚本/循环队列/CircularQueue.py",
		"/C/Users/Administrator/Desktop/PythonEngineer-master/mnist/kerasmnist.py",
		"/E/python3.8/Lib/test/test_math.py",
		"/E/python日记/脚本/fibo.py",
		"/G/python/Scrapy_project/知乎用户宇宙图/zhihu/zhihu/spiders/zhihu_user.py",
		"/G/python/test.py",
		"/G/python/Scrapy_project/每日简报/jianbao/jianbao/middlewares.py",
		"/G/python/Scrapy_project/京东卷筒纸爬虫/zhi_jin/zhi_jin/middlewares.py",
		"/C/Users/Administrator/AppData/Roaming/Sublime Text 3/Packages/SublimeREPL/SublimeREPL.sublime-settings",
		"/C/Users/Administrator/AppData/Roaming/Sublime Text 3/Packages/User/SublimeREPL.sublime-settings",
		"/G/python/Scrapy_project/GerapyPyppeteer-master/gerapy_pyppeteer/downloadermiddlewares.py",
		"/G/python/Scrapy_project/GerapyPyppeteer-master/gerapy_pyppeteer/request.py",
		"/G/python/Scrapy_project/知乎用户宇宙图/zhihu_selenium/start.py",
		"/G/python/Scrapy_project/知乎用户宇宙图/zhihu_selenium/zhihu_selenium/zhihuCookies.json",
		"/G/python/Scrapy_project/知乎用户宇宙图/zhihu_selenium/zhihu_selenium/middlewares.py",
		"/G/python/Scrapy_project/知乎用户宇宙图/zhihu_selenium/zhihu_selenium/settings.py",
		"/G/python/Scrapy_project/知乎用户宇宙图/zhihu_selenium/zhihu_selenium/pipelines.py",
		"/G/python/Scrapy_project/知乎用户宇宙图/zhihu_selenium/zhihu_selenium/items.py",
		"/G/python/Scrapy_project/ZhihuCrawler-master/ZhihuCrawler/cookies.py",
		"/G/python/Scrapy_project/ZhihuCrawler-master/ZhihuCrawler/spiders/zhihu.py",
		"/G/python/Scrapy_project/ZhihuCrawler-master/ZhihuCrawler/middlewares.py",
		"/E/python3.8/Lib/site-packages/scrapy/utils/response.py",
		"/G/python/Scrapy_project/免费ip代理/proxy_ip/proxy_ip/spiders/proxy.py",
		"/G/python/Scrapy_project/知乎用户宇宙图/zhihu/start.py",
		"/G/python/Scrapy_project/知乎用户宇宙图/zhihu/zhihu/settings.py",
		"/G/python/Scrapy_project/知乎用户宇宙图/zhihu/zhihu/middlewares.py",
		"/G/python/Scrapy_project/免费ip代理/proxy_ip/proxy_ip/middlewares.py",
		"/G/python/Scrapy_project/免费ip代理/free_ip/free_ip/pipelines.py",
		"/G/python/Scrapy_project/免费ip代理/free_ip/free_ip/settings.py"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 114.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"<ul"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"folders":
	[
		{
			"path": "E:\\python日记\\python爬虫\\PythonExample"
		},
		{
			"path": "E:\\python日记\\python爬虫\\爬虫过关练习\\CssMisleadSpider"
		}
	],
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "start.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 80,
						"regions":
						{
						},
						"selection":
						[
							[
								80,
								80
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 286133,
						"regions":
						{
						},
						"selection":
						[
							[
								7637,
								7659
							]
						],
						"settings":
						{
							"auto_complete": true,
							"auto_indent": false,
							"detect_indentation": false,
							"gutter": false,
							"history_arrows": true,
							"incomplete_sync": null,
							"indent_subsequent_lines": false,
							"line_numbers": false,
							"repl": true,
							"repl_external_id": "python",
							"repl_id": "f6efb42768ab451b9a95949b96a519e3",
							"repl_restart_args":
							{
								"cmd":
								[
									"python",
									"-u",
									"$file_basename"
								],
								"cwd": "$file_path",
								"encoding": "utf8",
								"extend_env":
								{
									"PYTHONIOENCODING": "utf-8"
								},
								"external_id": "python",
								"syntax": "Packages/Python/Python.tmLanguage",
								"type": "subprocess"
							},
							"repl_sublime2": false,
							"smart_indent": false,
							"spell_check": false,
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 292928.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "PythonExample/settings.py",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 3353,
						"regions":
						{
						},
						"selection":
						[
							[
								1160,
								1091
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 276.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "PythonExample/items.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 322,
						"regions":
						{
						},
						"selection":
						[
							[
								312,
								312
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "PythonExample/pipelines.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 588,
						"regions":
						{
						},
						"selection":
						[
							[
								588,
								588
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "PythonExample/spiders/python3exam.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1304,
						"regions":
						{
						},
						"selection":
						[
							[
								1303,
								1173
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 69.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "read_html.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 874,
						"regions":
						{
						},
						"selection":
						[
							[
								874,
								874
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 207.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 46.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SFTP":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 437.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 400.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
